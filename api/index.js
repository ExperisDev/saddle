Index.PACKAGES = {"org.saddle.csv" : [{"name" : "org.saddle.csv.CsvParser", "shortDescription" : "Csv parsing utilities", "object" : "org\/saddle\/csv\/CsvParser$.html", "members_object" : [{"label" : "parseFromIterator", "tail" : "(source: Iterator[Array[Char]], cols: Seq[Int], fieldSeparator: Char, quoteChar: Char, recordSeparator: String, maxLines: Long, header: Boolean)(st: ST[T]): Either[String, (Frame[Int, Int, T], Option[Index[String]])]", "member" : "org.saddle.csv.CsvParser.parseFromIterator", "link" : "org\/saddle\/csv\/CsvParser$.html#parseFromIterator[T](source:Iterator[Array[Char]],cols:Seq[Int],fieldSeparator:Char,quoteChar:Char,recordSeparator:String,maxLines:Long,header:Boolean)(implicitst:org.saddle.ST[T]):Either[String,(org.saddle.Frame[Int,Int,T],Option[org.saddle.Index[String]])]", "kind" : "def"}, {"label" : "parseHeader", "tail" : "(source: Source, cols: Seq[Int], fieldSeparator: Char, quoteChar: Char, recordSeparator: String, bufferSize: Int, maxLines: Long)(st: ST[T]): Either[String, Frame[Int, String, T]]", "member" : "org.saddle.csv.CsvParser.parseHeader", "link" : "org\/saddle\/csv\/CsvParser$.html#parseHeader[T](source:scala.io.Source,cols:Seq[Int],fieldSeparator:Char,quoteChar:Char,recordSeparator:String,bufferSize:Int,maxLines:Long)(implicitst:org.saddle.ST[T]):Either[String,org.saddle.Frame[Int,String,T]]", "kind" : "def"}, {"label" : "parse", "tail" : "(source: Source, cols: Seq[Int], fieldSeparator: Char, quoteChar: Char, recordSeparator: String, bufferSize: Int, maxLines: Long)(st: ST[T]): Either[String, Frame[Int, Int, T]]", "member" : "org.saddle.csv.CsvParser.parse", "link" : "org\/saddle\/csv\/CsvParser$.html#parse[T](source:scala.io.Source,cols:Seq[Int],fieldSeparator:Char,quoteChar:Char,recordSeparator:String,bufferSize:Int,maxLines:Long)(implicitst:org.saddle.ST[T]):Either[String,org.saddle.Frame[Int,Int,T]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/csv\/CsvParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/csv\/CsvParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/csv\/CsvParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/csv\/CsvParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/csv\/CsvParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/csv\/CsvParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/csv\/CsvParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/csv\/CsvParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/csv\/CsvParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/csv\/CsvParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/csv\/CsvParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/csv\/CsvParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/csv\/CsvParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/csv\/CsvParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/csv\/CsvParser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/csv\/CsvParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/csv\/CsvParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/csv\/CsvParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/csv\/CsvParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.csv.CsvSettings", "shortDescription" : "Settings for writing a CSV file", "members_case class" : [{"member" : "org.saddle.csv.CsvSettings#<init>", "error" : "unsupported entity"}, {"label" : "encoding", "tail" : ": String", "member" : "org.saddle.csv.CsvSettings.encoding", "link" : "org\/saddle\/csv\/CsvSettings.html#encoding:String", "kind" : "val"}, {"label" : "useQuote", "tail" : ": Boolean", "member" : "org.saddle.csv.CsvSettings.useQuote", "link" : "org\/saddle\/csv\/CsvSettings.html#useQuote:Boolean", "kind" : "val"}, {"label" : "quoteChar", "tail" : ": Char", "member" : "org.saddle.csv.CsvSettings.quoteChar", "link" : "org\/saddle\/csv\/CsvSettings.html#quoteChar:Char", "kind" : "val"}, {"label" : "separChar", "tail" : ": Char", "member" : "org.saddle.csv.CsvSettings.separChar", "link" : "org\/saddle\/csv\/CsvSettings.html#separChar:Char", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/csv\/CsvSettings.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/csv\/CsvSettings.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/csv\/CsvSettings.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/csv\/CsvSettings.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/csv\/CsvSettings.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/csv\/CsvSettings.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/csv\/CsvSettings.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/csv\/CsvSettings.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/csv\/CsvSettings.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/csv\/CsvSettings.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/csv\/CsvSettings.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/csv\/CsvSettings.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/csv\/CsvSettings.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/csv\/CsvSettings.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/csv\/CsvSettings.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/csv\/CsvSettings.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/saddle\/csv\/CsvSettings.html", "kind" : "case class"}, {"name" : "org.saddle.csv.CsvWriter", "shortDescription" : "", "object" : "org\/saddle\/csv\/CsvWriter$.html", "members_object" : [{"label" : "writeFrameToStream", "tail" : "(frame: Frame[RX, CX, T], stream: OutputStream, withColIx: Boolean, withRowIx: Boolean, settings: CsvSettings)(arg0: ST[RX], arg1: ORD[RX], arg2: ST[CX], arg3: ORD[CX], arg4: ST[T]): Unit", "member" : "org.saddle.csv.CsvWriter.writeFrameToStream", "link" : "org\/saddle\/csv\/CsvWriter$.html#writeFrameToStream[RX,CX,T](frame:org.saddle.Frame[RX,CX,T],stream:java.io.OutputStream,withColIx:Boolean,withRowIx:Boolean,settings:org.saddle.csv.CsvSettings)(implicitevidence$20:org.saddle.ST[RX],implicitevidence$21:org.saddle.ORD[RX],implicitevidence$22:org.saddle.ST[CX],implicitevidence$23:org.saddle.ORD[CX],implicitevidence$24:org.saddle.ST[T]):Unit", "kind" : "def"}, {"label" : "writeFrameToArray", "tail" : "(frame: Frame[RX, CX, T], withColIx: Boolean, withRowIx: Boolean, settings: CsvSettings)(arg0: ST[RX], arg1: ORD[RX], arg2: ST[CX], arg3: ORD[CX], arg4: ST[T]): Array[Byte]", "member" : "org.saddle.csv.CsvWriter.writeFrameToArray", "link" : "org\/saddle\/csv\/CsvWriter$.html#writeFrameToArray[RX,CX,T](frame:org.saddle.Frame[RX,CX,T],withColIx:Boolean,withRowIx:Boolean,settings:org.saddle.csv.CsvSettings)(implicitevidence$15:org.saddle.ST[RX],implicitevidence$16:org.saddle.ORD[RX],implicitevidence$17:org.saddle.ST[CX],implicitevidence$18:org.saddle.ORD[CX],implicitevidence$19:org.saddle.ST[T]):Array[Byte]", "kind" : "def"}, {"label" : "writeFrameToFile", "tail" : "(frame: Frame[RX, CX, T], path: String, withColIx: Boolean, withRowIx: Boolean, settings: CsvSettings)(arg0: ST[RX], arg1: ORD[RX], arg2: ST[CX], arg3: ORD[CX], arg4: ST[T]): Unit", "member" : "org.saddle.csv.CsvWriter.writeFrameToFile", "link" : "org\/saddle\/csv\/CsvWriter$.html#writeFrameToFile[RX,CX,T](frame:org.saddle.Frame[RX,CX,T],path:String,withColIx:Boolean,withRowIx:Boolean,settings:org.saddle.csv.CsvSettings)(implicitevidence$10:org.saddle.ST[RX],implicitevidence$11:org.saddle.ORD[RX],implicitevidence$12:org.saddle.ST[CX],implicitevidence$13:org.saddle.ORD[CX],implicitevidence$14:org.saddle.ST[T]):Unit", "kind" : "def"}, {"label" : "writeSeriesToArray", "tail" : "(series: Series[X, T], withColIx: Boolean, withRowIx: Boolean, settings: CsvSettings)(arg0: ST[X], arg1: ORD[X], arg2: ST[T]): Array[Byte]", "member" : "org.saddle.csv.CsvWriter.writeSeriesToArray", "link" : "org\/saddle\/csv\/CsvWriter$.html#writeSeriesToArray[X,T](series:org.saddle.Series[X,T],withColIx:Boolean,withRowIx:Boolean,settings:org.saddle.csv.CsvSettings)(implicitevidence$7:org.saddle.ST[X],implicitevidence$8:org.saddle.ORD[X],implicitevidence$9:org.saddle.ST[T]):Array[Byte]", "kind" : "def"}, {"label" : "writeSeriesToStream", "tail" : "(series: Series[X, T], stream: OutputStream, withColIx: Boolean, withRowIx: Boolean, settings: CsvSettings)(arg0: ST[X], arg1: ORD[X], arg2: ST[T]): Unit", "member" : "org.saddle.csv.CsvWriter.writeSeriesToStream", "link" : "org\/saddle\/csv\/CsvWriter$.html#writeSeriesToStream[X,T](series:org.saddle.Series[X,T],stream:java.io.OutputStream,withColIx:Boolean,withRowIx:Boolean,settings:org.saddle.csv.CsvSettings)(implicitevidence$4:org.saddle.ST[X],implicitevidence$5:org.saddle.ORD[X],implicitevidence$6:org.saddle.ST[T]):Unit", "kind" : "def"}, {"label" : "writeSeriesToFile", "tail" : "(series: Series[X, T], path: String, withColIx: Boolean, withRowIx: Boolean, settings: CsvSettings)(arg0: ST[X], arg1: ORD[X], arg2: ST[T]): Unit", "member" : "org.saddle.csv.CsvWriter.writeSeriesToFile", "link" : "org\/saddle\/csv\/CsvWriter$.html#writeSeriesToFile[X,T](series:org.saddle.Series[X,T],path:String,withColIx:Boolean,withRowIx:Boolean,settings:org.saddle.csv.CsvSettings)(implicitevidence$1:org.saddle.ST[X],implicitevidence$2:org.saddle.ORD[X],implicitevidence$3:org.saddle.ST[T]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/csv\/CsvWriter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/csv\/CsvWriter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/csv\/CsvWriter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/csv\/CsvWriter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/csv\/CsvWriter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/csv\/CsvWriter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/csv\/CsvWriter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/csv\/CsvWriter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/csv\/CsvWriter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/csv\/CsvWriter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/csv\/CsvWriter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/csv\/CsvWriter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/csv\/CsvWriter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/csv\/CsvWriter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/csv\/CsvWriter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/csv\/CsvWriter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/csv\/CsvWriter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/csv\/CsvWriter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/csv\/CsvWriter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.saddle.ops" : [{"name" : "org.saddle.ops.Add", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/Add.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/Add.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/Add.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/Add.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/Add.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/Add.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/Add.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Add.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Add.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Add.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/Add.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/Add.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/Add.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/Add.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/Add.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/Add.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/Add.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/Add.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/Add.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/Add.html", "kind" : "trait"}, {"name" : "org.saddle.ops.AndOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/AndOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/AndOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/AndOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/AndOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/AndOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/AndOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/AndOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/AndOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/AndOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/AndOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/AndOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/AndOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/AndOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/AndOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/AndOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/AndOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/AndOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/AndOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/AndOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/AndOp.html", "kind" : "trait"}, {"name" : "org.saddle.ops.BinOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/BinOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/BinOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/BinOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/BinOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/BinOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/BinOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/BinOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/BinOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/BinOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/BinOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/BinOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/BinOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/BinOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/BinOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/BinOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/BinOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: X, b: Y): Z", "member" : "org.saddle.ops.BinOp.apply", "link" : "org\/saddle\/ops\/BinOp.html#apply(a:X,b:Y):Z", "kind" : "abstract def"}], "shortDescription" : "Concrete implementations of BinOp provide primitive-specialized support for performingbinary operations on elements of the following objects, as well as the objects themselves:", "object" : "org\/saddle\/ops\/BinOp$.html", "members_object" : [{"label" : "lteBB", "tail" : ": BinOp[LteOp, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOp.lteBB", "link" : "org\/saddle\/ops\/BinOp$.html#lteBB:org.saddle.ops.BinOp[org.saddle.ops.LteOp,Boolean,Boolean,Boolean]", "kind" : "implicit val"}, {"label" : "lteII", "tail" : ": BinOp[LteOp, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOp.lteII", "link" : "org\/saddle\/ops\/BinOp$.html#lteII:org.saddle.ops.BinOp[org.saddle.ops.LteOp,Int,Int,Boolean]", "kind" : "implicit val"}, {"label" : "lteID", "tail" : ": BinOp[LteOp, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOp.lteID", "link" : "org\/saddle\/ops\/BinOp$.html#lteID:org.saddle.ops.BinOp[org.saddle.ops.LteOp,Int,Double,Boolean]", "kind" : "implicit val"}, {"label" : "lteLI", "tail" : ": BinOp[LteOp, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOp.lteLI", "link" : "org\/saddle\/ops\/BinOp$.html#lteLI:org.saddle.ops.BinOp[org.saddle.ops.LteOp,Long,Int,Boolean]", "kind" : "implicit val"}, {"label" : "lteLL", "tail" : ": BinOp[LteOp, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOp.lteLL", "link" : "org\/saddle\/ops\/BinOp$.html#lteLL:org.saddle.ops.BinOp[org.saddle.ops.LteOp,Long,Long,Boolean]", "kind" : "implicit val"}, {"label" : "lteLD", "tail" : ": BinOp[LteOp, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOp.lteLD", "link" : "org\/saddle\/ops\/BinOp$.html#lteLD:org.saddle.ops.BinOp[org.saddle.ops.LteOp,Long,Double,Boolean]", "kind" : "implicit val"}, {"label" : "lteDI", "tail" : ": BinOp[LteOp, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOp.lteDI", "link" : "org\/saddle\/ops\/BinOp$.html#lteDI:org.saddle.ops.BinOp[org.saddle.ops.LteOp,Double,Int,Boolean]", "kind" : "implicit val"}, {"label" : "lteDL", "tail" : ": BinOp[LteOp, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOp.lteDL", "link" : "org\/saddle\/ops\/BinOp$.html#lteDL:org.saddle.ops.BinOp[org.saddle.ops.LteOp,Double,Long,Boolean]", "kind" : "implicit val"}, {"label" : "lteDD", "tail" : ": BinOp[LteOp, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOp.lteDD", "link" : "org\/saddle\/ops\/BinOp$.html#lteDD:org.saddle.ops.BinOp[org.saddle.ops.LteOp,Double,Double,Boolean]", "kind" : "implicit val"}, {"label" : "gteBB", "tail" : ": BinOp[GteOp, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOp.gteBB", "link" : "org\/saddle\/ops\/BinOp$.html#gteBB:org.saddle.ops.BinOp[org.saddle.ops.GteOp,Boolean,Boolean,Boolean]", "kind" : "implicit val"}, {"label" : "gteII", "tail" : ": BinOp[GteOp, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOp.gteII", "link" : "org\/saddle\/ops\/BinOp$.html#gteII:org.saddle.ops.BinOp[org.saddle.ops.GteOp,Int,Int,Boolean]", "kind" : "implicit val"}, {"label" : "gteID", "tail" : ": BinOp[GteOp, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOp.gteID", "link" : "org\/saddle\/ops\/BinOp$.html#gteID:org.saddle.ops.BinOp[org.saddle.ops.GteOp,Int,Double,Boolean]", "kind" : "implicit val"}, {"label" : "gteLI", "tail" : ": BinOp[GteOp, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOp.gteLI", "link" : "org\/saddle\/ops\/BinOp$.html#gteLI:org.saddle.ops.BinOp[org.saddle.ops.GteOp,Long,Int,Boolean]", "kind" : "implicit val"}, {"label" : "gteLL", "tail" : ": BinOp[GteOp, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOp.gteLL", "link" : "org\/saddle\/ops\/BinOp$.html#gteLL:org.saddle.ops.BinOp[org.saddle.ops.GteOp,Long,Long,Boolean]", "kind" : "implicit val"}, {"label" : "gteLD", "tail" : ": BinOp[GteOp, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOp.gteLD", "link" : "org\/saddle\/ops\/BinOp$.html#gteLD:org.saddle.ops.BinOp[org.saddle.ops.GteOp,Long,Double,Boolean]", "kind" : "implicit val"}, {"label" : "gteDI", "tail" : ": BinOp[GteOp, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOp.gteDI", "link" : "org\/saddle\/ops\/BinOp$.html#gteDI:org.saddle.ops.BinOp[org.saddle.ops.GteOp,Double,Int,Boolean]", "kind" : "implicit val"}, {"label" : "gteDL", "tail" : ": BinOp[GteOp, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOp.gteDL", "link" : "org\/saddle\/ops\/BinOp$.html#gteDL:org.saddle.ops.BinOp[org.saddle.ops.GteOp,Double,Long,Boolean]", "kind" : "implicit val"}, {"label" : "gteDD", "tail" : ": BinOp[GteOp, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOp.gteDD", "link" : "org\/saddle\/ops\/BinOp$.html#gteDD:org.saddle.ops.BinOp[org.saddle.ops.GteOp,Double,Double,Boolean]", "kind" : "implicit val"}, {"label" : "neqBB", "tail" : ": BinOp[NeqOp, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOp.neqBB", "link" : "org\/saddle\/ops\/BinOp$.html#neqBB:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,Boolean,Boolean,Boolean]", "kind" : "implicit val"}, {"label" : "neqII", "tail" : ": BinOp[NeqOp, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOp.neqII", "link" : "org\/saddle\/ops\/BinOp$.html#neqII:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,Int,Int,Boolean]", "kind" : "implicit val"}, {"label" : "neqID", "tail" : ": BinOp[NeqOp, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOp.neqID", "link" : "org\/saddle\/ops\/BinOp$.html#neqID:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,Int,Double,Boolean]", "kind" : "implicit val"}, {"label" : "neqLI", "tail" : ": BinOp[NeqOp, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOp.neqLI", "link" : "org\/saddle\/ops\/BinOp$.html#neqLI:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,Long,Int,Boolean]", "kind" : "implicit val"}, {"label" : "neqLL", "tail" : ": BinOp[NeqOp, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOp.neqLL", "link" : "org\/saddle\/ops\/BinOp$.html#neqLL:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,Long,Long,Boolean]", "kind" : "implicit val"}, {"label" : "neqLD", "tail" : ": BinOp[NeqOp, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOp.neqLD", "link" : "org\/saddle\/ops\/BinOp$.html#neqLD:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,Long,Double,Boolean]", "kind" : "implicit val"}, {"label" : "neqDI", "tail" : ": BinOp[NeqOp, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOp.neqDI", "link" : "org\/saddle\/ops\/BinOp$.html#neqDI:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,Double,Int,Boolean]", "kind" : "implicit val"}, {"label" : "neqDL", "tail" : ": BinOp[NeqOp, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOp.neqDL", "link" : "org\/saddle\/ops\/BinOp$.html#neqDL:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,Double,Long,Boolean]", "kind" : "implicit val"}, {"label" : "neqDD", "tail" : ": BinOp[NeqOp, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOp.neqDD", "link" : "org\/saddle\/ops\/BinOp$.html#neqDD:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,Double,Double,Boolean]", "kind" : "implicit val"}, {"label" : "eqBB", "tail" : ": BinOp[EqOp, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOp.eqBB", "link" : "org\/saddle\/ops\/BinOp$.html#eqBB:org.saddle.ops.BinOp[org.saddle.ops.EqOp,Boolean,Boolean,Boolean]", "kind" : "implicit val"}, {"label" : "eqII", "tail" : ": BinOp[EqOp, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOp.eqII", "link" : "org\/saddle\/ops\/BinOp$.html#eqII:org.saddle.ops.BinOp[org.saddle.ops.EqOp,Int,Int,Boolean]", "kind" : "implicit val"}, {"label" : "eqID", "tail" : ": BinOp[EqOp, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOp.eqID", "link" : "org\/saddle\/ops\/BinOp$.html#eqID:org.saddle.ops.BinOp[org.saddle.ops.EqOp,Int,Double,Boolean]", "kind" : "implicit val"}, {"label" : "eqLI", "tail" : ": BinOp[EqOp, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOp.eqLI", "link" : "org\/saddle\/ops\/BinOp$.html#eqLI:org.saddle.ops.BinOp[org.saddle.ops.EqOp,Long,Int,Boolean]", "kind" : "implicit val"}, {"label" : "eqLL", "tail" : ": BinOp[EqOp, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOp.eqLL", "link" : "org\/saddle\/ops\/BinOp$.html#eqLL:org.saddle.ops.BinOp[org.saddle.ops.EqOp,Long,Long,Boolean]", "kind" : "implicit val"}, {"label" : "eqLD", "tail" : ": BinOp[EqOp, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOp.eqLD", "link" : "org\/saddle\/ops\/BinOp$.html#eqLD:org.saddle.ops.BinOp[org.saddle.ops.EqOp,Long,Double,Boolean]", "kind" : "implicit val"}, {"label" : "eqDI", "tail" : ": BinOp[EqOp, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOp.eqDI", "link" : "org\/saddle\/ops\/BinOp$.html#eqDI:org.saddle.ops.BinOp[org.saddle.ops.EqOp,Double,Int,Boolean]", "kind" : "implicit val"}, {"label" : "eqDL", "tail" : ": BinOp[EqOp, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOp.eqDL", "link" : "org\/saddle\/ops\/BinOp$.html#eqDL:org.saddle.ops.BinOp[org.saddle.ops.EqOp,Double,Long,Boolean]", "kind" : "implicit val"}, {"label" : "eqDD", "tail" : ": BinOp[EqOp, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOp.eqDD", "link" : "org\/saddle\/ops\/BinOp$.html#eqDD:org.saddle.ops.BinOp[org.saddle.ops.EqOp,Double,Double,Boolean]", "kind" : "implicit val"}, {"label" : "ltBB", "tail" : ": BinOp[LtOp, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOp.ltBB", "link" : "org\/saddle\/ops\/BinOp$.html#ltBB:org.saddle.ops.BinOp[org.saddle.ops.LtOp,Boolean,Boolean,Boolean]", "kind" : "implicit val"}, {"label" : "ltII", "tail" : ": BinOp[LtOp, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOp.ltII", "link" : "org\/saddle\/ops\/BinOp$.html#ltII:org.saddle.ops.BinOp[org.saddle.ops.LtOp,Int,Int,Boolean]", "kind" : "implicit val"}, {"label" : "ltID", "tail" : ": BinOp[LtOp, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOp.ltID", "link" : "org\/saddle\/ops\/BinOp$.html#ltID:org.saddle.ops.BinOp[org.saddle.ops.LtOp,Int,Double,Boolean]", "kind" : "implicit val"}, {"label" : "ltLI", "tail" : ": BinOp[LtOp, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOp.ltLI", "link" : "org\/saddle\/ops\/BinOp$.html#ltLI:org.saddle.ops.BinOp[org.saddle.ops.LtOp,Long,Int,Boolean]", "kind" : "implicit val"}, {"label" : "ltLL", "tail" : ": BinOp[LtOp, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOp.ltLL", "link" : "org\/saddle\/ops\/BinOp$.html#ltLL:org.saddle.ops.BinOp[org.saddle.ops.LtOp,Long,Long,Boolean]", "kind" : "implicit val"}, {"label" : "ltLD", "tail" : ": BinOp[LtOp, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOp.ltLD", "link" : "org\/saddle\/ops\/BinOp$.html#ltLD:org.saddle.ops.BinOp[org.saddle.ops.LtOp,Long,Double,Boolean]", "kind" : "implicit val"}, {"label" : "ltDI", "tail" : ": BinOp[LtOp, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOp.ltDI", "link" : "org\/saddle\/ops\/BinOp$.html#ltDI:org.saddle.ops.BinOp[org.saddle.ops.LtOp,Double,Int,Boolean]", "kind" : "implicit val"}, {"label" : "ltDL", "tail" : ": BinOp[LtOp, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOp.ltDL", "link" : "org\/saddle\/ops\/BinOp$.html#ltDL:org.saddle.ops.BinOp[org.saddle.ops.LtOp,Double,Long,Boolean]", "kind" : "implicit val"}, {"label" : "ltDD", "tail" : ": BinOp[LtOp, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOp.ltDD", "link" : "org\/saddle\/ops\/BinOp$.html#ltDD:org.saddle.ops.BinOp[org.saddle.ops.LtOp,Double,Double,Boolean]", "kind" : "implicit val"}, {"label" : "gtBB", "tail" : ": BinOp[GtOp, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOp.gtBB", "link" : "org\/saddle\/ops\/BinOp$.html#gtBB:org.saddle.ops.BinOp[org.saddle.ops.GtOp,Boolean,Boolean,Boolean]", "kind" : "implicit val"}, {"label" : "gtII", "tail" : ": BinOp[GtOp, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOp.gtII", "link" : "org\/saddle\/ops\/BinOp$.html#gtII:org.saddle.ops.BinOp[org.saddle.ops.GtOp,Int,Int,Boolean]", "kind" : "implicit val"}, {"label" : "gtID", "tail" : ": BinOp[GtOp, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOp.gtID", "link" : "org\/saddle\/ops\/BinOp$.html#gtID:org.saddle.ops.BinOp[org.saddle.ops.GtOp,Int,Double,Boolean]", "kind" : "implicit val"}, {"label" : "gtLI", "tail" : ": BinOp[GtOp, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOp.gtLI", "link" : "org\/saddle\/ops\/BinOp$.html#gtLI:org.saddle.ops.BinOp[org.saddle.ops.GtOp,Long,Int,Boolean]", "kind" : "implicit val"}, {"label" : "gtLL", "tail" : ": BinOp[GtOp, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOp.gtLL", "link" : "org\/saddle\/ops\/BinOp$.html#gtLL:org.saddle.ops.BinOp[org.saddle.ops.GtOp,Long,Long,Boolean]", "kind" : "implicit val"}, {"label" : "gtLD", "tail" : ": BinOp[GtOp, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOp.gtLD", "link" : "org\/saddle\/ops\/BinOp$.html#gtLD:org.saddle.ops.BinOp[org.saddle.ops.GtOp,Long,Double,Boolean]", "kind" : "implicit val"}, {"label" : "gtDI", "tail" : ": BinOp[GtOp, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOp.gtDI", "link" : "org\/saddle\/ops\/BinOp$.html#gtDI:org.saddle.ops.BinOp[org.saddle.ops.GtOp,Double,Int,Boolean]", "kind" : "implicit val"}, {"label" : "gtDL", "tail" : ": BinOp[GtOp, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOp.gtDL", "link" : "org\/saddle\/ops\/BinOp$.html#gtDL:org.saddle.ops.BinOp[org.saddle.ops.GtOp,Double,Long,Boolean]", "kind" : "implicit val"}, {"label" : "gtDD", "tail" : ": BinOp[GtOp, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOp.gtDD", "link" : "org\/saddle\/ops\/BinOp$.html#gtDD:org.saddle.ops.BinOp[org.saddle.ops.GtOp,Double,Double,Boolean]", "kind" : "implicit val"}, {"label" : "xorBB", "tail" : ": BinOp[XorOp, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOp.xorBB", "link" : "org\/saddle\/ops\/BinOp$.html#xorBB:org.saddle.ops.BinOp[org.saddle.ops.XorOp,Boolean,Boolean,Boolean]", "kind" : "implicit val"}, {"label" : "orBB", "tail" : ": BinOp[OrOp, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOp.orBB", "link" : "org\/saddle\/ops\/BinOp$.html#orBB:org.saddle.ops.BinOp[org.saddle.ops.OrOp,Boolean,Boolean,Boolean]", "kind" : "implicit val"}, {"label" : "andBB", "tail" : ": BinOp[AndOp, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOp.andBB", "link" : "org\/saddle\/ops\/BinOp$.html#andBB:org.saddle.ops.BinOp[org.saddle.ops.AndOp,Boolean,Boolean,Boolean]", "kind" : "implicit val"}, {"label" : "ushrII", "tail" : ": BinOp[BitUShr, Int, Int, Int]", "member" : "org.saddle.ops.BinOp.ushrII", "link" : "org\/saddle\/ops\/BinOp$.html#ushrII:org.saddle.ops.BinOp[org.saddle.ops.BitUShr,Int,Int,Int]", "kind" : "implicit val"}, {"label" : "shrII", "tail" : ": BinOp[BitShr, Int, Int, Int]", "member" : "org.saddle.ops.BinOp.shrII", "link" : "org\/saddle\/ops\/BinOp$.html#shrII:org.saddle.ops.BinOp[org.saddle.ops.BitShr,Int,Int,Int]", "kind" : "implicit val"}, {"label" : "shlII", "tail" : ": BinOp[BitShl, Int, Int, Int]", "member" : "org.saddle.ops.BinOp.shlII", "link" : "org\/saddle\/ops\/BinOp$.html#shlII:org.saddle.ops.BinOp[org.saddle.ops.BitShl,Int,Int,Int]", "kind" : "implicit val"}, {"label" : "xorII", "tail" : ": BinOp[BitXor, Int, Int, Int]", "member" : "org.saddle.ops.BinOp.xorII", "link" : "org\/saddle\/ops\/BinOp$.html#xorII:org.saddle.ops.BinOp[org.saddle.ops.BitXor,Int,Int,Int]", "kind" : "implicit val"}, {"label" : "orII", "tail" : ": BinOp[BitOr, Int, Int, Int]", "member" : "org.saddle.ops.BinOp.orII", "link" : "org\/saddle\/ops\/BinOp$.html#orII:org.saddle.ops.BinOp[org.saddle.ops.BitOr,Int,Int,Int]", "kind" : "implicit val"}, {"label" : "andII", "tail" : ": BinOp[BitAnd, Int, Int, Int]", "member" : "org.saddle.ops.BinOp.andII", "link" : "org\/saddle\/ops\/BinOp$.html#andII:org.saddle.ops.BinOp[org.saddle.ops.BitAnd,Int,Int,Int]", "kind" : "implicit val"}, {"label" : "subII", "tail" : ": BinOp[Subtract, Int, Int, Int]", "member" : "org.saddle.ops.BinOp.subII", "link" : "org\/saddle\/ops\/BinOp$.html#subII:org.saddle.ops.BinOp[org.saddle.ops.Subtract,Int,Int,Int]", "kind" : "implicit val"}, {"label" : "divII", "tail" : ": BinOp[Divide, Int, Int, Int]", "member" : "org.saddle.ops.BinOp.divII", "link" : "org\/saddle\/ops\/BinOp$.html#divII:org.saddle.ops.BinOp[org.saddle.ops.Divide,Int,Int,Int]", "kind" : "implicit val"}, {"label" : "mulII", "tail" : ": BinOp[Multiply, Int, Int, Int]", "member" : "org.saddle.ops.BinOp.mulII", "link" : "org\/saddle\/ops\/BinOp$.html#mulII:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Int,Int,Int]", "kind" : "implicit val"}, {"label" : "addII", "tail" : ": BinOp[Add, Int, Int, Int]", "member" : "org.saddle.ops.BinOp.addII", "link" : "org\/saddle\/ops\/BinOp$.html#addII:org.saddle.ops.BinOp[org.saddle.ops.Add,Int,Int,Int]", "kind" : "implicit val"}, {"label" : "modII", "tail" : ": BinOp[Mod, Int, Int, Int]", "member" : "org.saddle.ops.BinOp.modII", "link" : "org\/saddle\/ops\/BinOp$.html#modII:org.saddle.ops.BinOp[org.saddle.ops.Mod,Int,Int,Int]", "kind" : "implicit val"}, {"label" : "powII", "tail" : ": BinOp[Power, Int, Int, Int]", "member" : "org.saddle.ops.BinOp.powII", "link" : "org\/saddle\/ops\/BinOp$.html#powII:org.saddle.ops.BinOp[org.saddle.ops.Power,Int,Int,Int]", "kind" : "implicit val"}, {"label" : "xorLI", "tail" : ": BinOp[BitXor, Long, Int, Long]", "member" : "org.saddle.ops.BinOp.xorLI", "link" : "org\/saddle\/ops\/BinOp$.html#xorLI:org.saddle.ops.BinOp[org.saddle.ops.BitXor,Long,Int,Long]", "kind" : "implicit val"}, {"label" : "orLI", "tail" : ": BinOp[BitOr, Long, Int, Long]", "member" : "org.saddle.ops.BinOp.orLI", "link" : "org\/saddle\/ops\/BinOp$.html#orLI:org.saddle.ops.BinOp[org.saddle.ops.BitOr,Long,Int,Long]", "kind" : "implicit val"}, {"label" : "andLI", "tail" : ": BinOp[BitAnd, Long, Int, Long]", "member" : "org.saddle.ops.BinOp.andLI", "link" : "org\/saddle\/ops\/BinOp$.html#andLI:org.saddle.ops.BinOp[org.saddle.ops.BitAnd,Long,Int,Long]", "kind" : "implicit val"}, {"label" : "subLI", "tail" : ": BinOp[Subtract, Long, Int, Long]", "member" : "org.saddle.ops.BinOp.subLI", "link" : "org\/saddle\/ops\/BinOp$.html#subLI:org.saddle.ops.BinOp[org.saddle.ops.Subtract,Long,Int,Long]", "kind" : "implicit val"}, {"label" : "divLI", "tail" : ": BinOp[Divide, Long, Int, Long]", "member" : "org.saddle.ops.BinOp.divLI", "link" : "org\/saddle\/ops\/BinOp$.html#divLI:org.saddle.ops.BinOp[org.saddle.ops.Divide,Long,Int,Long]", "kind" : "implicit val"}, {"label" : "mulLI", "tail" : ": BinOp[Multiply, Long, Int, Long]", "member" : "org.saddle.ops.BinOp.mulLI", "link" : "org\/saddle\/ops\/BinOp$.html#mulLI:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Long,Int,Long]", "kind" : "implicit val"}, {"label" : "addLI", "tail" : ": BinOp[Add, Long, Int, Long]", "member" : "org.saddle.ops.BinOp.addLI", "link" : "org\/saddle\/ops\/BinOp$.html#addLI:org.saddle.ops.BinOp[org.saddle.ops.Add,Long,Int,Long]", "kind" : "implicit val"}, {"label" : "modLI", "tail" : ": BinOp[Mod, Long, Int, Long]", "member" : "org.saddle.ops.BinOp.modLI", "link" : "org\/saddle\/ops\/BinOp$.html#modLI:org.saddle.ops.BinOp[org.saddle.ops.Mod,Long,Int,Long]", "kind" : "implicit val"}, {"label" : "powLI", "tail" : ": BinOp[Power, Long, Int, Long]", "member" : "org.saddle.ops.BinOp.powLI", "link" : "org\/saddle\/ops\/BinOp$.html#powLI:org.saddle.ops.BinOp[org.saddle.ops.Power,Long,Int,Long]", "kind" : "implicit val"}, {"label" : "xorIL", "tail" : ": BinOp[BitXor, Int, Long, Long]", "member" : "org.saddle.ops.BinOp.xorIL", "link" : "org\/saddle\/ops\/BinOp$.html#xorIL:org.saddle.ops.BinOp[org.saddle.ops.BitXor,Int,Long,Long]", "kind" : "implicit val"}, {"label" : "orIL", "tail" : ": BinOp[BitOr, Int, Long, Long]", "member" : "org.saddle.ops.BinOp.orIL", "link" : "org\/saddle\/ops\/BinOp$.html#orIL:org.saddle.ops.BinOp[org.saddle.ops.BitOr,Int,Long,Long]", "kind" : "implicit val"}, {"label" : "andIL", "tail" : ": BinOp[BitAnd, Int, Long, Long]", "member" : "org.saddle.ops.BinOp.andIL", "link" : "org\/saddle\/ops\/BinOp$.html#andIL:org.saddle.ops.BinOp[org.saddle.ops.BitAnd,Int,Long,Long]", "kind" : "implicit val"}, {"label" : "subIL", "tail" : ": BinOp[Subtract, Int, Long, Long]", "member" : "org.saddle.ops.BinOp.subIL", "link" : "org\/saddle\/ops\/BinOp$.html#subIL:org.saddle.ops.BinOp[org.saddle.ops.Subtract,Int,Long,Long]", "kind" : "implicit val"}, {"label" : "divIL", "tail" : ": BinOp[Divide, Int, Long, Long]", "member" : "org.saddle.ops.BinOp.divIL", "link" : "org\/saddle\/ops\/BinOp$.html#divIL:org.saddle.ops.BinOp[org.saddle.ops.Divide,Int,Long,Long]", "kind" : "implicit val"}, {"label" : "mulIL", "tail" : ": BinOp[Multiply, Int, Long, Long]", "member" : "org.saddle.ops.BinOp.mulIL", "link" : "org\/saddle\/ops\/BinOp$.html#mulIL:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Int,Long,Long]", "kind" : "implicit val"}, {"label" : "addIL", "tail" : ": BinOp[Add, Int, Long, Long]", "member" : "org.saddle.ops.BinOp.addIL", "link" : "org\/saddle\/ops\/BinOp$.html#addIL:org.saddle.ops.BinOp[org.saddle.ops.Add,Int,Long,Long]", "kind" : "implicit val"}, {"label" : "modIL", "tail" : ": BinOp[Mod, Int, Long, Long]", "member" : "org.saddle.ops.BinOp.modIL", "link" : "org\/saddle\/ops\/BinOp$.html#modIL:org.saddle.ops.BinOp[org.saddle.ops.Mod,Int,Long,Long]", "kind" : "implicit val"}, {"label" : "powIL", "tail" : ": BinOp[Power, Int, Long, Long]", "member" : "org.saddle.ops.BinOp.powIL", "link" : "org\/saddle\/ops\/BinOp$.html#powIL:org.saddle.ops.BinOp[org.saddle.ops.Power,Int,Long,Long]", "kind" : "implicit val"}, {"label" : "xorLL", "tail" : ": BinOp[BitXor, Long, Long, Long]", "member" : "org.saddle.ops.BinOp.xorLL", "link" : "org\/saddle\/ops\/BinOp$.html#xorLL:org.saddle.ops.BinOp[org.saddle.ops.BitXor,Long,Long,Long]", "kind" : "implicit val"}, {"label" : "orLL", "tail" : ": BinOp[BitOr, Long, Long, Long]", "member" : "org.saddle.ops.BinOp.orLL", "link" : "org\/saddle\/ops\/BinOp$.html#orLL:org.saddle.ops.BinOp[org.saddle.ops.BitOr,Long,Long,Long]", "kind" : "implicit val"}, {"label" : "andLL", "tail" : ": BinOp[BitAnd, Long, Long, Long]", "member" : "org.saddle.ops.BinOp.andLL", "link" : "org\/saddle\/ops\/BinOp$.html#andLL:org.saddle.ops.BinOp[org.saddle.ops.BitAnd,Long,Long,Long]", "kind" : "implicit val"}, {"label" : "subLL", "tail" : ": BinOp[Subtract, Long, Long, Long]", "member" : "org.saddle.ops.BinOp.subLL", "link" : "org\/saddle\/ops\/BinOp$.html#subLL:org.saddle.ops.BinOp[org.saddle.ops.Subtract,Long,Long,Long]", "kind" : "implicit val"}, {"label" : "divLL", "tail" : ": BinOp[Divide, Long, Long, Long]", "member" : "org.saddle.ops.BinOp.divLL", "link" : "org\/saddle\/ops\/BinOp$.html#divLL:org.saddle.ops.BinOp[org.saddle.ops.Divide,Long,Long,Long]", "kind" : "implicit val"}, {"label" : "mulLL", "tail" : ": BinOp[Multiply, Long, Long, Long]", "member" : "org.saddle.ops.BinOp.mulLL", "link" : "org\/saddle\/ops\/BinOp$.html#mulLL:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Long,Long,Long]", "kind" : "implicit val"}, {"label" : "addLL", "tail" : ": BinOp[Add, Long, Long, Long]", "member" : "org.saddle.ops.BinOp.addLL", "link" : "org\/saddle\/ops\/BinOp$.html#addLL:org.saddle.ops.BinOp[org.saddle.ops.Add,Long,Long,Long]", "kind" : "implicit val"}, {"label" : "modLL", "tail" : ": BinOp[Mod, Long, Long, Long]", "member" : "org.saddle.ops.BinOp.modLL", "link" : "org\/saddle\/ops\/BinOp$.html#modLL:org.saddle.ops.BinOp[org.saddle.ops.Mod,Long,Long,Long]", "kind" : "implicit val"}, {"label" : "powLL", "tail" : ": BinOp[Power, Long, Long, Long]", "member" : "org.saddle.ops.BinOp.powLL", "link" : "org\/saddle\/ops\/BinOp$.html#powLL:org.saddle.ops.BinOp[org.saddle.ops.Power,Long,Long,Long]", "kind" : "implicit val"}, {"label" : "subDI", "tail" : ": BinOp[Subtract, Double, Int, Double]", "member" : "org.saddle.ops.BinOp.subDI", "link" : "org\/saddle\/ops\/BinOp$.html#subDI:org.saddle.ops.BinOp[org.saddle.ops.Subtract,Double,Int,Double]", "kind" : "implicit val"}, {"label" : "divDI", "tail" : ": BinOp[Divide, Double, Int, Double]", "member" : "org.saddle.ops.BinOp.divDI", "link" : "org\/saddle\/ops\/BinOp$.html#divDI:org.saddle.ops.BinOp[org.saddle.ops.Divide,Double,Int,Double]", "kind" : "implicit val"}, {"label" : "mulDI", "tail" : ": BinOp[Multiply, Double, Int, Double]", "member" : "org.saddle.ops.BinOp.mulDI", "link" : "org\/saddle\/ops\/BinOp$.html#mulDI:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Double,Int,Double]", "kind" : "implicit val"}, {"label" : "addDI", "tail" : ": BinOp[Add, Double, Int, Double]", "member" : "org.saddle.ops.BinOp.addDI", "link" : "org\/saddle\/ops\/BinOp$.html#addDI:org.saddle.ops.BinOp[org.saddle.ops.Add,Double,Int,Double]", "kind" : "implicit val"}, {"label" : "modDI", "tail" : ": BinOp[Mod, Double, Int, Double]", "member" : "org.saddle.ops.BinOp.modDI", "link" : "org\/saddle\/ops\/BinOp$.html#modDI:org.saddle.ops.BinOp[org.saddle.ops.Mod,Double,Int,Double]", "kind" : "implicit val"}, {"label" : "powDI", "tail" : ": BinOp[Power, Double, Int, Double]", "member" : "org.saddle.ops.BinOp.powDI", "link" : "org\/saddle\/ops\/BinOp$.html#powDI:org.saddle.ops.BinOp[org.saddle.ops.Power,Double,Int,Double]", "kind" : "implicit val"}, {"label" : "subID", "tail" : ": BinOp[Subtract, Int, Double, Double]", "member" : "org.saddle.ops.BinOp.subID", "link" : "org\/saddle\/ops\/BinOp$.html#subID:org.saddle.ops.BinOp[org.saddle.ops.Subtract,Int,Double,Double]", "kind" : "implicit val"}, {"label" : "divID", "tail" : ": BinOp[Divide, Int, Double, Double]", "member" : "org.saddle.ops.BinOp.divID", "link" : "org\/saddle\/ops\/BinOp$.html#divID:org.saddle.ops.BinOp[org.saddle.ops.Divide,Int,Double,Double]", "kind" : "implicit val"}, {"label" : "mulID", "tail" : ": BinOp[Multiply, Int, Double, Double]", "member" : "org.saddle.ops.BinOp.mulID", "link" : "org\/saddle\/ops\/BinOp$.html#mulID:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Int,Double,Double]", "kind" : "implicit val"}, {"label" : "addID", "tail" : ": BinOp[Add, Int, Double, Double]", "member" : "org.saddle.ops.BinOp.addID", "link" : "org\/saddle\/ops\/BinOp$.html#addID:org.saddle.ops.BinOp[org.saddle.ops.Add,Int,Double,Double]", "kind" : "implicit val"}, {"label" : "modID", "tail" : ": BinOp[Mod, Int, Double, Double]", "member" : "org.saddle.ops.BinOp.modID", "link" : "org\/saddle\/ops\/BinOp$.html#modID:org.saddle.ops.BinOp[org.saddle.ops.Mod,Int,Double,Double]", "kind" : "implicit val"}, {"label" : "powID", "tail" : ": BinOp[Power, Int, Double, Double]", "member" : "org.saddle.ops.BinOp.powID", "link" : "org\/saddle\/ops\/BinOp$.html#powID:org.saddle.ops.BinOp[org.saddle.ops.Power,Int,Double,Double]", "kind" : "implicit val"}, {"label" : "subLD", "tail" : ": BinOp[Subtract, Long, Double, Double]", "member" : "org.saddle.ops.BinOp.subLD", "link" : "org\/saddle\/ops\/BinOp$.html#subLD:org.saddle.ops.BinOp[org.saddle.ops.Subtract,Long,Double,Double]", "kind" : "implicit val"}, {"label" : "divLD", "tail" : ": BinOp[Divide, Long, Double, Double]", "member" : "org.saddle.ops.BinOp.divLD", "link" : "org\/saddle\/ops\/BinOp$.html#divLD:org.saddle.ops.BinOp[org.saddle.ops.Divide,Long,Double,Double]", "kind" : "implicit val"}, {"label" : "mulLD", "tail" : ": BinOp[Multiply, Long, Double, Double]", "member" : "org.saddle.ops.BinOp.mulLD", "link" : "org\/saddle\/ops\/BinOp$.html#mulLD:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Long,Double,Double]", "kind" : "implicit val"}, {"label" : "addLD", "tail" : ": BinOp[Add, Long, Double, Double]", "member" : "org.saddle.ops.BinOp.addLD", "link" : "org\/saddle\/ops\/BinOp$.html#addLD:org.saddle.ops.BinOp[org.saddle.ops.Add,Long,Double,Double]", "kind" : "implicit val"}, {"label" : "modLD", "tail" : ": BinOp[Mod, Long, Double, Double]", "member" : "org.saddle.ops.BinOp.modLD", "link" : "org\/saddle\/ops\/BinOp$.html#modLD:org.saddle.ops.BinOp[org.saddle.ops.Mod,Long,Double,Double]", "kind" : "implicit val"}, {"label" : "powLD", "tail" : ": BinOp[Power, Long, Double, Double]", "member" : "org.saddle.ops.BinOp.powLD", "link" : "org\/saddle\/ops\/BinOp$.html#powLD:org.saddle.ops.BinOp[org.saddle.ops.Power,Long,Double,Double]", "kind" : "implicit val"}, {"label" : "subDL", "tail" : ": BinOp[Subtract, Double, Long, Double]", "member" : "org.saddle.ops.BinOp.subDL", "link" : "org\/saddle\/ops\/BinOp$.html#subDL:org.saddle.ops.BinOp[org.saddle.ops.Subtract,Double,Long,Double]", "kind" : "implicit val"}, {"label" : "divDL", "tail" : ": BinOp[Divide, Double, Long, Double]", "member" : "org.saddle.ops.BinOp.divDL", "link" : "org\/saddle\/ops\/BinOp$.html#divDL:org.saddle.ops.BinOp[org.saddle.ops.Divide,Double,Long,Double]", "kind" : "implicit val"}, {"label" : "mulDL", "tail" : ": BinOp[Multiply, Double, Long, Double]", "member" : "org.saddle.ops.BinOp.mulDL", "link" : "org\/saddle\/ops\/BinOp$.html#mulDL:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Double,Long,Double]", "kind" : "implicit val"}, {"label" : "addDL", "tail" : ": BinOp[Add, Double, Long, Double]", "member" : "org.saddle.ops.BinOp.addDL", "link" : "org\/saddle\/ops\/BinOp$.html#addDL:org.saddle.ops.BinOp[org.saddle.ops.Add,Double,Long,Double]", "kind" : "implicit val"}, {"label" : "modDL", "tail" : ": BinOp[Mod, Double, Long, Double]", "member" : "org.saddle.ops.BinOp.modDL", "link" : "org\/saddle\/ops\/BinOp$.html#modDL:org.saddle.ops.BinOp[org.saddle.ops.Mod,Double,Long,Double]", "kind" : "implicit val"}, {"label" : "powDL", "tail" : ": BinOp[Power, Double, Long, Double]", "member" : "org.saddle.ops.BinOp.powDL", "link" : "org\/saddle\/ops\/BinOp$.html#powDL:org.saddle.ops.BinOp[org.saddle.ops.Power,Double,Long,Double]", "kind" : "implicit val"}, {"label" : "subDD", "tail" : ": BinOp[Subtract, Double, Double, Double]", "member" : "org.saddle.ops.BinOp.subDD", "link" : "org\/saddle\/ops\/BinOp$.html#subDD:org.saddle.ops.BinOp[org.saddle.ops.Subtract,Double,Double,Double]", "kind" : "implicit val"}, {"label" : "divDD", "tail" : ": BinOp[Divide, Double, Double, Double]", "member" : "org.saddle.ops.BinOp.divDD", "link" : "org\/saddle\/ops\/BinOp$.html#divDD:org.saddle.ops.BinOp[org.saddle.ops.Divide,Double,Double,Double]", "kind" : "implicit val"}, {"label" : "mulDD", "tail" : ": BinOp[Multiply, Double, Double, Double]", "member" : "org.saddle.ops.BinOp.mulDD", "link" : "org\/saddle\/ops\/BinOp$.html#mulDD:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Double,Double,Double]", "kind" : "implicit val"}, {"label" : "addDD", "tail" : ": BinOp[Add, Double, Double, Double]", "member" : "org.saddle.ops.BinOp.addDD", "link" : "org\/saddle\/ops\/BinOp$.html#addDD:org.saddle.ops.BinOp[org.saddle.ops.Add,Double,Double,Double]", "kind" : "implicit val"}, {"label" : "modDD", "tail" : ": BinOp[Mod, Double, Double, Double]", "member" : "org.saddle.ops.BinOp.modDD", "link" : "org\/saddle\/ops\/BinOp$.html#modDD:org.saddle.ops.BinOp[org.saddle.ops.Mod,Double,Double,Double]", "kind" : "implicit val"}, {"label" : "powDD", "tail" : ": BinOp[Power, Double, Double, Double]", "member" : "org.saddle.ops.BinOp.powDD", "link" : "org\/saddle\/ops\/BinOp$.html#powDD:org.saddle.ops.BinOp[org.saddle.ops.Power,Double,Double,Double]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/BinOp$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/BinOp$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/BinOp$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/BinOp$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/BinOp$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/BinOp$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/BinOp$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOp$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOp$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOp$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/BinOp$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/BinOp$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/BinOp$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/BinOp$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/BinOp$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/BinOp$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/BinOp$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/BinOp$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/BinOp$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/saddle\/ops\/BinOp.html", "kind" : "trait"}, {"name" : "org.saddle.ops.BinOpFrame", "members_trait" : [{"label" : "FrFrEOpBBB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Boolean], Vec[Boolean], Vec[Boolean]]): FrFrEOp[Op, X, Y, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpBBB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpBBB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Boolean],org.saddle.Vec[Boolean],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Boolean,Boolean,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpIIB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Int], Vec[Int], Vec[Boolean]]): FrFrEOp[Op, X, Y, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpIIB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpIIB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Int],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Int,Int,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpILB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Int], Vec[Long], Vec[Boolean]]): FrFrEOp[Op, X, Y, Int, Long, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpILB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpILB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Long],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Int,Long,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpIDB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Int], Vec[Double], Vec[Boolean]]): FrFrEOp[Op, X, Y, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpIDB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpIDB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Double],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Int,Double,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpLIB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Long], Vec[Int], Vec[Boolean]]): FrFrEOp[Op, X, Y, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpLIB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpLIB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Int],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Long,Int,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpLLB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Long], Vec[Long], Vec[Boolean]]): FrFrEOp[Op, X, Y, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpLLB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpLLB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Long],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Long,Long,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpLDB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Long], Vec[Double], Vec[Boolean]]): FrFrEOp[Op, X, Y, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpLDB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpLDB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Double],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Long,Double,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpDIB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Double], Vec[Int], Vec[Boolean]]): FrFrEOp[Op, X, Y, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpDIB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpDIB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Int],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Double,Int,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpDLB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Double], Vec[Long], Vec[Boolean]]): FrFrEOp[Op, X, Y, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpDLB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpDLB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Long],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Double,Long,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpDDB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Double], Vec[Double], Vec[Boolean]]): FrFrEOp[Op, X, Y, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpDDB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpDDB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Double],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Double,Double,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpIII", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Int], Vec[Int], Vec[Int]]): FrFrEOp[Op, X, Y, Int, Int, Int]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpIII", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpIII[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Int],org.saddle.Vec[Int]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "FrFrEOpILL", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Int], Vec[Long], Vec[Long]]): FrFrEOp[Op, X, Y, Int, Long, Long]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpILL", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpILL[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Long],org.saddle.Vec[Long]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "FrFrEOpIDD", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Int], Vec[Double], Vec[Double]]): FrFrEOp[Op, X, Y, Int, Double, Double]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpIDD", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpIDD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Double],org.saddle.Vec[Double]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "FrFrEOpLIL", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Long], Vec[Int], Vec[Long]]): FrFrEOp[Op, X, Y, Long, Int, Long]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpLIL", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpLIL[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Int],org.saddle.Vec[Long]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "FrFrEOpLLL", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Long], Vec[Long], Vec[Long]]): FrFrEOp[Op, X, Y, Long, Long, Long]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpLLL", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpLLL[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Long],org.saddle.Vec[Long]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "FrFrEOpLDD", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Long], Vec[Double], Vec[Double]]): FrFrEOp[Op, X, Y, Long, Double, Double]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpLDD", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpLDD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Double],org.saddle.Vec[Double]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "FrFrEOpDLD", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Double], Vec[Long], Vec[Double]]): FrFrEOp[Op, X, Y, Double, Long, Double]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpDLD", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpDLD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Long],org.saddle.Vec[Double]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "FrFrEOpDID", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Double], Vec[Int], Vec[Double]]): FrFrEOp[Op, X, Y, Double, Int, Double]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpDID", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpDID[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Int],org.saddle.Vec[Double]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "FrFrEOpDDD", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Double], Vec[Double], Vec[Double]]): FrFrEOp[Op, X, Y, Double, Double, Double]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpDDD", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOpDDD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Double],org.saddle.Vec[Double]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "FrFrEOp", "tail" : "", "member" : "org.saddle.ops.BinOpFrame.FrFrEOp", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOp[OP<:org.saddle.ops.ScalarOp,X,Y,A,B,C]extendsBinOp[OP,org.saddle.Frame[X,Y,A],org.saddle.Frame[X,Y,B],org.saddle.Frame[X,Y,C]]", "kind" : "final class"}, {"label" : "FrScEOpBBB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Boolean], Boolean, Vec[Boolean]]): FrScEOp[Op, X, Y, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpBBB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpBBB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Boolean],Boolean,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Boolean,Boolean,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpIIB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Int], Int, Vec[Boolean]]): FrScEOp[Op, X, Y, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpIIB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpIIB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Int,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Int,Int,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpILB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Int], Long, Vec[Boolean]]): FrScEOp[Op, X, Y, Int, Long, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpILB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpILB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Long,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Int,Long,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpIDB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Int], Double, Vec[Boolean]]): FrScEOp[Op, X, Y, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpIDB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpIDB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Double,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Int,Double,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpLIB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Long], Int, Vec[Boolean]]): FrScEOp[Op, X, Y, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpLIB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpLIB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Int,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Long,Int,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpLLB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Long], Long, Vec[Boolean]]): FrScEOp[Op, X, Y, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpLLB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpLLB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Long,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Long,Long,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpLDB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Long], Double, Vec[Boolean]]): FrScEOp[Op, X, Y, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpLDB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpLDB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Double,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Long,Double,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpDIB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Double], Int, Vec[Boolean]]): FrScEOp[Op, X, Y, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpDIB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpDIB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Int,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Double,Int,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpDLB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Double], Long, Vec[Boolean]]): FrScEOp[Op, X, Y, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpDLB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpDLB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Long,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Double,Long,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpDDB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Double], Double, Vec[Boolean]]): FrScEOp[Op, X, Y, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpDDB", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpDDB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Double,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Double,Double,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpIII", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Int], Int, Vec[Int]]): FrScEOp[Op, X, Y, Int, Int, Int]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpIII", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpIII[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Int,org.saddle.Vec[Int]]):BinOpFrame.this.FrScEOp[Op,X,Y,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "FrScEOpILL", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Int], Long, Vec[Long]]): FrScEOp[Op, X, Y, Int, Long, Long]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpILL", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpILL[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Long,org.saddle.Vec[Long]]):BinOpFrame.this.FrScEOp[Op,X,Y,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "FrScEOpIDD", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Int], Double, Vec[Double]]): FrScEOp[Op, X, Y, Int, Double, Double]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpIDD", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpIDD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Double,org.saddle.Vec[Double]]):BinOpFrame.this.FrScEOp[Op,X,Y,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "FrScEOpLIL", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Long], Int, Vec[Long]]): FrScEOp[Op, X, Y, Long, Int, Long]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpLIL", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpLIL[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Int,org.saddle.Vec[Long]]):BinOpFrame.this.FrScEOp[Op,X,Y,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "FrScEOpLLL", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Long], Long, Vec[Long]]): FrScEOp[Op, X, Y, Long, Long, Long]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpLLL", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpLLL[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Long,org.saddle.Vec[Long]]):BinOpFrame.this.FrScEOp[Op,X,Y,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "FrScEOpLDD", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Long], Double, Vec[Double]]): FrScEOp[Op, X, Y, Long, Double, Double]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpLDD", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpLDD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Double,org.saddle.Vec[Double]]):BinOpFrame.this.FrScEOp[Op,X,Y,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "FrScEOpDID", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Double], Int, Vec[Double]]): FrScEOp[Op, X, Y, Double, Int, Double]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpDID", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpDID[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Int,org.saddle.Vec[Double]]):BinOpFrame.this.FrScEOp[Op,X,Y,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "FrScEOpDLD", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Double], Long, Vec[Double]]): FrScEOp[Op, X, Y, Double, Long, Double]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpDLD", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpDLD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Long,org.saddle.Vec[Double]]):BinOpFrame.this.FrScEOp[Op,X,Y,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "FrScEOpDDD", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Double], Double, Vec[Double]]): FrScEOp[Op, X, Y, Double, Double, Double]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpDDD", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOpDDD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Double,org.saddle.Vec[Double]]):BinOpFrame.this.FrScEOp[Op,X,Y,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "FrScEOp", "tail" : "", "member" : "org.saddle.ops.BinOpFrame.FrScEOp", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOp[OP<:org.saddle.ops.ScalarOp,X,Y,A,B,C]extendsBinOp[OP,org.saddle.Frame[X,Y,A],B,org.saddle.Frame[X,Y,C]]", "kind" : "final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/BinOpFrame.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/BinOpFrame.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/BinOpFrame.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/BinOpFrame.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/BinOpFrame.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/BinOpFrame.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/BinOpFrame.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpFrame.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpFrame.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpFrame.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/BinOpFrame.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/BinOpFrame.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/BinOpFrame.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/BinOpFrame.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/BinOpFrame.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/BinOpFrame.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/BinOpFrame.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/BinOpFrame.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/BinOpFrame.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Provides concrete implementations of binary operations for org.saddle.Frame; theseinstances provide implicit support for org.saddle.ops.NumericOps methods which areinherited by Frame.", "trait" : "org\/saddle\/ops\/BinOpFrame.html", "kind" : "trait"}, {"name" : "org.saddle.ops.BinOpInPlace", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/BinOpInPlace.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/BinOpInPlace.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/BinOpInPlace.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/BinOpInPlace.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/BinOpInPlace.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/BinOpInPlace.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/BinOpInPlace.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpInPlace.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpInPlace.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpInPlace.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/BinOpInPlace.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/BinOpInPlace.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/BinOpInPlace.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/BinOpInPlace.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/BinOpInPlace.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/BinOpInPlace.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/BinOpInPlace.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/BinOpInPlace.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/BinOpInPlace.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: X, b: Y): Unit", "member" : "org.saddle.ops.BinOpInPlace.apply", "link" : "org\/saddle\/ops\/BinOpInPlace.html#apply(a:X,b:Y):Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/BinOpInPlace.html", "kind" : "trait"}, {"name" : "org.saddle.ops.BinOpMat", "members_trait" : [{"label" : "MatMatElemOpIII", "tail" : "(op: BinOp[Op, Int, Int, Int]): MatMatElemOp[Op, Int, Int, Int]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpIII", "link" : "org\/saddle\/ops\/BinOpMat.html#MatMatElemOpIII[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Int]):BinOpMat.this.MatMatElemOp[Op,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "MatMatElemOpILL", "tail" : "(op: BinOp[Op, Int, Long, Long]): MatMatElemOp[Op, Int, Long, Long]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpILL", "link" : "org\/saddle\/ops\/BinOpMat.html#MatMatElemOpILL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Long,Long]):BinOpMat.this.MatMatElemOp[Op,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "MatMatElemOpIDD", "tail" : "(op: BinOp[Op, Int, Double, Double]): MatMatElemOp[Op, Int, Double, Double]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpIDD", "link" : "org\/saddle\/ops\/BinOpMat.html#MatMatElemOpIDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Double,Double]):BinOpMat.this.MatMatElemOp[Op,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "MatMatElemOpLIL", "tail" : "(op: BinOp[Op, Long, Int, Long]): MatMatElemOp[Op, Long, Int, Long]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpLIL", "link" : "org\/saddle\/ops\/BinOpMat.html#MatMatElemOpLIL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Long]):BinOpMat.this.MatMatElemOp[Op,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "MatMatElemOpLLL", "tail" : "(op: BinOp[Op, Long, Long, Long]): MatMatElemOp[Op, Long, Long, Long]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpLLL", "link" : "org\/saddle\/ops\/BinOpMat.html#MatMatElemOpLLL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Long]):BinOpMat.this.MatMatElemOp[Op,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "MatMatElemOpLDD", "tail" : "(op: BinOp[Op, Long, Double, Double]): MatMatElemOp[Op, Long, Double, Double]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpLDD", "link" : "org\/saddle\/ops\/BinOpMat.html#MatMatElemOpLDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Double,Double]):BinOpMat.this.MatMatElemOp[Op,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "MatMatElemOpDID", "tail" : "(op: BinOp[Op, Double, Int, Double]): MatMatElemOp[Op, Double, Int, Double]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpDID", "link" : "org\/saddle\/ops\/BinOpMat.html#MatMatElemOpDID[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Double]):BinOpMat.this.MatMatElemOp[Op,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "MatMatElemOpDLD", "tail" : "(op: BinOp[Op, Double, Long, Double]): MatMatElemOp[Op, Double, Long, Double]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpDLD", "link" : "org\/saddle\/ops\/BinOpMat.html#MatMatElemOpDLD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Double]):BinOpMat.this.MatMatElemOp[Op,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "MatMatElemOpDDD", "tail" : "(op: BinOp[Op, Double, Double, Double]): MatMatElemOp[Op, Double, Double, Double]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpDDD", "link" : "org\/saddle\/ops\/BinOpMat.html#MatMatElemOpDDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Double]):BinOpMat.this.MatMatElemOp[Op,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "MatMatElemOp", "tail" : "", "member" : "org.saddle.ops.BinOpMat.MatMatElemOp", "link" : "org\/saddle\/ops\/BinOpMat.html#MatMatElemOp[OP<:org.saddle.ops.ScalarOp,A,B,C]extendsBinOp[OP,org.saddle.Mat[A],org.saddle.Mat[B],org.saddle.Mat[C]]", "kind" : "final class"}, {"label" : "MatSclrElmOpLIB", "tail" : "(op: BinOp[Op, Long, Int, Boolean]): MatSclrElemOp[Op, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpLIB", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpLIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Long,Int,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpLLB", "tail" : "(op: BinOp[Op, Long, Long, Boolean]): MatSclrElemOp[Op, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpLLB", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpLLB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Long,Long,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIIB", "tail" : "(op: BinOp[Op, Int, Int, Boolean]): MatSclrElemOp[Op, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpIIB", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpIIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Int,Int,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpDIB", "tail" : "(op: BinOp[Op, Double, Int, Boolean]): MatSclrElemOp[Op, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpDIB", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpDIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Double,Int,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIDB", "tail" : "(op: BinOp[Op, Int, Double, Boolean]): MatSclrElemOp[Op, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpIDB", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpIDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Double,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Int,Double,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpLDB", "tail" : "(op: BinOp[Op, Long, Double, Boolean]): MatSclrElemOp[Op, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpLDB", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpLDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Double,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Long,Double,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpDLB", "tail" : "(op: BinOp[Op, Double, Long, Boolean]): MatSclrElemOp[Op, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpDLB", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpDLB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Double,Long,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpDDB", "tail" : "(op: BinOp[Op, Double, Double, Boolean]): MatSclrElemOp[Op, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpDDB", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpDDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Double,Double,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpBBB", "tail" : "(op: BinOp[Op, Boolean, Boolean, Boolean]): MatSclrElemOp[Op, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpBBB", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpBBB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Boolean,Boolean,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Boolean,Boolean,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIII", "tail" : "(op: BinOp[Op, Int, Int, Int]): MatSclrElemOp[Op, Int, Int, Int]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpIII", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpIII[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Int]):BinOpMat.this.MatSclrElemOp[Op,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpILL", "tail" : "(op: BinOp[Op, Int, Long, Long]): MatSclrElemOp[Op, Int, Long, Long]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpILL", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpILL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Long,Long]):BinOpMat.this.MatSclrElemOp[Op,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIDD", "tail" : "(op: BinOp[Op, Int, Double, Double]): MatSclrElemOp[Op, Int, Double, Double]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpIDD", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpIDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Double,Double]):BinOpMat.this.MatSclrElemOp[Op,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpLIL", "tail" : "(op: BinOp[Op, Long, Int, Long]): MatSclrElemOp[Op, Long, Int, Long]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpLIL", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpLIL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Long]):BinOpMat.this.MatSclrElemOp[Op,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpLLL", "tail" : "(op: BinOp[Op, Long, Long, Long]): MatSclrElemOp[Op, Long, Long, Long]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpLLL", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpLLL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Long]):BinOpMat.this.MatSclrElemOp[Op,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpLDD", "tail" : "(op: BinOp[Op, Long, Double, Double]): MatSclrElemOp[Op, Long, Double, Double]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpLDD", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpLDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Double,Double]):BinOpMat.this.MatSclrElemOp[Op,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpDID", "tail" : "(op: BinOp[Op, Double, Int, Double]): MatSclrElemOp[Op, Double, Int, Double]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpDID", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpDID[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Double]):BinOpMat.this.MatSclrElemOp[Op,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpDLD", "tail" : "(op: BinOp[Op, Double, Long, Double]): MatSclrElemOp[Op, Double, Long, Double]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpDLD", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpDLD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Double]):BinOpMat.this.MatSclrElemOp[Op,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpDDD", "tail" : "(op: BinOp[Op, Double, Double, Double]): MatSclrElemOp[Op, Double, Double, Double]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpDDD", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElmOpDDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Double]):BinOpMat.this.MatSclrElemOp[Op,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "MatSclrElemOp", "tail" : "", "member" : "org.saddle.ops.BinOpMat.MatSclrElemOp", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElemOp[OP<:org.saddle.ops.ScalarOp,A,B,C]extendsBinOp[OP,org.saddle.Mat[A],B,org.saddle.Mat[C]]", "kind" : "final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/BinOpMat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/BinOpMat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/BinOpMat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/BinOpMat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/BinOpMat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/BinOpMat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/BinOpMat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpMat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpMat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpMat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/BinOpMat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/BinOpMat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/BinOpMat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/BinOpMat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/BinOpMat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/BinOpMat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/BinOpMat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/BinOpMat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/BinOpMat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Provides concrete implementations of binary operations for org.saddle.Mat; theseinstances provide implicit support for org.saddle.ops.NumericOps methods which areinherited by Mat.", "trait" : "org\/saddle\/ops\/BinOpMat.html", "kind" : "trait"}, {"name" : "org.saddle.ops.BinOpMatInPlace", "members_trait" : [{"label" : "MatMatElemOpIpIII", "tail" : "(op: BinOp[Op, Int, Int, Int]): MatMatElemOpIp[Op, Int, Int]", "member" : "org.saddle.ops.BinOpMatInPlace.MatMatElemOpIpIII", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatMatElemOpIpIII[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Int]):BinOpMatInPlace.this.MatMatElemOpIp[Op,Int,Int]", "kind" : "implicit def"}, {"label" : "MatMatElemOpIpLIL", "tail" : "(op: BinOp[Op, Long, Int, Long]): MatMatElemOpIp[Op, Long, Int]", "member" : "org.saddle.ops.BinOpMatInPlace.MatMatElemOpIpLIL", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatMatElemOpIpLIL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Long]):BinOpMatInPlace.this.MatMatElemOpIp[Op,Long,Int]", "kind" : "implicit def"}, {"label" : "MatMatElemOpIpLLL", "tail" : "(op: BinOp[Op, Long, Long, Long]): MatMatElemOpIp[Op, Long, Long]", "member" : "org.saddle.ops.BinOpMatInPlace.MatMatElemOpIpLLL", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatMatElemOpIpLLL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Long]):BinOpMatInPlace.this.MatMatElemOpIp[Op,Long,Long]", "kind" : "implicit def"}, {"label" : "MatMatElemOpIpDID", "tail" : "(op: BinOp[Op, Double, Int, Double]): MatMatElemOpIp[Op, Double, Int]", "member" : "org.saddle.ops.BinOpMatInPlace.MatMatElemOpIpDID", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatMatElemOpIpDID[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Double]):BinOpMatInPlace.this.MatMatElemOpIp[Op,Double,Int]", "kind" : "implicit def"}, {"label" : "MatMatElemOpIpDLD", "tail" : "(op: BinOp[Op, Double, Long, Double]): MatMatElemOpIp[Op, Double, Long]", "member" : "org.saddle.ops.BinOpMatInPlace.MatMatElemOpIpDLD", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatMatElemOpIpDLD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Double]):BinOpMatInPlace.this.MatMatElemOpIp[Op,Double,Long]", "kind" : "implicit def"}, {"label" : "MatMatElemOpIpDDD", "tail" : "(op: BinOp[Op, Double, Double, Double]): MatMatElemOpIp[Op, Double, Double]", "member" : "org.saddle.ops.BinOpMatInPlace.MatMatElemOpIpDDD", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatMatElemOpIpDDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Double]):BinOpMatInPlace.this.MatMatElemOpIp[Op,Double,Double]", "kind" : "implicit def"}, {"label" : "MatMatElemOpIp", "tail" : "", "member" : "org.saddle.ops.BinOpMatInPlace.MatMatElemOpIp", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatMatElemOpIp[OP<:org.saddle.ops.ScalarOp,A,B]extendsBinOpInPlace[OP,org.saddle.Mat[A],org.saddle.Mat[B]]", "kind" : "final class"}, {"label" : "MatSclrElmOpIpIII", "tail" : "(op: BinOp[Op, Int, Int, Int]): MatSclrElemOpIp[Op, Int, Int]", "member" : "org.saddle.ops.BinOpMatInPlace.MatSclrElmOpIpIII", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatSclrElmOpIpIII[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Int]):BinOpMatInPlace.this.MatSclrElemOpIp[Op,Int,Int]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIpLIL", "tail" : "(op: BinOp[Op, Long, Int, Long]): MatSclrElemOpIp[Op, Long, Int]", "member" : "org.saddle.ops.BinOpMatInPlace.MatSclrElmOpIpLIL", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatSclrElmOpIpLIL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Long]):BinOpMatInPlace.this.MatSclrElemOpIp[Op,Long,Int]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIpLLL", "tail" : "(op: BinOp[Op, Long, Long, Long]): MatSclrElemOpIp[Op, Long, Long]", "member" : "org.saddle.ops.BinOpMatInPlace.MatSclrElmOpIpLLL", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatSclrElmOpIpLLL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Long]):BinOpMatInPlace.this.MatSclrElemOpIp[Op,Long,Long]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIpDID", "tail" : "(op: BinOp[Op, Double, Int, Double]): MatSclrElemOpIp[Op, Double, Int]", "member" : "org.saddle.ops.BinOpMatInPlace.MatSclrElmOpIpDID", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatSclrElmOpIpDID[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Double]):BinOpMatInPlace.this.MatSclrElemOpIp[Op,Double,Int]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIpDLD", "tail" : "(op: BinOp[Op, Double, Long, Double]): MatSclrElemOpIp[Op, Double, Long]", "member" : "org.saddle.ops.BinOpMatInPlace.MatSclrElmOpIpDLD", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatSclrElmOpIpDLD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Double]):BinOpMatInPlace.this.MatSclrElemOpIp[Op,Double,Long]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIpDDD", "tail" : "(op: BinOp[Op, Double, Double, Double]): MatSclrElemOpIp[Op, Double, Double]", "member" : "org.saddle.ops.BinOpMatInPlace.MatSclrElmOpIpDDD", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatSclrElmOpIpDDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Double]):BinOpMatInPlace.this.MatSclrElemOpIp[Op,Double,Double]", "kind" : "implicit def"}, {"label" : "MatSclrElemOpIp", "tail" : "", "member" : "org.saddle.ops.BinOpMatInPlace.MatSclrElemOpIp", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatSclrElemOpIp[OP<:org.saddle.ops.ScalarOp,A,B]extendsBinOpInPlace[OP,org.saddle.Mat[A],B]", "kind" : "final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/BinOpMatInPlace.html", "kind" : "trait"}, {"name" : "org.saddle.ops.BinOpSeries", "members_trait" : [{"label" : "SrSrEOpBBB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Boolean], Vec[Boolean], Vec[Boolean]]): SrSrEOp[Op, X, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpBBB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpBBB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Boolean],org.saddle.Vec[Boolean],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Boolean,Boolean,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpIIB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Vec[Int], Vec[Boolean]]): SrSrEOp[Op, X, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpIIB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpIIB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Int],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Int,Int,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpILB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Vec[Long], Vec[Boolean]]): SrSrEOp[Op, X, Int, Long, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpILB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpILB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Long],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Int,Long,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpIDB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Vec[Double], Vec[Boolean]]): SrSrEOp[Op, X, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpIDB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpIDB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Double],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Int,Double,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpLIB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Vec[Int], Vec[Boolean]]): SrSrEOp[Op, X, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpLIB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpLIB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Int],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Long,Int,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpLLB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Vec[Long], Vec[Boolean]]): SrSrEOp[Op, X, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpLLB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpLLB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Long],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Long,Long,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpLDB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Vec[Double], Vec[Boolean]]): SrSrEOp[Op, X, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpLDB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpLDB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Double],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Long,Double,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpDIB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Vec[Int], Vec[Boolean]]): SrSrEOp[Op, X, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpDIB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpDIB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Int],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Double,Int,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpDLB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Vec[Long], Vec[Boolean]]): SrSrEOp[Op, X, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpDLB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpDLB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Long],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Double,Long,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpDDB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Vec[Double], Vec[Boolean]]): SrSrEOp[Op, X, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpDDB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpDDB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Double],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Double,Double,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpIII", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Vec[Int], Vec[Int]]): SrSrEOp[Op, X, Int, Int, Int]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpIII", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpIII[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Int],org.saddle.Vec[Int]]):BinOpSeries.this.SrSrEOp[Op,X,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "SrSrEOpILL", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Vec[Long], Vec[Long]]): SrSrEOp[Op, X, Int, Long, Long]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpILL", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpILL[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Long],org.saddle.Vec[Long]]):BinOpSeries.this.SrSrEOp[Op,X,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "SrSrEOpIDD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Vec[Double], Vec[Double]]): SrSrEOp[Op, X, Int, Double, Double]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpIDD", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpIDD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Double],org.saddle.Vec[Double]]):BinOpSeries.this.SrSrEOp[Op,X,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "SrSrEOpLIL", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Vec[Int], Vec[Long]]): SrSrEOp[Op, X, Long, Int, Long]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpLIL", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpLIL[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Int],org.saddle.Vec[Long]]):BinOpSeries.this.SrSrEOp[Op,X,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "SrSrEOpLLL", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Vec[Long], Vec[Long]]): SrSrEOp[Op, X, Long, Long, Long]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpLLL", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpLLL[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Long],org.saddle.Vec[Long]]):BinOpSeries.this.SrSrEOp[Op,X,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "SrSrEOpLDD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Vec[Double], Vec[Double]]): SrSrEOp[Op, X, Long, Double, Double]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpLDD", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpLDD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Double],org.saddle.Vec[Double]]):BinOpSeries.this.SrSrEOp[Op,X,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "SrSrEOpDLD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Vec[Long], Vec[Double]]): SrSrEOp[Op, X, Double, Long, Double]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpDLD", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpDLD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Long],org.saddle.Vec[Double]]):BinOpSeries.this.SrSrEOp[Op,X,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "SrSrEOpDID", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Vec[Int], Vec[Double]]): SrSrEOp[Op, X, Double, Int, Double]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpDID", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpDID[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Int],org.saddle.Vec[Double]]):BinOpSeries.this.SrSrEOp[Op,X,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "SrSrEOpDDD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Vec[Double], Vec[Double]]): SrSrEOp[Op, X, Double, Double, Double]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpDDD", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOpDDD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Double],org.saddle.Vec[Double]]):BinOpSeries.this.SrSrEOp[Op,X,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "SrSrEOp", "tail" : "", "member" : "org.saddle.ops.BinOpSeries.SrSrEOp", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOp[OP<:org.saddle.ops.ScalarOp,X,A,B,C]extendsBinOp[OP,org.saddle.Series[X,A],org.saddle.Series[X,B],org.saddle.Series[X,C]]", "kind" : "final class"}, {"label" : "SrScEOpBBB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Boolean], Boolean, Vec[Boolean]]): SrScEOp[Op, X, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpBBB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpBBB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Boolean],Boolean,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Boolean,Boolean,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpIIB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Int, Vec[Boolean]]): SrScEOp[Op, X, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpIIB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpIIB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Int,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Int,Int,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpILB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Long, Vec[Boolean]]): SrScEOp[Op, X, Int, Long, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpILB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpILB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Long,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Int,Long,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpIDB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Double, Vec[Boolean]]): SrScEOp[Op, X, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpIDB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpIDB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Double,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Int,Double,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpLIB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Int, Vec[Boolean]]): SrScEOp[Op, X, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpLIB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpLIB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Int,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Long,Int,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpLLB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Long, Vec[Boolean]]): SrScEOp[Op, X, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpLLB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpLLB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Long,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Long,Long,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpLDB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Double, Vec[Boolean]]): SrScEOp[Op, X, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpLDB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpLDB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Double,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Long,Double,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpDIB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Int, Vec[Boolean]]): SrScEOp[Op, X, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpDIB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpDIB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Int,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Double,Int,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpDLB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Long, Vec[Boolean]]): SrScEOp[Op, X, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpDLB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpDLB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Long,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Double,Long,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpDDB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Double, Vec[Boolean]]): SrScEOp[Op, X, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpDDB", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpDDB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Double,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Double,Double,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpIII", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Int, Vec[Int]]): SrScEOp[Op, X, Int, Int, Int]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpIII", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpIII[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Int,org.saddle.Vec[Int]]):BinOpSeries.this.SrScEOp[Op,X,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "SrScEOpILL", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Long, Vec[Long]]): SrScEOp[Op, X, Int, Long, Long]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpILL", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpILL[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Long,org.saddle.Vec[Long]]):BinOpSeries.this.SrScEOp[Op,X,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "SrScEOpIDD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Double, Vec[Double]]): SrScEOp[Op, X, Int, Double, Double]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpIDD", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpIDD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Double,org.saddle.Vec[Double]]):BinOpSeries.this.SrScEOp[Op,X,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "SrScEOpLIL", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Int, Vec[Long]]): SrScEOp[Op, X, Long, Int, Long]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpLIL", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpLIL[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Int,org.saddle.Vec[Long]]):BinOpSeries.this.SrScEOp[Op,X,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "SrScEOpLLL", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Long, Vec[Long]]): SrScEOp[Op, X, Long, Long, Long]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpLLL", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpLLL[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Long,org.saddle.Vec[Long]]):BinOpSeries.this.SrScEOp[Op,X,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "SrScEOpLDD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Double, Vec[Double]]): SrScEOp[Op, X, Long, Double, Double]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpLDD", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpLDD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Double,org.saddle.Vec[Double]]):BinOpSeries.this.SrScEOp[Op,X,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "SrScEOpDID", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Int, Vec[Double]]): SrScEOp[Op, X, Double, Int, Double]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpDID", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpDID[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Int,org.saddle.Vec[Double]]):BinOpSeries.this.SrScEOp[Op,X,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "SrScEOpDLD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Long, Vec[Double]]): SrScEOp[Op, X, Double, Long, Double]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpDLD", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpDLD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Long,org.saddle.Vec[Double]]):BinOpSeries.this.SrScEOp[Op,X,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "SrScEOpDDD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Double, Vec[Double]]): SrScEOp[Op, X, Double, Double, Double]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpDDD", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOpDDD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Double,org.saddle.Vec[Double]]):BinOpSeries.this.SrScEOp[Op,X,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "SrScEOp", "tail" : "", "member" : "org.saddle.ops.BinOpSeries.SrScEOp", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOp[OP<:org.saddle.ops.ScalarOp,X,A,B,C]extendsBinOp[OP,org.saddle.Series[X,A],B,org.saddle.Series[X,C]]", "kind" : "final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/BinOpSeries.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/BinOpSeries.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/BinOpSeries.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/BinOpSeries.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/BinOpSeries.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/BinOpSeries.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/BinOpSeries.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpSeries.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpSeries.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpSeries.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/BinOpSeries.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/BinOpSeries.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/BinOpSeries.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/BinOpSeries.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/BinOpSeries.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/BinOpSeries.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/BinOpSeries.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/BinOpSeries.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/BinOpSeries.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Provides concrete implementations of binary operations for org.saddle.Series; theseinstances provide implicit support for org.saddle.ops.NumericOps methods which areinherited by Series.", "trait" : "org\/saddle\/ops\/BinOpSeries.html", "kind" : "trait"}, {"name" : "org.saddle.ops.BinOpVec", "members_trait" : [{"label" : "VecVecOuterOpIII", "tail" : "(opM: BinOp[Multiply, Int, Int, Int]): VecVecOuter[Int, Int, Int]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpIII", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecOuterOpIII(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Int,Int,Int]):BinOpVec.this.VecVecOuter[Int,Int,Int]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpILL", "tail" : "(opM: BinOp[Multiply, Int, Long, Long]): VecVecOuter[Int, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpILL", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecOuterOpILL(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Int,Long,Long]):BinOpVec.this.VecVecOuter[Int,Long,Long]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpIDD", "tail" : "(opM: BinOp[Multiply, Int, Double, Double]): VecVecOuter[Int, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpIDD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecOuterOpIDD(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Int,Double,Double]):BinOpVec.this.VecVecOuter[Int,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpLIL", "tail" : "(opM: BinOp[Multiply, Long, Int, Long]): VecVecOuter[Long, Int, Long]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpLIL", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecOuterOpLIL(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Long,Int,Long]):BinOpVec.this.VecVecOuter[Long,Int,Long]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpLLL", "tail" : "(opM: BinOp[Multiply, Long, Long, Long]): VecVecOuter[Long, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpLLL", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecOuterOpLLL(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Long,Long,Long]):BinOpVec.this.VecVecOuter[Long,Long,Long]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpLDD", "tail" : "(opM: BinOp[Multiply, Long, Double, Double]): VecVecOuter[Long, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpLDD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecOuterOpLDD(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Long,Double,Double]):BinOpVec.this.VecVecOuter[Long,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpDID", "tail" : "(opM: BinOp[Multiply, Double, Int, Double]): VecVecOuter[Double, Int, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpDID", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecOuterOpDID(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Double,Int,Double]):BinOpVec.this.VecVecOuter[Double,Int,Double]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpDLD", "tail" : "(opM: BinOp[Multiply, Double, Long, Double]): VecVecOuter[Double, Long, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpDLD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecOuterOpDLD(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Double,Long,Double]):BinOpVec.this.VecVecOuter[Double,Long,Double]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpDDD", "tail" : "(opM: BinOp[Multiply, Double, Double, Double]): VecVecOuter[Double, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpDDD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecOuterOpDDD(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Double,Double,Double]):BinOpVec.this.VecVecOuter[Double,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVecOuter", "tail" : "", "member" : "org.saddle.ops.BinOpVec.VecVecOuter", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecOuter[A,B,C]extendsBinOp[org.saddle.ops.OuterProd,org.saddle.Vec[A],org.saddle.Vec[B],org.saddle.Mat[C]]", "kind" : "final class"}, {"label" : "VecVecDotOpIII", "tail" : "(opA: BinOp[Add, Int, Int, Int], opM: BinOp[Multiply, Int, Int, Int]): VecVecDot[Int, Int, Int]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpIII", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecDotOpIII(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Int,Int,Int],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Int,Int,Int]):BinOpVec.this.VecVecDot[Int,Int,Int]", "kind" : "implicit def"}, {"label" : "VecVecDotOpILL", "tail" : "(opA: BinOp[Add, Long, Long, Long], opM: BinOp[Multiply, Int, Long, Long]): VecVecDot[Int, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpILL", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecDotOpILL(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Long,Long,Long],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Int,Long,Long]):BinOpVec.this.VecVecDot[Int,Long,Long]", "kind" : "implicit def"}, {"label" : "VecVecDotOpIDD", "tail" : "(opA: BinOp[Add, Double, Double, Double], opM: BinOp[Multiply, Int, Double, Double]): VecVecDot[Int, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpIDD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecDotOpIDD(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Double,Double,Double],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Int,Double,Double]):BinOpVec.this.VecVecDot[Int,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVecDotOpLIL", "tail" : "(opA: BinOp[Add, Long, Long, Long], opM: BinOp[Multiply, Long, Int, Long]): VecVecDot[Long, Int, Long]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpLIL", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecDotOpLIL(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Long,Long,Long],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Long,Int,Long]):BinOpVec.this.VecVecDot[Long,Int,Long]", "kind" : "implicit def"}, {"label" : "VecVecDotOpLLL", "tail" : "(opA: BinOp[Add, Long, Long, Long], opM: BinOp[Multiply, Long, Long, Long]): VecVecDot[Long, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpLLL", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecDotOpLLL(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Long,Long,Long],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Long,Long,Long]):BinOpVec.this.VecVecDot[Long,Long,Long]", "kind" : "implicit def"}, {"label" : "VecVecDotOpLDD", "tail" : "(opA: BinOp[Add, Double, Double, Double], opM: BinOp[Multiply, Long, Double, Double]): VecVecDot[Long, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpLDD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecDotOpLDD(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Double,Double,Double],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Long,Double,Double]):BinOpVec.this.VecVecDot[Long,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVecDotOpDID", "tail" : "(opA: BinOp[Add, Double, Double, Double], opM: BinOp[Multiply, Double, Int, Double]): VecVecDot[Double, Int, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpDID", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecDotOpDID(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Double,Double,Double],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Double,Int,Double]):BinOpVec.this.VecVecDot[Double,Int,Double]", "kind" : "implicit def"}, {"label" : "VecVecDotOpDLD", "tail" : "(opA: BinOp[Add, Double, Double, Double], opM: BinOp[Multiply, Double, Long, Double]): VecVecDot[Double, Long, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpDLD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecDotOpDLD(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Double,Double,Double],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Double,Long,Double]):BinOpVec.this.VecVecDot[Double,Long,Double]", "kind" : "implicit def"}, {"label" : "VecVecDotOpDDD", "tail" : "(opA: BinOp[Add, Double, Double, Double], opM: BinOp[Multiply, Double, Double, Double]): VecVecDot[Double, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpDDD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecDotOpDDD(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Double,Double,Double],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Double,Double,Double]):BinOpVec.this.VecVecDot[Double,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVecDot", "tail" : "", "member" : "org.saddle.ops.BinOpVec.VecVecDot", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecDot[A,B,C]extendsBinOp[org.saddle.ops.InnerProd,org.saddle.Vec[A],org.saddle.Vec[B],C]", "kind" : "final class"}, {"label" : "VecVecElemOpBBB", "tail" : "(op: BinOp[Op, Boolean, Boolean, Boolean]): VecVecElemOp[Op, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpBBB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecElemOpBBB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Boolean,Boolean,Boolean]):BinOpVec.this.VecVecElemOp[Op,Boolean,Boolean,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpIIB", "tail" : "(op: BinOp[Op, Int, Int, Boolean]): VecVecElemOp[Op, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpIIB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecElemOpIIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Boolean]):BinOpVec.this.VecVecElemOp[Op,Int,Int,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpILB", "tail" : "(op: BinOp[Op, Int, Long, Boolean]): VecVecElemOp[Op, Int, Long, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpILB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecElemOpILB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Long,Boolean]):BinOpVec.this.VecVecElemOp[Op,Int,Long,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpIDB", "tail" : "(op: BinOp[Op, Int, Double, Boolean]): VecVecElemOp[Op, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpIDB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecElemOpIDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Double,Boolean]):BinOpVec.this.VecVecElemOp[Op,Int,Double,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpLIB", "tail" : "(op: BinOp[Op, Long, Int, Boolean]): VecVecElemOp[Op, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpLIB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecElemOpLIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Boolean]):BinOpVec.this.VecVecElemOp[Op,Long,Int,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpLLB", "tail" : "(op: BinOp[Op, Long, Long, Boolean]): VecVecElemOp[Op, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpLLB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecElemOpLLB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Boolean]):BinOpVec.this.VecVecElemOp[Op,Long,Long,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpLDB", "tail" : "(op: BinOp[Op, Long, Double, Boolean]): VecVecElemOp[Op, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpLDB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecElemOpLDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Double,Boolean]):BinOpVec.this.VecVecElemOp[Op,Long,Double,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpDIB", "tail" : "(op: BinOp[Op, Double, Int, Boolean]): VecVecElemOp[Op, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpDIB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecElemOpDIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Boolean]):BinOpVec.this.VecVecElemOp[Op,Double,Int,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpDLB", "tail" : "(op: BinOp[Op, Double, Long, Boolean]): VecVecElemOp[Op, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpDLB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecElemOpDLB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Boolean]):BinOpVec.this.VecVecElemOp[Op,Double,Long,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpDDB", "tail" : "(op: BinOp[Op, Double, Double, Boolean]): VecVecElemOp[Op, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpDDB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecElemOpDDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Boolean]):BinOpVec.this.VecVecElemOp[Op,Double,Double,Boolean]", "kind" : "implicit def"}, {"label" : "VecVelElemOpIII", "tail" : "(op: BinOp[Op, Int, Int, Int]): VecVecElemOp[Op, Int, Int, Int]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpIII", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVelElemOpIII[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Int]):BinOpVec.this.VecVecElemOp[Op,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "VecVelElemOpILL", "tail" : "(op: BinOp[Op, Int, Long, Long]): VecVecElemOp[Op, Int, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpILL", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVelElemOpILL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Long,Long]):BinOpVec.this.VecVecElemOp[Op,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "VecVelElemOpIDD", "tail" : "(op: BinOp[Op, Int, Double, Double]): VecVecElemOp[Op, Int, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpIDD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVelElemOpIDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Double,Double]):BinOpVec.this.VecVecElemOp[Op,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVelElemOpLIL", "tail" : "(op: BinOp[Op, Long, Int, Long]): VecVecElemOp[Op, Long, Int, Long]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpLIL", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVelElemOpLIL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Long]):BinOpVec.this.VecVecElemOp[Op,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "VecVelElemOpLLL", "tail" : "(op: BinOp[Op, Long, Long, Long]): VecVecElemOp[Op, Long, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpLLL", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVelElemOpLLL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Long]):BinOpVec.this.VecVecElemOp[Op,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "VecVelElemOpLDD", "tail" : "(op: BinOp[Op, Long, Double, Double]): VecVecElemOp[Op, Long, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpLDD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVelElemOpLDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Double,Double]):BinOpVec.this.VecVecElemOp[Op,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVelElemOpDID", "tail" : "(op: BinOp[Op, Double, Int, Double]): VecVecElemOp[Op, Double, Int, Double]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpDID", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVelElemOpDID[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Double]):BinOpVec.this.VecVecElemOp[Op,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "VecVelElemOpDLD", "tail" : "(op: BinOp[Op, Double, Long, Double]): VecVecElemOp[Op, Double, Long, Double]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpDLD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVelElemOpDLD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Double]):BinOpVec.this.VecVecElemOp[Op,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "VecVelElemOpDDD", "tail" : "(op: BinOp[Op, Double, Double, Double]): VecVecElemOp[Op, Double, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpDDD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVelElemOpDDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Double]):BinOpVec.this.VecVecElemOp[Op,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVecElemOp", "tail" : "", "member" : "org.saddle.ops.BinOpVec.VecVecElemOp", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecElemOp[OP<:org.saddle.ops.ScalarOp,A,B,C]extendsBinOp[OP,org.saddle.Vec[A],org.saddle.Vec[B],org.saddle.Vec[C]]", "kind" : "final class"}, {"label" : "VecSclrElmOpBBB", "tail" : "(op: BinOp[Op, Boolean, Boolean, Boolean]): VecSclrElemOp[Op, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpBBB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpBBB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Boolean,Boolean,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Boolean,Boolean,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpIIB", "tail" : "(op: BinOp[Op, Int, Int, Boolean]): VecSclrElemOp[Op, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpIIB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpIIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Int,Int,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpILB", "tail" : "(op: BinOp[Op, Int, Long, Boolean]): VecSclrElemOp[Op, Int, Long, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpILB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpILB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Long,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Int,Long,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpIDB", "tail" : "(op: BinOp[Op, Int, Double, Boolean]): VecSclrElemOp[Op, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpIDB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpIDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Double,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Int,Double,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpLIB", "tail" : "(op: BinOp[Op, Long, Int, Boolean]): VecSclrElemOp[Op, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpLIB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpLIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Long,Int,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpLLB", "tail" : "(op: BinOp[Op, Long, Long, Boolean]): VecSclrElemOp[Op, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpLLB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpLLB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Long,Long,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpLDB", "tail" : "(op: BinOp[Op, Long, Double, Boolean]): VecSclrElemOp[Op, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpLDB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpLDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Double,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Long,Double,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpDIB", "tail" : "(op: BinOp[Op, Double, Int, Boolean]): VecSclrElemOp[Op, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpDIB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpDIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Double,Int,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpDLB", "tail" : "(op: BinOp[Op, Double, Long, Boolean]): VecSclrElemOp[Op, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpDLB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpDLB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Double,Long,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpDDB", "tail" : "(op: BinOp[Op, Double, Double, Boolean]): VecSclrElemOp[Op, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpDDB", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpDDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Double,Double,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpIII", "tail" : "(op: BinOp[Op, Int, Int, Int]): VecSclrElemOp[Op, Int, Int, Int]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpIII", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpIII[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Int]):BinOpVec.this.VecSclrElemOp[Op,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpILL", "tail" : "(op: BinOp[Op, Int, Long, Long]): VecSclrElemOp[Op, Int, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpILL", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpILL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Long,Long]):BinOpVec.this.VecSclrElemOp[Op,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpIDD", "tail" : "(op: BinOp[Op, Int, Double, Double]): VecSclrElemOp[Op, Int, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpIDD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpIDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Double,Double]):BinOpVec.this.VecSclrElemOp[Op,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpLIL", "tail" : "(op: BinOp[Op, Long, Int, Long]): VecSclrElemOp[Op, Long, Int, Long]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpLIL", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpLIL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Long]):BinOpVec.this.VecSclrElemOp[Op,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpLLL", "tail" : "(op: BinOp[Op, Long, Long, Long]): VecSclrElemOp[Op, Long, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpLLL", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpLLL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Long]):BinOpVec.this.VecSclrElemOp[Op,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpLDD", "tail" : "(op: BinOp[Op, Long, Double, Double]): VecSclrElemOp[Op, Long, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpLDD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpLDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Double,Double]):BinOpVec.this.VecSclrElemOp[Op,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpDID", "tail" : "(op: BinOp[Op, Double, Int, Double]): VecSclrElemOp[Op, Double, Int, Double]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpDID", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpDID[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Double]):BinOpVec.this.VecSclrElemOp[Op,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpDLD", "tail" : "(op: BinOp[Op, Double, Long, Double]): VecSclrElemOp[Op, Double, Long, Double]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpDLD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpDLD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Double]):BinOpVec.this.VecSclrElemOp[Op,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpDDD", "tail" : "(op: BinOp[Op, Double, Double, Double]): VecSclrElemOp[Op, Double, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpDDD", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElmOpDDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Double]):BinOpVec.this.VecSclrElemOp[Op,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "VecSclrElemOp", "tail" : "", "member" : "org.saddle.ops.BinOpVec.VecSclrElemOp", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElemOp[OP<:org.saddle.ops.ScalarOp,A,B,C]extendsBinOp[OP,org.saddle.Vec[A],B,org.saddle.Vec[C]]", "kind" : "final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/BinOpVec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/BinOpVec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/BinOpVec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/BinOpVec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/BinOpVec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/BinOpVec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/BinOpVec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpVec.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpVec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BinOpVec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/BinOpVec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/BinOpVec.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/BinOpVec.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/BinOpVec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/BinOpVec.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/BinOpVec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/BinOpVec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/BinOpVec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/BinOpVec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Provides concrete implementations of binary operations for org.saddle.Vec; theseinstances provide implicit support for org.saddle.ops.NumericOps methods which areinherited by Vec.", "trait" : "org\/saddle\/ops\/BinOpVec.html", "kind" : "trait"}, {"name" : "org.saddle.ops.BitAnd", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/BitAnd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/BitAnd.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/BitAnd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/BitAnd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/BitAnd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/BitAnd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/BitAnd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitAnd.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitAnd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitAnd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/BitAnd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/BitAnd.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/BitAnd.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/BitAnd.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/BitAnd.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/BitAnd.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/BitAnd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/BitAnd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/BitAnd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/BitAnd.html", "kind" : "trait"}, {"name" : "org.saddle.ops.BitOr", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/BitOr.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/BitOr.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/BitOr.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/BitOr.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/BitOr.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/BitOr.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/BitOr.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitOr.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitOr.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitOr.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/BitOr.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/BitOr.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/BitOr.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/BitOr.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/BitOr.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/BitOr.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/BitOr.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/BitOr.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/BitOr.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/BitOr.html", "kind" : "trait"}, {"name" : "org.saddle.ops.BitShl", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/BitShl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/BitShl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/BitShl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/BitShl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/BitShl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/BitShl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/BitShl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitShl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitShl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitShl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/BitShl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/BitShl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/BitShl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/BitShl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/BitShl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/BitShl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/BitShl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/BitShl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/BitShl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/BitShl.html", "kind" : "trait"}, {"name" : "org.saddle.ops.BitShr", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/BitShr.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/BitShr.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/BitShr.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/BitShr.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/BitShr.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/BitShr.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/BitShr.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitShr.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitShr.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitShr.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/BitShr.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/BitShr.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/BitShr.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/BitShr.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/BitShr.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/BitShr.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/BitShr.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/BitShr.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/BitShr.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/BitShr.html", "kind" : "trait"}, {"name" : "org.saddle.ops.BitUShr", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/BitUShr.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/BitUShr.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/BitUShr.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/BitUShr.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/BitUShr.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/BitUShr.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/BitUShr.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitUShr.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitUShr.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitUShr.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/BitUShr.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/BitUShr.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/BitUShr.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/BitUShr.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/BitUShr.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/BitUShr.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/BitUShr.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/BitUShr.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/BitUShr.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/BitUShr.html", "kind" : "trait"}, {"name" : "org.saddle.ops.BitXor", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/BitXor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/BitXor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/BitXor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/BitXor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/BitXor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/BitXor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/BitXor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitXor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitXor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/BitXor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/BitXor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/BitXor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/BitXor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/BitXor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/BitXor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/BitXor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/BitXor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/BitXor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/BitXor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/BitXor.html", "kind" : "trait"}, {"name" : "org.saddle.ops.Divide", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/Divide.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/Divide.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/Divide.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/Divide.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/Divide.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/Divide.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/Divide.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Divide.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Divide.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Divide.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/Divide.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/Divide.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/Divide.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/Divide.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/Divide.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/Divide.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/Divide.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/Divide.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/Divide.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/Divide.html", "kind" : "trait"}, {"name" : "org.saddle.ops.EqOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/EqOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/EqOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/EqOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/EqOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/EqOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/EqOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/EqOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/EqOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/EqOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/EqOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/EqOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/EqOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/EqOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/EqOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/EqOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/EqOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/EqOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/EqOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/EqOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/EqOp.html", "kind" : "trait"}, {"name" : "org.saddle.ops.GteOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/GteOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/GteOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/GteOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/GteOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/GteOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/GteOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/GteOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/GteOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/GteOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/GteOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/GteOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/GteOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/GteOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/GteOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/GteOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/GteOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/GteOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/GteOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/GteOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/GteOp.html", "kind" : "trait"}, {"name" : "org.saddle.ops.GtOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/GtOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/GtOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/GtOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/GtOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/GtOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/GtOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/GtOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/GtOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/GtOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/GtOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/GtOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/GtOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/GtOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/GtOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/GtOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/GtOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/GtOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/GtOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/GtOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/GtOp.html", "kind" : "trait"}, {"name" : "org.saddle.ops.InnerProd", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/InnerProd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/InnerProd.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/InnerProd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/InnerProd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/InnerProd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/InnerProd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/InnerProd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/InnerProd.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/InnerProd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/InnerProd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/InnerProd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/InnerProd.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/InnerProd.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/InnerProd.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/InnerProd.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/InnerProd.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/InnerProd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/InnerProd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/InnerProd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/InnerProd.html", "kind" : "trait"}, {"name" : "org.saddle.ops.LteOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/LteOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/LteOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/LteOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/LteOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/LteOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/LteOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/LteOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/LteOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/LteOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/LteOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/LteOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/LteOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/LteOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/LteOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/LteOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/LteOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/LteOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/LteOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/LteOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/LteOp.html", "kind" : "trait"}, {"name" : "org.saddle.ops.LtOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/LtOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/LtOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/LtOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/LtOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/LtOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/LtOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/LtOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/LtOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/LtOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/LtOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/LtOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/LtOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/LtOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/LtOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/LtOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/LtOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/LtOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/LtOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/LtOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/LtOp.html", "kind" : "trait"}, {"name" : "org.saddle.ops.MatrixOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/MatrixOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/MatrixOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/MatrixOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/MatrixOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/MatrixOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/MatrixOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/MatrixOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/MatrixOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/MatrixOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/MatrixOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/MatrixOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/MatrixOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/MatrixOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/MatrixOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/MatrixOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/MatrixOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/MatrixOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/MatrixOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/MatrixOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/MatrixOp.html", "kind" : "trait"}, {"name" : "org.saddle.ops.Mod", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/Mod.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/Mod.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/Mod.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/Mod.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/Mod.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/Mod.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/Mod.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Mod.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Mod.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Mod.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/Mod.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/Mod.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/Mod.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/Mod.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/Mod.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/Mod.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/Mod.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/Mod.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/Mod.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/Mod.html", "kind" : "trait"}, {"name" : "org.saddle.ops.Multiply", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/Multiply.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/Multiply.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/Multiply.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/Multiply.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/Multiply.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/Multiply.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/Multiply.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Multiply.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Multiply.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Multiply.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/Multiply.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/Multiply.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/Multiply.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/Multiply.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/Multiply.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/Multiply.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/Multiply.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/Multiply.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/Multiply.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/Multiply.html", "kind" : "trait"}, {"name" : "org.saddle.ops.NeqOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/NeqOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/NeqOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/NeqOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/NeqOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/NeqOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/NeqOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/NeqOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/NeqOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/NeqOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/NeqOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/NeqOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/NeqOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/NeqOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/NeqOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/NeqOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/NeqOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/NeqOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/NeqOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/NeqOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/NeqOp.html", "kind" : "trait"}, {"name" : "org.saddle.ops.NumericOps", "members_trait" : [{"label" : "**=", "tail" : "(other: B)(op: BinOpInPlace[Power, This, B]): Unit", "member" : "org.saddle.ops.NumericOps.**=", "link" : "org\/saddle\/ops\/NumericOps.html#**=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Power,This,B]):Unit", "kind" : "def"}, {"label" : "%=", "tail" : "(other: B)(op: BinOpInPlace[Mod, This, B]): Unit", "member" : "org.saddle.ops.NumericOps.%=", "link" : "org\/saddle\/ops\/NumericOps.html#%=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Mod,This,B]):Unit", "kind" : "def"}, {"label" : "\/=", "tail" : "(other: B)(op: BinOpInPlace[Divide, This, B]): Unit", "member" : "org.saddle.ops.NumericOps.\/=", "link" : "org\/saddle\/ops\/NumericOps.html#\/=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Divide,This,B]):Unit", "kind" : "def"}, {"label" : "*=", "tail" : "(other: B)(op: BinOpInPlace[Multiply, This, B]): Unit", "member" : "org.saddle.ops.NumericOps.*=", "link" : "org\/saddle\/ops\/NumericOps.html#*=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Multiply,This,B]):Unit", "kind" : "def"}, {"label" : "-=", "tail" : "(other: B)(op: BinOpInPlace[Subtract, This, B]): Unit", "member" : "org.saddle.ops.NumericOps.-=", "link" : "org\/saddle\/ops\/NumericOps.html#-=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Subtract,This,B]):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(other: B)(op: BinOpInPlace[Add, This, B]): Unit", "member" : "org.saddle.ops.NumericOps.+=", "link" : "org\/saddle\/ops\/NumericOps.html#+=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Add,This,B]):Unit", "kind" : "def"}, {"label" : "outer", "tail" : "(other: B)(op: BinOp[OuterProd, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.outer", "link" : "org\/saddle\/ops\/NumericOps.html#outer[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.OuterProd,This,B,That]):That", "kind" : "def"}, {"label" : "dot", "tail" : "(other: B)(op: BinOp[InnerProd, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.dot", "link" : "org\/saddle\/ops\/NumericOps.html#dot[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.InnerProd,This,B,That]):That", "kind" : "def"}, {"label" : "xor", "tail" : "(other: B)(op: BinOp[XorOp, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.xor", "link" : "org\/saddle\/ops\/NumericOps.html#xor[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.XorOp,This,B,That]):That", "kind" : "def"}, {"label" : "&&", "tail" : "(other: B)(op: BinOp[AndOp, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.&&", "link" : "org\/saddle\/ops\/NumericOps.html#&&[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.AndOp,This,B,That]):That", "kind" : "def"}, {"label" : "||", "tail" : "(other: B)(op: BinOp[OrOp, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.||", "link" : "org\/saddle\/ops\/NumericOps.html#||[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.OrOp,This,B,That]):That", "kind" : "def"}, {"label" : "<>", "tail" : "(other: B)(op: BinOp[NeqOp, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.<>", "link" : "org\/saddle\/ops\/NumericOps.html#<>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,This,B,That]):That", "kind" : "def"}, {"label" : "=?", "tail" : "(other: B)(op: BinOp[EqOp, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.=?", "link" : "org\/saddle\/ops\/NumericOps.html#=?[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.EqOp,This,B,That]):That", "kind" : "def"}, {"label" : ">=", "tail" : "(other: B)(op: BinOp[GteOp, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.>=", "link" : "org\/saddle\/ops\/NumericOps.html#>=[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.GteOp,This,B,That]):That", "kind" : "def"}, {"label" : ">", "tail" : "(other: B)(op: BinOp[GtOp, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.>", "link" : "org\/saddle\/ops\/NumericOps.html#>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.GtOp,This,B,That]):That", "kind" : "def"}, {"label" : "<=", "tail" : "(other: B)(op: BinOp[LteOp, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.<=", "link" : "org\/saddle\/ops\/NumericOps.html#<=[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.LteOp,This,B,That]):That", "kind" : "def"}, {"label" : "<", "tail" : "(other: B)(op: BinOp[LtOp, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.<", "link" : "org\/saddle\/ops\/NumericOps.html#<[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.LtOp,This,B,That]):That", "kind" : "def"}, {"label" : ">>>", "tail" : "(other: B)(op: BinOp[BitUShr, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.>>>", "link" : "org\/saddle\/ops\/NumericOps.html#>>>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitUShr,This,B,That]):That", "kind" : "def"}, {"label" : ">>", "tail" : "(other: B)(op: BinOp[BitShr, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.>>", "link" : "org\/saddle\/ops\/NumericOps.html#>>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitShr,This,B,That]):That", "kind" : "def"}, {"label" : "<<", "tail" : "(other: B)(op: BinOp[BitShl, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.<<", "link" : "org\/saddle\/ops\/NumericOps.html#<<[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitShl,This,B,That]):That", "kind" : "def"}, {"label" : "^", "tail" : "(other: B)(op: BinOp[BitXor, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.^", "link" : "org\/saddle\/ops\/NumericOps.html#^[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitXor,This,B,That]):That", "kind" : "def"}, {"label" : "|", "tail" : "(other: B)(op: BinOp[BitOr, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.|", "link" : "org\/saddle\/ops\/NumericOps.html#|[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitOr,This,B,That]):That", "kind" : "def"}, {"label" : "&", "tail" : "(other: B)(op: BinOp[BitAnd, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.&", "link" : "org\/saddle\/ops\/NumericOps.html#&[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitAnd,This,B,That]):That", "kind" : "def"}, {"label" : "**", "tail" : "(other: B)(op: BinOp[Power, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.**", "link" : "org\/saddle\/ops\/NumericOps.html#**[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Power,This,B,That]):That", "kind" : "def"}, {"label" : "%", "tail" : "(other: B)(op: BinOp[Mod, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.%", "link" : "org\/saddle\/ops\/NumericOps.html#%[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Mod,This,B,That]):That", "kind" : "def"}, {"label" : "*", "tail" : "(other: B)(op: BinOp[Multiply, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.*", "link" : "org\/saddle\/ops\/NumericOps.html#*[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Multiply,This,B,That]):That", "kind" : "def"}, {"label" : "\/", "tail" : "(other: B)(op: BinOp[Divide, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.\/", "link" : "org\/saddle\/ops\/NumericOps.html#\/[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Divide,This,B,That]):That", "kind" : "def"}, {"label" : "-", "tail" : "(other: B)(op: BinOp[Subtract, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.-", "link" : "org\/saddle\/ops\/NumericOps.html#-[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Subtract,This,B,That]):That", "kind" : "def"}, {"label" : "+", "tail" : "(other: B)(op: BinOp[Add, This, B, That]): That", "member" : "org.saddle.ops.NumericOps.+", "link" : "org\/saddle\/ops\/NumericOps.html#+[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Add,This,B,That]):That", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/NumericOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/NumericOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/NumericOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/NumericOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/NumericOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/NumericOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/NumericOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/NumericOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/NumericOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/NumericOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/NumericOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/NumericOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/NumericOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/NumericOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/NumericOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/NumericOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/NumericOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/NumericOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/NumericOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "NumericOps provides a mix-in trait for mathematical objects, which in Saddleinclude:", "trait" : "org\/saddle\/ops\/NumericOps.html", "kind" : "trait"}, {"name" : "org.saddle.ops.OpType", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/OpType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/OpType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/OpType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/OpType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/OpType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/OpType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/OpType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/OpType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/OpType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/OpType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/OpType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/OpType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/OpType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/OpType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/OpType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/OpType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/OpType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/OpType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/OpType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "All operations on Saddle objects are defined via instances of subtypesof the trait OpType.", "trait" : "org\/saddle\/ops\/OpType.html", "kind" : "trait"}, {"name" : "org.saddle.ops.OrOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/OrOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/OrOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/OrOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/OrOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/OrOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/OrOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/OrOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/OrOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/OrOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/OrOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/OrOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/OrOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/OrOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/OrOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/OrOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/OrOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/OrOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/OrOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/OrOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/OrOp.html", "kind" : "trait"}, {"name" : "org.saddle.ops.OuterProd", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/OuterProd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/OuterProd.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/OuterProd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/OuterProd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/OuterProd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/OuterProd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/OuterProd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/OuterProd.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/OuterProd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/OuterProd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/OuterProd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/OuterProd.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/OuterProd.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/OuterProd.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/OuterProd.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/OuterProd.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/OuterProd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/OuterProd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/OuterProd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/OuterProd.html", "kind" : "trait"}, {"name" : "org.saddle.ops.Power", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/Power.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/Power.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/Power.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/Power.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/Power.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/Power.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/Power.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Power.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Power.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Power.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/Power.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/Power.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/Power.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/Power.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/Power.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/Power.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/Power.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/Power.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/Power.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/Power.html", "kind" : "trait"}, {"name" : "org.saddle.ops.ScalarOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/ScalarOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/ScalarOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/ScalarOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/ScalarOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/ScalarOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/ScalarOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/ScalarOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/ScalarOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/ScalarOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/ScalarOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/ScalarOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/ScalarOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/ScalarOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/ScalarOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/ScalarOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/ScalarOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/ScalarOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/ScalarOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/ScalarOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/ScalarOp.html", "kind" : "trait"}, {"name" : "org.saddle.ops.Subtract", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/Subtract.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/Subtract.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/Subtract.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/Subtract.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/Subtract.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/Subtract.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/Subtract.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Subtract.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Subtract.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/Subtract.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/Subtract.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/Subtract.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/Subtract.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/Subtract.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/Subtract.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/Subtract.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/Subtract.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/Subtract.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/Subtract.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/Subtract.html", "kind" : "trait"}, {"name" : "org.saddle.ops.XorOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/ops\/XorOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/ops\/XorOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/ops\/XorOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/ops\/XorOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/ops\/XorOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/ops\/XorOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/ops\/XorOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/XorOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/XorOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/ops\/XorOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/ops\/XorOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/ops\/XorOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/ops\/XorOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/ops\/XorOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/ops\/XorOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/ops\/XorOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/ops\/XorOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/ops\/XorOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/ops\/XorOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/ops\/XorOp.html", "kind" : "trait"}], "org.saddle.linalg" : [{"name" : "org.saddle.linalg.aAtxApbC", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/aAtxApbC.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/aAtxApbC.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/aAtxApbC.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/aAtxApbC.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/aAtxApbC.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/aAtxApbC.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/aAtxApbC.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAtxApbC.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAtxApbC.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAtxApbC.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/aAtxApbC.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/aAtxApbC.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/aAtxApbC.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/aAtxApbC.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/aAtxApbC.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/aAtxApbC.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/aAtxApbC.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/aAtxApbC.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/aAtxApbC.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/aAtxApbC.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.aAtxBpbC", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/aAtxBpbC.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/aAtxBpbC.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/aAtxBpbC.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.aAtxBtpbC", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/aAtxBtpbC.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/aAtxBtpbC.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.aAtxVpbC", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/aAtxVpbC.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/aAtxVpbC.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/aAtxVpbC.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.aAxAtpbC", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/aAxAtpbC.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/aAxAtpbC.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/aAxAtpbC.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.aAxBpbC", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/aAxBpbC.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/aAxBpbC.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/aAxBpbC.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/aAxBpbC.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/aAxBpbC.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/aAxBpbC.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/aAxBpbC.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAxBpbC.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAxBpbC.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAxBpbC.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/aAxBpbC.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/aAxBpbC.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/aAxBpbC.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/aAxBpbC.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/aAxBpbC.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/aAxBpbC.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/aAxBpbC.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/aAxBpbC.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/aAxBpbC.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/aAxBpbC.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.aAxBtpbC", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/aAxBtpbC.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/aAxBtpbC.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/aAxBtpbC.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.aAxVpbC", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/aAxVpbC.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/aAxVpbC.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/aAxVpbC.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/aAxVpbC.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/aAxVpbC.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/aAxVpbC.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/aAxVpbC.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAxVpbC.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAxVpbC.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/aAxVpbC.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/aAxVpbC.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/aAxVpbC.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/aAxVpbC.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/aAxVpbC.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/aAxVpbC.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/aAxVpbC.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/aAxVpbC.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/aAxVpbC.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/aAxVpbC.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/aAxVpbC.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.AtxA", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/AtxA.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/AtxA.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/AtxA.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/AtxA.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/AtxA.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/AtxA.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/AtxA.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AtxA.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AtxA.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AtxA.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/AtxA.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/AtxA.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/AtxA.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/AtxA.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/AtxA.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/AtxA.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/AtxA.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/AtxA.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/AtxA.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/AtxA.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.AtxB", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/AtxB.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/AtxB.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/AtxB.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/AtxB.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/AtxB.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/AtxB.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/AtxB.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AtxB.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AtxB.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AtxB.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/AtxB.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/AtxB.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/AtxB.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/AtxB.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/AtxB.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/AtxB.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/AtxB.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/AtxB.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/AtxB.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/AtxB.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.AtxBt", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/AtxBt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/AtxBt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/AtxBt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/AtxBt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/AtxBt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/AtxBt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/AtxBt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AtxBt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AtxBt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AtxBt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/AtxBt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/AtxBt.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/AtxBt.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/AtxBt.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/AtxBt.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/AtxBt.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/AtxBt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/AtxBt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/AtxBt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/AtxBt.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.AtxV", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/AtxV.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/AtxV.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/AtxV.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/AtxV.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/AtxV.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/AtxV.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/AtxV.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AtxV.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AtxV.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AtxV.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/AtxV.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/AtxV.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/AtxV.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/AtxV.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/AtxV.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/AtxV.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/AtxV.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/AtxV.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/AtxV.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/AtxV.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.AxAt", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/AxAt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/AxAt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/AxAt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/AxAt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/AxAt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/AxAt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/AxAt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AxAt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AxAt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AxAt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/AxAt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/AxAt.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/AxAt.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/AxAt.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/AxAt.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/AxAt.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/AxAt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/AxAt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/AxAt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/AxAt.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.AxB", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/AxB.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/AxB.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/AxB.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/AxB.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/AxB.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/AxB.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/AxB.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AxB.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AxB.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AxB.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/AxB.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/AxB.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/AxB.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/AxB.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/AxB.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/AxB.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/AxB.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/AxB.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/AxB.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/AxB.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.AxBt", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/AxBt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/AxBt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/AxBt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/AxBt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/AxBt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/AxBt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/AxBt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AxBt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AxBt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AxBt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/AxBt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/AxBt.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/AxBt.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/AxBt.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/AxBt.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/AxBt.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/AxBt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/AxBt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/AxBt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/AxBt.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.AxDiag", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/AxDiag.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/AxDiag.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/AxDiag.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/AxDiag.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/AxDiag.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/AxDiag.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/AxDiag.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AxDiag.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AxDiag.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AxDiag.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/AxDiag.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/AxDiag.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/AxDiag.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/AxDiag.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/AxDiag.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/AxDiag.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/AxDiag.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/AxDiag.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/AxDiag.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/AxDiag.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.AxV", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/AxV.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/AxV.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/AxV.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/AxV.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/AxV.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/AxV.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/AxV.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AxV.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AxV.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/AxV.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/AxV.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/AxV.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/AxV.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/AxV.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/AxV.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/AxV.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/AxV.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/AxV.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/AxV.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/AxV.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.Cholesky", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/Cholesky.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/Cholesky.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/Cholesky.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/Cholesky.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/Cholesky.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/Cholesky.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/Cholesky.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/Cholesky.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/Cholesky.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/Cholesky.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/Cholesky.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/Cholesky.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/Cholesky.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/Cholesky.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/Cholesky.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/Cholesky.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/Cholesky.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/Cholesky.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/Cholesky.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/Cholesky.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.ColSums", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/ColSums.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/ColSums.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/ColSums.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/ColSums.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/ColSums.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/ColSums.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/ColSums.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/ColSums.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/ColSums.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/ColSums.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/ColSums.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/ColSums.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/ColSums.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/ColSums.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/ColSums.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/ColSums.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/ColSums.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/ColSums.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/ColSums.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/ColSums.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.Diag", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/Diag.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/Diag.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/Diag.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/Diag.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/Diag.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/Diag.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/Diag.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/Diag.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/Diag.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/Diag.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/Diag.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/Diag.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/Diag.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/Diag.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/Diag.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/Diag.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/Diag.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/Diag.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/Diag.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/Diag.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.DiagAtxA", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/DiagAtxA.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/DiagAtxA.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/DiagAtxA.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/DiagAtxA.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/DiagAtxA.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/DiagAtxA.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/DiagAtxA.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/DiagAtxA.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/DiagAtxA.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/DiagAtxA.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/DiagAtxA.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/DiagAtxA.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/DiagAtxA.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/DiagAtxA.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/DiagAtxA.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/DiagAtxA.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/DiagAtxA.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/DiagAtxA.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/DiagAtxA.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/DiagAtxA.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.DiagAxAt", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/DiagAxAt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/DiagAxAt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/DiagAxAt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/DiagAxAt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/DiagAxAt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/DiagAxAt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/DiagAxAt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/DiagAxAt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/DiagAxAt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/DiagAxAt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/DiagAxAt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/DiagAxAt.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/DiagAxAt.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/DiagAxAt.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/DiagAxAt.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/DiagAxAt.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/DiagAxAt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/DiagAxAt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/DiagAxAt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/DiagAxAt.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.DiagxA", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/DiagxA.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/DiagxA.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/DiagxA.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/DiagxA.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/DiagxA.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/DiagxA.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/DiagxA.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/DiagxA.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/DiagxA.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/DiagxA.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/DiagxA.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/DiagxA.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/DiagxA.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/DiagxA.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/DiagxA.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/DiagxA.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/DiagxA.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/DiagxA.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/DiagxA.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/DiagxA.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.DiagXAInverseXt", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/DiagXAInverseXt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/DiagXAInverseXt.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.DPotrfException", "shortDescription" : "", "members_class" : [{"member" : "org.saddle.linalg.DPotrfException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "org\/saddle\/linalg\/DPotrfException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "org\/saddle\/linalg\/DPotrfException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "org\/saddle\/linalg\/DPotrfException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "org\/saddle\/linalg\/DPotrfException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "org\/saddle\/linalg\/DPotrfException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/saddle\/linalg\/DPotrfException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/saddle\/linalg\/DPotrfException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/saddle\/linalg\/DPotrfException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "org\/saddle\/linalg\/DPotrfException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "org\/saddle\/linalg\/DPotrfException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "org\/saddle\/linalg\/DPotrfException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "org\/saddle\/linalg\/DPotrfException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "org\/saddle\/linalg\/DPotrfException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/DPotrfException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/DPotrfException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/DPotrfException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/DPotrfException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/DPotrfException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/DPotrfException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/DPotrfException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/DPotrfException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/DPotrfException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/DPotrfException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/DPotrfException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/DPotrfException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/DPotrfException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/DPotrfException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/DPotrfException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/DPotrfException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/DPotrfException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/DPotrfException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/linalg\/DPotrfException.html", "kind" : "class"}, {"name" : "org.saddle.linalg.EigenDecompositionNonSymmetric", "shortDescription" : "", "members_case class" : [{"member" : "org.saddle.linalg.EigenDecompositionNonSymmetric#<init>", "error" : "unsupported entity"}, {"label" : "lambdaImag", "tail" : ": Vec[Double]", "member" : "org.saddle.linalg.EigenDecompositionNonSymmetric.lambdaImag", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#lambdaImag:org.saddle.Vec[Double]", "kind" : "val"}, {"label" : "lambdaReal", "tail" : ": Vec[Double]", "member" : "org.saddle.linalg.EigenDecompositionNonSymmetric.lambdaReal", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#lambdaReal:org.saddle.Vec[Double]", "kind" : "val"}, {"label" : "q", "tail" : ": Mat[Double]", "member" : "org.saddle.linalg.EigenDecompositionNonSymmetric.q", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#q:org.saddle.Mat[Double]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/saddle\/linalg\/EigenDecompositionNonSymmetric.html", "kind" : "case class"}, {"name" : "org.saddle.linalg.EigenDecompositionSymmetric", "shortDescription" : "", "members_case class" : [{"member" : "org.saddle.linalg.EigenDecompositionSymmetric#<init>", "error" : "unsupported entity"}, {"label" : "lambdaReal", "tail" : ": Vec[Double]", "member" : "org.saddle.linalg.EigenDecompositionSymmetric.lambdaReal", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#lambdaReal:org.saddle.Vec[Double]", "kind" : "val"}, {"label" : "q", "tail" : ": Mat[Double]", "member" : "org.saddle.linalg.EigenDecompositionSymmetric.q", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#q:org.saddle.Mat[Double]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/saddle\/linalg\/EigenDecompositionSymmetric.html", "kind" : "case class"}, {"name" : "org.saddle.linalg.EigNS", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/EigNS.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/EigNS.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/EigNS.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/EigNS.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/EigNS.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/EigNS.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/EigNS.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigNS.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigNS.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigNS.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/EigNS.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/EigNS.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/EigNS.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/EigNS.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/EigNS.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/EigNS.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/EigNS.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/EigNS.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/EigNS.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/EigNS.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.EigNSTrunc", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/EigNSTrunc.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/EigNSTrunc.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/EigNSTrunc.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.EigS", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/EigS.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/EigS.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/EigS.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/EigS.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/EigS.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/EigS.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/EigS.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigS.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigS.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigS.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/EigS.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/EigS.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/EigS.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/EigS.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/EigS.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/EigS.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/EigS.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/EigS.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/EigS.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/EigS.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.EigSTrunc", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/EigSTrunc.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/EigSTrunc.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/EigSTrunc.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/EigSTrunc.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/EigSTrunc.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/EigSTrunc.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/EigSTrunc.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigSTrunc.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigSTrunc.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigSTrunc.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/EigSTrunc.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/EigSTrunc.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/EigSTrunc.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/EigSTrunc.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/EigSTrunc.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/EigSTrunc.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/EigSTrunc.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/EigSTrunc.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/EigSTrunc.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/EigSTrunc.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.EigValSymTrunc", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/EigValSymTrunc.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/EigValSymTrunc.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.GeneralSolve", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/GeneralSolve.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/GeneralSolve.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/GeneralSolve.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/GeneralSolve.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/GeneralSolve.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/GeneralSolve.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/GeneralSolve.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/GeneralSolve.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/GeneralSolve.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/GeneralSolve.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/GeneralSolve.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/GeneralSolve.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/GeneralSolve.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/GeneralSolve.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/GeneralSolve.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/GeneralSolve.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/GeneralSolve.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/GeneralSolve.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/GeneralSolve.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/GeneralSolve.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.GeneralSVD", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/GeneralSVD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/GeneralSVD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/GeneralSVD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/GeneralSVD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/GeneralSVD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/GeneralSVD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/GeneralSVD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/GeneralSVD.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/GeneralSVD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/GeneralSVD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/GeneralSVD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/GeneralSVD.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/GeneralSVD.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/GeneralSVD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/GeneralSVD.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/GeneralSVD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/GeneralSVD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/GeneralSVD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/GeneralSVD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/GeneralSVD.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.GeneralSVDTrunc", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/GeneralSVDTrunc.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/GeneralSVDTrunc.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.InvertPDCholesky", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/InvertPDCholesky.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/InvertPDCholesky.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.InvertWithLU", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/InvertWithLU.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/InvertWithLU.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/InvertWithLU.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/InvertWithLU.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/InvertWithLU.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/InvertWithLU.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/InvertWithLU.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/InvertWithLU.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/InvertWithLU.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/InvertWithLU.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/InvertWithLU.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/InvertWithLU.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/InvertWithLU.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/InvertWithLU.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/InvertWithLU.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/InvertWithLU.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/InvertWithLU.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/InvertWithLU.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/InvertWithLU.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/InvertWithLU.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.MatBinOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/MatBinOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/MatBinOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/MatBinOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/MatBinOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/MatBinOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/MatBinOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/MatBinOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatBinOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatBinOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatBinOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/MatBinOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/MatBinOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/MatBinOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/MatBinOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/MatBinOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/MatBinOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/MatBinOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/MatBinOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/MatBinOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Mat[Double], b: Mat[Double]): Res", "member" : "org.saddle.linalg.MatBinOp.apply", "link" : "org\/saddle\/linalg\/MatBinOp.html#apply(a:org.saddle.Mat[Double],b:org.saddle.Mat[Double]):Res", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/MatBinOp.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.MatGemmOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/MatGemmOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/MatGemmOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/MatGemmOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/MatGemmOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/MatGemmOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/MatGemmOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/MatGemmOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatGemmOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatGemmOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatGemmOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/MatGemmOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/MatGemmOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/MatGemmOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/MatGemmOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/MatGemmOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/MatGemmOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/MatGemmOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/MatGemmOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/MatGemmOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Mat[Double], b: Mat[Double], c: Mat[Double], alpha: Double, beta: Double): Res", "member" : "org.saddle.linalg.MatGemmOp.apply", "link" : "org\/saddle\/linalg\/MatGemmOp.html#apply(a:org.saddle.Mat[Double],b:org.saddle.Mat[Double],c:org.saddle.Mat[Double],alpha:Double,beta:Double):Res", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/MatGemmOp.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.MatGemmSelfOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Mat[Double], c: Mat[Double], alpha: Double, beta: Double): Res", "member" : "org.saddle.linalg.MatGemmSelfOp.apply", "link" : "org\/saddle\/linalg\/MatGemmSelfOp.html#apply(a:org.saddle.Mat[Double],c:org.saddle.Mat[Double],alpha:Double,beta:Double):Res", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/MatGemmSelfOp.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.MatLinalgOps", "members_trait" : [{"label" : "solvePDTransposed", "tail" : "(rhsT: Mat[Double]): Option[Mat[Double]]", "member" : "org.saddle.linalg.MatLinalgOps.solvePDTransposed", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#solvePDTransposed(rhsT:org.saddle.Mat[Double]):Option[org.saddle.Mat[Double]]", "kind" : "def"}, {"label" : "addDiagonalMatrix", "tail" : "(other: Vec[Double]): Mat[Double]", "member" : "org.saddle.linalg.MatLinalgOps.addDiagonalMatrix", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#addDiagonalMatrix(other:org.saddle.Vec[Double]):org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "scalarOp", "tail" : "(multiply: Double, add: Double): Mat[Double]", "member" : "org.saddle.linalg.MatLinalgOps.scalarOp", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#scalarOp(multiply:Double,add:Double):org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "\\", "tail" : "(rightHandSide: Mat[Double])(op: MatBinOp[GeneralSolve, Option[Mat[Double]]]): Option[Mat[Double]]", "member" : "org.saddle.linalg.MatLinalgOps.\\", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#\\(rightHandSide:org.saddle.Mat[Double])(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.GeneralSolve,Option[org.saddle.Mat[Double]]]):Option[org.saddle.Mat[Double]]", "kind" : "def"}, {"label" : "solve", "tail" : "(rightHandSide: Mat[Double])(op: MatBinOp[GeneralSolve, Option[Mat[Double]]]): Option[Mat[Double]]", "member" : "org.saddle.linalg.MatLinalgOps.solve", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#solve(rightHandSide:org.saddle.Mat[Double])(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.GeneralSolve,Option[org.saddle.Mat[Double]]]):Option[org.saddle.Mat[Double]]", "kind" : "def"}, {"label" : "solveUpperTriangularForTransposed", "tail" : "(rightHandSide: Mat[Double])(op: MatBinOp[SolveUpperTriangular, Option[Mat[Double]]]): Option[Mat[Double]]", "member" : "org.saddle.linalg.MatLinalgOps.solveUpperTriangularForTransposed", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#solveUpperTriangularForTransposed(rightHandSide:org.saddle.Mat[Double])(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.SolveUpperTriangular,Option[org.saddle.Mat[Double]]]):Option[org.saddle.Mat[Double]]", "kind" : "def"}, {"label" : "solveLowerTriangularForTransposed", "tail" : "(rightHandSide: Mat[Double])(op: MatBinOp[SolveLowerTriangular, Option[Mat[Double]]]): Option[Mat[Double]]", "member" : "org.saddle.linalg.MatLinalgOps.solveLowerTriangularForTransposed", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#solveLowerTriangularForTransposed(rightHandSide:org.saddle.Mat[Double])(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.SolveLowerTriangular,Option[org.saddle.Mat[Double]]]):Option[org.saddle.Mat[Double]]", "kind" : "def"}, {"label" : "determinantPD", "tail" : "(op: MatUnaryOp[Cholesky, Option[Mat[Double]]]): Option[Double]", "member" : "org.saddle.linalg.MatLinalgOps.determinantPD", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#determinantPD(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.Cholesky,Option[org.saddle.Mat[Double]]]):Option[Double]", "kind" : "def"}, {"label" : "choleskyLower", "tail" : "(op: MatUnaryOp[Cholesky, Option[Mat[Double]]]): Option[Mat[Double]]", "member" : "org.saddle.linalg.MatLinalgOps.choleskyLower", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#choleskyLower(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.Cholesky,Option[org.saddle.Mat[Double]]]):Option[org.saddle.Mat[Double]]", "kind" : "def"}, {"label" : "eigenValuesSymm", "tail" : "(max: Int)(op: MatUnaryOp1Scalar[EigValSymTrunc, Int, Vec[Double]]): Vec[Double]", "member" : "org.saddle.linalg.MatLinalgOps.eigenValuesSymm", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#eigenValuesSymm(max:Int)(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.EigValSymTrunc,Int,org.saddle.Vec[Double]]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "singularValues", "tail" : "(max: Int)(op: MatUnaryOp1Scalar[SingularValues, Int, Vec[Double]]): Vec[Double]", "member" : "org.saddle.linalg.MatLinalgOps.singularValues", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#singularValues(max:Int)(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.SingularValues,Int,org.saddle.Vec[Double]]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "diagInverseSandwich", "tail" : "(other: Mat[Double])(op: MatBinOp[DiagXAInverseXt, Option[Vec[Double]]]): Option[Vec[Double]]", "member" : "org.saddle.linalg.MatLinalgOps.diagInverseSandwich", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#diagInverseSandwich(other:org.saddle.Mat[Double])(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.DiagXAInverseXt,Option[org.saddle.Vec[Double]]]):Option[org.saddle.Vec[Double]]", "kind" : "def"}, {"label" : "eigSymm", "tail" : "(i: Int)(op: MatUnaryOp1Scalar[EigSTrunc, Int, EigenDecompositionSymmetric]): EigenDecompositionSymmetric", "member" : "org.saddle.linalg.MatLinalgOps.eigSymm", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#eigSymm(i:Int)(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.EigSTrunc,Int,org.saddle.linalg.EigenDecompositionSymmetric]):org.saddle.linalg.EigenDecompositionSymmetric", "kind" : "def"}, {"label" : "eigSymm", "tail" : "(op: MatUnaryOp[EigS, EigenDecompositionSymmetric]): EigenDecompositionSymmetric", "member" : "org.saddle.linalg.MatLinalgOps.eigSymm", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#eigSymm(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.EigS,org.saddle.linalg.EigenDecompositionSymmetric]):org.saddle.linalg.EigenDecompositionSymmetric", "kind" : "def"}, {"label" : "eigNonSymm", "tail" : "(op: MatUnaryOp[EigNS, EigenDecompositionNonSymmetric]): EigenDecompositionNonSymmetric", "member" : "org.saddle.linalg.MatLinalgOps.eigNonSymm", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#eigNonSymm(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.EigNS,org.saddle.linalg.EigenDecompositionNonSymmetric]):org.saddle.linalg.EigenDecompositionNonSymmetric", "kind" : "def"}, {"label" : "isPositiveDefinite", "tail" : "(op: MatUnaryOp[TestPD, Boolean]): Boolean", "member" : "org.saddle.linalg.MatLinalgOps.isPositiveDefinite", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#isPositiveDefinite(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.TestPD,Boolean]):Boolean", "kind" : "def"}, {"label" : "diag", "tail" : "(op: MatUnaryOp[Diag, Vec[Double]]): Vec[Double]", "member" : "org.saddle.linalg.MatLinalgOps.diag", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#diag(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.Diag,org.saddle.Vec[Double]]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "trace", "tail" : "(op: MatUnaryOp[Trace, Double]): Double", "member" : "org.saddle.linalg.MatLinalgOps.trace", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#trace(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.Trace,Double]):Double", "kind" : "def"}, {"label" : "svd", "tail" : "(max: Int)(op: MatUnaryOp1Scalar[GeneralSVDTrunc, Int, SVDResult]): SVDResult", "member" : "org.saddle.linalg.MatLinalgOps.svd", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#svd(max:Int)(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.GeneralSVDTrunc,Int,org.saddle.linalg.SVDResult]):org.saddle.linalg.SVDResult", "kind" : "def"}, {"label" : "svd", "tail" : "(op: MatUnaryOp[GeneralSVD, SVDResult]): SVDResult", "member" : "org.saddle.linalg.MatLinalgOps.svd", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#svd(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.GeneralSVD,org.saddle.linalg.SVDResult]):org.saddle.linalg.SVDResult", "kind" : "def"}, {"label" : "mDiagFromRight", "tail" : "(diag: Vec[Double])(op: MatUnaryOp1Scalar[AxDiag, Vec[Double], B]): B", "member" : "org.saddle.linalg.MatLinalgOps.mDiagFromRight", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#mDiagFromRight(diag:org.saddle.Vec[Double])(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.AxDiag,org.saddle.Vec[Double],MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "mDiagFromLeft", "tail" : "(diag: Vec[Double])(op: MatUnaryOp1Scalar[DiagxA, Vec[Double], B]): B", "member" : "org.saddle.linalg.MatLinalgOps.mDiagFromLeft", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#mDiagFromLeft(diag:org.saddle.Vec[Double])(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.DiagxA,org.saddle.Vec[Double],MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "outerMpC", "tail" : "(alpha: Double, beta: Double, c: Mat[Double])(op: MatGemmSelfOp[aAxAtpbC, Mat[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.outerMpC", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#outerMpC(alpha:Double,beta:Double,c:org.saddle.Mat[Double])(implicitop:org.saddle.linalg.MatGemmSelfOp[org.saddle.linalg.aAxAtpbC,org.saddle.Mat[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "rowSums", "tail" : "(op: MatUnaryOp[RowSums, Vec[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.rowSums", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#rowSums(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.RowSums,org.saddle.Vec[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "colSums", "tail" : "(op: MatUnaryOp[ColSums, Vec[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.colSums", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#colSums(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.ColSums,org.saddle.Vec[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "diagOuterM", "tail" : "(op: MatUnaryOp[DiagAxAt, Vec[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.diagOuterM", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#diagOuterM(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.DiagAxAt,org.saddle.Vec[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "diagInnerM", "tail" : "(op: MatUnaryOp[DiagAtxA, Vec[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.diagInnerM", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#diagInnerM(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.DiagAtxA,org.saddle.Vec[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "outerM", "tail" : "(op: MatUnaryOp[AxAt, Mat[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.outerM", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#outerM(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.AxAt,org.saddle.Mat[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "innerMpC", "tail" : "(alpha: Double, beta: Double, c: Mat[Double])(op: MatGemmSelfOp[aAtxApbC, Mat[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.innerMpC", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#innerMpC(alpha:Double,beta:Double,c:org.saddle.Mat[Double])(implicitop:org.saddle.linalg.MatGemmSelfOp[org.saddle.linalg.aAtxApbC,org.saddle.Mat[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "innerM", "tail" : "(op: MatUnaryOp[AtxA, Mat[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.innerM", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#innerM(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.AtxA,org.saddle.Mat[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "tmmtc", "tail" : "(other: B, c: B, alpha: Double, beta: Double)(op: MatGemmOp[aAtxBtpbC, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.tmmtc", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#tmmtc(other:MatLinalgOps.this.B,c:MatLinalgOps.this.B,alpha:Double,beta:Double)(implicitop:org.saddle.linalg.MatGemmOp[org.saddle.linalg.aAtxBtpbC,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "mmtc", "tail" : "(other: B, c: B, alpha: Double, beta: Double)(op: MatGemmOp[aAxBtpbC, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.mmtc", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#mmtc(other:MatLinalgOps.this.B,c:MatLinalgOps.this.B,alpha:Double,beta:Double)(implicitop:org.saddle.linalg.MatGemmOp[org.saddle.linalg.aAxBtpbC,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "tmmc", "tail" : "(other: B, c: B, alpha: Double, beta: Double)(op: MatGemmOp[aAtxBpbC, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.tmmc", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#tmmc(other:MatLinalgOps.this.B,c:MatLinalgOps.this.B,alpha:Double,beta:Double)(implicitop:org.saddle.linalg.MatGemmOp[org.saddle.linalg.aAtxBpbC,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "mmc", "tail" : "(other: B, c: B, alpha: Double, beta: Double)(op: MatGemmOp[aAxBpbC, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.mmc", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#mmc(other:MatLinalgOps.this.B,c:MatLinalgOps.this.B,alpha:Double,beta:Double)(implicitop:org.saddle.linalg.MatGemmOp[org.saddle.linalg.aAxBpbC,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "tmmt", "tail" : "(other: B)(op: MatBinOp[AtxBt, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.tmmt", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#tmmt(other:MatLinalgOps.this.B)(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.AtxBt,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "mmt", "tail" : "(other: B)(op: MatBinOp[AxBt, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.mmt", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#mmt(other:MatLinalgOps.this.B)(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.AxBt,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "tmm", "tail" : "(other: B)(op: MatBinOp[AtxB, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.tmm", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#tmm(other:MatLinalgOps.this.B)(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.AtxB,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "mm", "tail" : "(other: B)(op: MatBinOp[AxB, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.mm", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#mm(other:MatLinalgOps.this.B)(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.AxB,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "tmvW", "tail" : "(other: Vec[Double], target: Array[Double])(op: MatUnaryOp1ScalarTarget[AtxV, Vec[Double]]): Vec[Double]", "member" : "org.saddle.linalg.MatLinalgOps.tmvW", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#tmvW(other:org.saddle.Vec[Double],target:Array[Double])(implicitop:org.saddle.linalg.MatUnaryOp1ScalarTarget[org.saddle.linalg.AtxV,org.saddle.Vec[Double]]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "mvW", "tail" : "(other: Vec[Double], target: Array[Double])(op: MatUnaryOp1ScalarTarget[AxV, Vec[Double]]): Vec[Double]", "member" : "org.saddle.linalg.MatLinalgOps.mvW", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#mvW(other:org.saddle.Vec[Double],target:Array[Double])(implicitop:org.saddle.linalg.MatUnaryOp1ScalarTarget[org.saddle.linalg.AxV,org.saddle.Vec[Double]]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "tmv", "tail" : "(other: Vec[Double])(op: MatUnaryOp1Scalar[AtxV, Vec[Double], Vec[Double]]): Vec[Double]", "member" : "org.saddle.linalg.MatLinalgOps.tmv", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#tmv(other:org.saddle.Vec[Double])(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.AtxV,org.saddle.Vec[Double],org.saddle.Vec[Double]]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "mv", "tail" : "(other: Vec[Double])(op: MatUnaryOp1Scalar[AxV, Vec[Double], Vec[Double]]): Vec[Double]", "member" : "org.saddle.linalg.MatLinalgOps.mv", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#mv(other:org.saddle.Vec[Double])(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.AxV,org.saddle.Vec[Double],org.saddle.Vec[Double]]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "invertPD", "tail" : "(op: MatUnaryOp[InvertPDCholesky, Option[B]]): Option[B]", "member" : "org.saddle.linalg.MatLinalgOps.invertPD", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#invertPD(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.InvertPDCholesky,Option[MatLinalgOps.this.B]]):Option[MatLinalgOps.this.B]", "kind" : "def"}, {"label" : "invert", "tail" : "(op: MatUnaryOp[InvertWithLU, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.invert", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#invert(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.InvertWithLU,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "linalg", "tail" : "(): MatLinalgOps", "member" : "org.saddle.linalg.MatLinalgOps.linalg", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#linalg:org.saddle.linalg.MatLinalgOps", "kind" : "def"}, {"label" : "B", "tail" : "", "member" : "org.saddle.linalg.MatLinalgOps.B", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#B=org.saddle.Mat[Double]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/MatLinalgOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "self", "tail" : ": Mat[Double]", "member" : "org.saddle.linalg.MatLinalgOps.self", "link" : "org\/saddle\/linalg\/MatLinalgOps.html#self:org.saddle.Mat[Double]", "kind" : "abstract val"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/MatLinalgOps.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.MatPimp", "shortDescription" : "", "members_class" : [{"member" : "org.saddle.linalg.MatPimp#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": Mat[Double]", "member" : "org.saddle.linalg.MatPimp.self", "link" : "org\/saddle\/linalg\/MatPimp.html#self:org.saddle.Mat[Double]", "kind" : "val"}, {"label" : "solvePDTransposed", "tail" : "(rhsT: Mat[Double]): Option[Mat[Double]]", "member" : "org.saddle.linalg.MatLinalgOps.solvePDTransposed", "link" : "org\/saddle\/linalg\/MatPimp.html#solvePDTransposed(rhsT:org.saddle.Mat[Double]):Option[org.saddle.Mat[Double]]", "kind" : "def"}, {"label" : "addDiagonalMatrix", "tail" : "(other: Vec[Double]): Mat[Double]", "member" : "org.saddle.linalg.MatLinalgOps.addDiagonalMatrix", "link" : "org\/saddle\/linalg\/MatPimp.html#addDiagonalMatrix(other:org.saddle.Vec[Double]):org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "scalarOp", "tail" : "(multiply: Double, add: Double): Mat[Double]", "member" : "org.saddle.linalg.MatLinalgOps.scalarOp", "link" : "org\/saddle\/linalg\/MatPimp.html#scalarOp(multiply:Double,add:Double):org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "\\", "tail" : "(rightHandSide: Mat[Double])(op: MatBinOp[GeneralSolve, Option[Mat[Double]]]): Option[Mat[Double]]", "member" : "org.saddle.linalg.MatLinalgOps.\\", "link" : "org\/saddle\/linalg\/MatPimp.html#\\(rightHandSide:org.saddle.Mat[Double])(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.GeneralSolve,Option[org.saddle.Mat[Double]]]):Option[org.saddle.Mat[Double]]", "kind" : "def"}, {"label" : "solve", "tail" : "(rightHandSide: Mat[Double])(op: MatBinOp[GeneralSolve, Option[Mat[Double]]]): Option[Mat[Double]]", "member" : "org.saddle.linalg.MatLinalgOps.solve", "link" : "org\/saddle\/linalg\/MatPimp.html#solve(rightHandSide:org.saddle.Mat[Double])(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.GeneralSolve,Option[org.saddle.Mat[Double]]]):Option[org.saddle.Mat[Double]]", "kind" : "def"}, {"label" : "solveUpperTriangularForTransposed", "tail" : "(rightHandSide: Mat[Double])(op: MatBinOp[SolveUpperTriangular, Option[Mat[Double]]]): Option[Mat[Double]]", "member" : "org.saddle.linalg.MatLinalgOps.solveUpperTriangularForTransposed", "link" : "org\/saddle\/linalg\/MatPimp.html#solveUpperTriangularForTransposed(rightHandSide:org.saddle.Mat[Double])(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.SolveUpperTriangular,Option[org.saddle.Mat[Double]]]):Option[org.saddle.Mat[Double]]", "kind" : "def"}, {"label" : "solveLowerTriangularForTransposed", "tail" : "(rightHandSide: Mat[Double])(op: MatBinOp[SolveLowerTriangular, Option[Mat[Double]]]): Option[Mat[Double]]", "member" : "org.saddle.linalg.MatLinalgOps.solveLowerTriangularForTransposed", "link" : "org\/saddle\/linalg\/MatPimp.html#solveLowerTriangularForTransposed(rightHandSide:org.saddle.Mat[Double])(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.SolveLowerTriangular,Option[org.saddle.Mat[Double]]]):Option[org.saddle.Mat[Double]]", "kind" : "def"}, {"label" : "determinantPD", "tail" : "(op: MatUnaryOp[Cholesky, Option[Mat[Double]]]): Option[Double]", "member" : "org.saddle.linalg.MatLinalgOps.determinantPD", "link" : "org\/saddle\/linalg\/MatPimp.html#determinantPD(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.Cholesky,Option[org.saddle.Mat[Double]]]):Option[Double]", "kind" : "def"}, {"label" : "choleskyLower", "tail" : "(op: MatUnaryOp[Cholesky, Option[Mat[Double]]]): Option[Mat[Double]]", "member" : "org.saddle.linalg.MatLinalgOps.choleskyLower", "link" : "org\/saddle\/linalg\/MatPimp.html#choleskyLower(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.Cholesky,Option[org.saddle.Mat[Double]]]):Option[org.saddle.Mat[Double]]", "kind" : "def"}, {"label" : "eigenValuesSymm", "tail" : "(max: Int)(op: MatUnaryOp1Scalar[EigValSymTrunc, Int, Vec[Double]]): Vec[Double]", "member" : "org.saddle.linalg.MatLinalgOps.eigenValuesSymm", "link" : "org\/saddle\/linalg\/MatPimp.html#eigenValuesSymm(max:Int)(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.EigValSymTrunc,Int,org.saddle.Vec[Double]]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "singularValues", "tail" : "(max: Int)(op: MatUnaryOp1Scalar[SingularValues, Int, Vec[Double]]): Vec[Double]", "member" : "org.saddle.linalg.MatLinalgOps.singularValues", "link" : "org\/saddle\/linalg\/MatPimp.html#singularValues(max:Int)(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.SingularValues,Int,org.saddle.Vec[Double]]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "diagInverseSandwich", "tail" : "(other: Mat[Double])(op: MatBinOp[DiagXAInverseXt, Option[Vec[Double]]]): Option[Vec[Double]]", "member" : "org.saddle.linalg.MatLinalgOps.diagInverseSandwich", "link" : "org\/saddle\/linalg\/MatPimp.html#diagInverseSandwich(other:org.saddle.Mat[Double])(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.DiagXAInverseXt,Option[org.saddle.Vec[Double]]]):Option[org.saddle.Vec[Double]]", "kind" : "def"}, {"label" : "eigSymm", "tail" : "(i: Int)(op: MatUnaryOp1Scalar[EigSTrunc, Int, EigenDecompositionSymmetric]): EigenDecompositionSymmetric", "member" : "org.saddle.linalg.MatLinalgOps.eigSymm", "link" : "org\/saddle\/linalg\/MatPimp.html#eigSymm(i:Int)(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.EigSTrunc,Int,org.saddle.linalg.EigenDecompositionSymmetric]):org.saddle.linalg.EigenDecompositionSymmetric", "kind" : "def"}, {"label" : "eigSymm", "tail" : "(op: MatUnaryOp[EigS, EigenDecompositionSymmetric]): EigenDecompositionSymmetric", "member" : "org.saddle.linalg.MatLinalgOps.eigSymm", "link" : "org\/saddle\/linalg\/MatPimp.html#eigSymm(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.EigS,org.saddle.linalg.EigenDecompositionSymmetric]):org.saddle.linalg.EigenDecompositionSymmetric", "kind" : "def"}, {"label" : "eigNonSymm", "tail" : "(op: MatUnaryOp[EigNS, EigenDecompositionNonSymmetric]): EigenDecompositionNonSymmetric", "member" : "org.saddle.linalg.MatLinalgOps.eigNonSymm", "link" : "org\/saddle\/linalg\/MatPimp.html#eigNonSymm(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.EigNS,org.saddle.linalg.EigenDecompositionNonSymmetric]):org.saddle.linalg.EigenDecompositionNonSymmetric", "kind" : "def"}, {"label" : "isPositiveDefinite", "tail" : "(op: MatUnaryOp[TestPD, Boolean]): Boolean", "member" : "org.saddle.linalg.MatLinalgOps.isPositiveDefinite", "link" : "org\/saddle\/linalg\/MatPimp.html#isPositiveDefinite(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.TestPD,Boolean]):Boolean", "kind" : "def"}, {"label" : "diag", "tail" : "(op: MatUnaryOp[Diag, Vec[Double]]): Vec[Double]", "member" : "org.saddle.linalg.MatLinalgOps.diag", "link" : "org\/saddle\/linalg\/MatPimp.html#diag(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.Diag,org.saddle.Vec[Double]]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "trace", "tail" : "(op: MatUnaryOp[Trace, Double]): Double", "member" : "org.saddle.linalg.MatLinalgOps.trace", "link" : "org\/saddle\/linalg\/MatPimp.html#trace(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.Trace,Double]):Double", "kind" : "def"}, {"label" : "svd", "tail" : "(max: Int)(op: MatUnaryOp1Scalar[GeneralSVDTrunc, Int, SVDResult]): SVDResult", "member" : "org.saddle.linalg.MatLinalgOps.svd", "link" : "org\/saddle\/linalg\/MatPimp.html#svd(max:Int)(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.GeneralSVDTrunc,Int,org.saddle.linalg.SVDResult]):org.saddle.linalg.SVDResult", "kind" : "def"}, {"label" : "svd", "tail" : "(op: MatUnaryOp[GeneralSVD, SVDResult]): SVDResult", "member" : "org.saddle.linalg.MatLinalgOps.svd", "link" : "org\/saddle\/linalg\/MatPimp.html#svd(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.GeneralSVD,org.saddle.linalg.SVDResult]):org.saddle.linalg.SVDResult", "kind" : "def"}, {"label" : "mDiagFromRight", "tail" : "(diag: Vec[Double])(op: MatUnaryOp1Scalar[AxDiag, Vec[Double], B]): B", "member" : "org.saddle.linalg.MatLinalgOps.mDiagFromRight", "link" : "org\/saddle\/linalg\/MatPimp.html#mDiagFromRight(diag:org.saddle.Vec[Double])(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.AxDiag,org.saddle.Vec[Double],MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "mDiagFromLeft", "tail" : "(diag: Vec[Double])(op: MatUnaryOp1Scalar[DiagxA, Vec[Double], B]): B", "member" : "org.saddle.linalg.MatLinalgOps.mDiagFromLeft", "link" : "org\/saddle\/linalg\/MatPimp.html#mDiagFromLeft(diag:org.saddle.Vec[Double])(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.DiagxA,org.saddle.Vec[Double],MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "outerMpC", "tail" : "(alpha: Double, beta: Double, c: Mat[Double])(op: MatGemmSelfOp[aAxAtpbC, Mat[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.outerMpC", "link" : "org\/saddle\/linalg\/MatPimp.html#outerMpC(alpha:Double,beta:Double,c:org.saddle.Mat[Double])(implicitop:org.saddle.linalg.MatGemmSelfOp[org.saddle.linalg.aAxAtpbC,org.saddle.Mat[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "rowSums", "tail" : "(op: MatUnaryOp[RowSums, Vec[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.rowSums", "link" : "org\/saddle\/linalg\/MatPimp.html#rowSums(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.RowSums,org.saddle.Vec[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "colSums", "tail" : "(op: MatUnaryOp[ColSums, Vec[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.colSums", "link" : "org\/saddle\/linalg\/MatPimp.html#colSums(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.ColSums,org.saddle.Vec[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "diagOuterM", "tail" : "(op: MatUnaryOp[DiagAxAt, Vec[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.diagOuterM", "link" : "org\/saddle\/linalg\/MatPimp.html#diagOuterM(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.DiagAxAt,org.saddle.Vec[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "diagInnerM", "tail" : "(op: MatUnaryOp[DiagAtxA, Vec[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.diagInnerM", "link" : "org\/saddle\/linalg\/MatPimp.html#diagInnerM(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.DiagAtxA,org.saddle.Vec[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "outerM", "tail" : "(op: MatUnaryOp[AxAt, Mat[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.outerM", "link" : "org\/saddle\/linalg\/MatPimp.html#outerM(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.AxAt,org.saddle.Mat[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "innerMpC", "tail" : "(alpha: Double, beta: Double, c: Mat[Double])(op: MatGemmSelfOp[aAtxApbC, Mat[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.innerMpC", "link" : "org\/saddle\/linalg\/MatPimp.html#innerMpC(alpha:Double,beta:Double,c:org.saddle.Mat[Double])(implicitop:org.saddle.linalg.MatGemmSelfOp[org.saddle.linalg.aAtxApbC,org.saddle.Mat[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "innerM", "tail" : "(op: MatUnaryOp[AtxA, Mat[Double]]): B", "member" : "org.saddle.linalg.MatLinalgOps.innerM", "link" : "org\/saddle\/linalg\/MatPimp.html#innerM(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.AtxA,org.saddle.Mat[Double]]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "tmmtc", "tail" : "(other: B, c: B, alpha: Double, beta: Double)(op: MatGemmOp[aAtxBtpbC, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.tmmtc", "link" : "org\/saddle\/linalg\/MatPimp.html#tmmtc(other:MatLinalgOps.this.B,c:MatLinalgOps.this.B,alpha:Double,beta:Double)(implicitop:org.saddle.linalg.MatGemmOp[org.saddle.linalg.aAtxBtpbC,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "mmtc", "tail" : "(other: B, c: B, alpha: Double, beta: Double)(op: MatGemmOp[aAxBtpbC, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.mmtc", "link" : "org\/saddle\/linalg\/MatPimp.html#mmtc(other:MatLinalgOps.this.B,c:MatLinalgOps.this.B,alpha:Double,beta:Double)(implicitop:org.saddle.linalg.MatGemmOp[org.saddle.linalg.aAxBtpbC,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "tmmc", "tail" : "(other: B, c: B, alpha: Double, beta: Double)(op: MatGemmOp[aAtxBpbC, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.tmmc", "link" : "org\/saddle\/linalg\/MatPimp.html#tmmc(other:MatLinalgOps.this.B,c:MatLinalgOps.this.B,alpha:Double,beta:Double)(implicitop:org.saddle.linalg.MatGemmOp[org.saddle.linalg.aAtxBpbC,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "mmc", "tail" : "(other: B, c: B, alpha: Double, beta: Double)(op: MatGemmOp[aAxBpbC, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.mmc", "link" : "org\/saddle\/linalg\/MatPimp.html#mmc(other:MatLinalgOps.this.B,c:MatLinalgOps.this.B,alpha:Double,beta:Double)(implicitop:org.saddle.linalg.MatGemmOp[org.saddle.linalg.aAxBpbC,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "tmmt", "tail" : "(other: B)(op: MatBinOp[AtxBt, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.tmmt", "link" : "org\/saddle\/linalg\/MatPimp.html#tmmt(other:MatLinalgOps.this.B)(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.AtxBt,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "mmt", "tail" : "(other: B)(op: MatBinOp[AxBt, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.mmt", "link" : "org\/saddle\/linalg\/MatPimp.html#mmt(other:MatLinalgOps.this.B)(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.AxBt,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "tmm", "tail" : "(other: B)(op: MatBinOp[AtxB, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.tmm", "link" : "org\/saddle\/linalg\/MatPimp.html#tmm(other:MatLinalgOps.this.B)(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.AtxB,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "mm", "tail" : "(other: B)(op: MatBinOp[AxB, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.mm", "link" : "org\/saddle\/linalg\/MatPimp.html#mm(other:MatLinalgOps.this.B)(implicitop:org.saddle.linalg.MatBinOp[org.saddle.linalg.AxB,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "tmvW", "tail" : "(other: Vec[Double], target: Array[Double])(op: MatUnaryOp1ScalarTarget[AtxV, Vec[Double]]): Vec[Double]", "member" : "org.saddle.linalg.MatLinalgOps.tmvW", "link" : "org\/saddle\/linalg\/MatPimp.html#tmvW(other:org.saddle.Vec[Double],target:Array[Double])(implicitop:org.saddle.linalg.MatUnaryOp1ScalarTarget[org.saddle.linalg.AtxV,org.saddle.Vec[Double]]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "mvW", "tail" : "(other: Vec[Double], target: Array[Double])(op: MatUnaryOp1ScalarTarget[AxV, Vec[Double]]): Vec[Double]", "member" : "org.saddle.linalg.MatLinalgOps.mvW", "link" : "org\/saddle\/linalg\/MatPimp.html#mvW(other:org.saddle.Vec[Double],target:Array[Double])(implicitop:org.saddle.linalg.MatUnaryOp1ScalarTarget[org.saddle.linalg.AxV,org.saddle.Vec[Double]]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "tmv", "tail" : "(other: Vec[Double])(op: MatUnaryOp1Scalar[AtxV, Vec[Double], Vec[Double]]): Vec[Double]", "member" : "org.saddle.linalg.MatLinalgOps.tmv", "link" : "org\/saddle\/linalg\/MatPimp.html#tmv(other:org.saddle.Vec[Double])(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.AtxV,org.saddle.Vec[Double],org.saddle.Vec[Double]]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "mv", "tail" : "(other: Vec[Double])(op: MatUnaryOp1Scalar[AxV, Vec[Double], Vec[Double]]): Vec[Double]", "member" : "org.saddle.linalg.MatLinalgOps.mv", "link" : "org\/saddle\/linalg\/MatPimp.html#mv(other:org.saddle.Vec[Double])(implicitop:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.AxV,org.saddle.Vec[Double],org.saddle.Vec[Double]]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "invertPD", "tail" : "(op: MatUnaryOp[InvertPDCholesky, Option[B]]): Option[B]", "member" : "org.saddle.linalg.MatLinalgOps.invertPD", "link" : "org\/saddle\/linalg\/MatPimp.html#invertPD(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.InvertPDCholesky,Option[MatLinalgOps.this.B]]):Option[MatLinalgOps.this.B]", "kind" : "def"}, {"label" : "invert", "tail" : "(op: MatUnaryOp[InvertWithLU, B]): B", "member" : "org.saddle.linalg.MatLinalgOps.invert", "link" : "org\/saddle\/linalg\/MatPimp.html#invert(implicitop:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.InvertWithLU,MatLinalgOps.this.B]):MatLinalgOps.this.B", "kind" : "def"}, {"label" : "linalg", "tail" : "(): MatLinalgOps", "member" : "org.saddle.linalg.MatLinalgOps.linalg", "link" : "org\/saddle\/linalg\/MatPimp.html#linalg:org.saddle.linalg.MatLinalgOps", "kind" : "def"}, {"label" : "B", "tail" : "", "member" : "org.saddle.linalg.MatLinalgOps.B", "link" : "org\/saddle\/linalg\/MatPimp.html#B=org.saddle.Mat[Double]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/MatPimp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/MatPimp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/MatPimp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/MatPimp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/MatPimp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/MatPimp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/MatPimp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatPimp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatPimp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatPimp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/MatPimp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/MatPimp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/MatPimp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/MatPimp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/MatPimp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/MatPimp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/MatPimp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/MatPimp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/MatPimp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/linalg\/MatPimp.html", "kind" : "class"}, {"name" : "org.saddle.linalg.MatUnaryOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/MatUnaryOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Mat[Double]): Res", "member" : "org.saddle.linalg.MatUnaryOp.apply", "link" : "org\/saddle\/linalg\/MatUnaryOp.html#apply(a:org.saddle.Mat[Double]):Res", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/MatUnaryOp.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.MatUnaryOp1Scalar", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Mat[Double], s: T): Res", "member" : "org.saddle.linalg.MatUnaryOp1Scalar.apply", "link" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html#apply(a:org.saddle.Mat[Double],s:T):Res", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/MatUnaryOp1Scalar.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.MatUnaryOp1ScalarTarget", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Mat[Double], s: T, t: Array[Double]): Unit", "member" : "org.saddle.linalg.MatUnaryOp1ScalarTarget.apply", "link" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html#apply(a:org.saddle.Mat[Double],s:T,t:Array[Double]):Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/MatUnaryOp1ScalarTarget.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.OpImpl", "members_trait" : [{"label" : "multDiagFromRight", "tail" : ": MatUnaryOp1Scalar[AxDiag, Vec[Double], Mat[Double]]", "member" : "org.saddle.linalg.OpImpl.multDiagFromRight", "link" : "org\/saddle\/linalg\/OpImpl.html#multDiagFromRight:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.AxDiag,org.saddle.Vec[Double],org.saddle.Mat[Double]]", "kind" : "implicit val"}, {"label" : "multDiagFromLeft", "tail" : ": MatUnaryOp1Scalar[DiagxA, Vec[Double], Mat[Double]]", "member" : "org.saddle.linalg.OpImpl.multDiagFromLeft", "link" : "org\/saddle\/linalg\/OpImpl.html#multDiagFromLeft:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.DiagxA,org.saddle.Vec[Double],org.saddle.Mat[Double]]", "kind" : "implicit val"}, {"label" : "singularValues", "tail" : ": MatUnaryOp1Scalar[SingularValues, Int, Vec[Double]]", "member" : "org.saddle.linalg.OpImpl.singularValues", "link" : "org\/saddle\/linalg\/OpImpl.html#singularValues:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.SingularValues,Int,org.saddle.Vec[Double]]", "kind" : "implicit val"}, {"label" : "svdtrunc", "tail" : ": MatUnaryOp1Scalar[GeneralSVDTrunc, Int, SVDResult]", "member" : "org.saddle.linalg.OpImpl.svdtrunc", "link" : "org\/saddle\/linalg\/OpImpl.html#svdtrunc:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.GeneralSVDTrunc,Int,org.saddle.linalg.SVDResult]", "kind" : "implicit val"}, {"label" : "ispd", "tail" : ": MatUnaryOp[TestPD, Boolean]", "member" : "org.saddle.linalg.OpImpl.ispd", "link" : "org\/saddle\/linalg\/OpImpl.html#ispd:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.TestPD,Boolean]", "kind" : "implicit val"}, {"label" : "diag", "tail" : ": MatUnaryOp[Diag, Vec[Double]]", "member" : "org.saddle.linalg.OpImpl.diag", "link" : "org\/saddle\/linalg\/OpImpl.html#diag:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.Diag,org.saddle.Vec[Double]]", "kind" : "implicit val"}, {"label" : "trace", "tail" : ": MatUnaryOp[Trace, Double]", "member" : "org.saddle.linalg.OpImpl.trace", "link" : "org\/saddle\/linalg\/OpImpl.html#trace:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.Trace,Double]", "kind" : "implicit val"}, {"label" : "mult4c", "tail" : ": MatGemmOp[aAtxBtpbC, Mat[Double]]", "member" : "org.saddle.linalg.OpImpl.mult4c", "link" : "org\/saddle\/linalg\/OpImpl.html#mult4c:org.saddle.linalg.MatGemmOp[org.saddle.linalg.aAtxBtpbC,org.saddle.Mat[Double]]", "kind" : "implicit val"}, {"label" : "mult4", "tail" : ": MatBinOp[AtxBt, Mat[Double]]", "member" : "org.saddle.linalg.OpImpl.mult4", "link" : "org\/saddle\/linalg\/OpImpl.html#mult4:org.saddle.linalg.MatBinOp[org.saddle.linalg.AtxBt,org.saddle.Mat[Double]]", "kind" : "implicit val"}, {"label" : "mult3selfplus", "tail" : ": MatGemmSelfOp[aAxAtpbC, Mat[Double]]", "member" : "org.saddle.linalg.OpImpl.mult3selfplus", "link" : "org\/saddle\/linalg\/OpImpl.html#mult3selfplus:org.saddle.linalg.MatGemmSelfOp[org.saddle.linalg.aAxAtpbC,org.saddle.Mat[Double]]", "kind" : "implicit val"}, {"label" : "mult3c", "tail" : ": MatGemmOp[aAxBtpbC, Mat[Double]]", "member" : "org.saddle.linalg.OpImpl.mult3c", "link" : "org\/saddle\/linalg\/OpImpl.html#mult3c:org.saddle.linalg.MatGemmOp[org.saddle.linalg.aAxBtpbC,org.saddle.Mat[Double]]", "kind" : "implicit val"}, {"label" : "mult3self", "tail" : ": MatUnaryOp[AxAt, Mat[Double]]", "member" : "org.saddle.linalg.OpImpl.mult3self", "link" : "org\/saddle\/linalg\/OpImpl.html#mult3self:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.AxAt,org.saddle.Mat[Double]]", "kind" : "implicit val"}, {"label" : "mult3", "tail" : ": MatBinOp[AxBt, Mat[Double]]", "member" : "org.saddle.linalg.OpImpl.mult3", "link" : "org\/saddle\/linalg\/OpImpl.html#mult3:org.saddle.linalg.MatBinOp[org.saddle.linalg.AxBt,org.saddle.Mat[Double]]", "kind" : "implicit val"}, {"label" : "mult2cself", "tail" : ": MatGemmSelfOp[aAtxApbC, Mat[Double]]", "member" : "org.saddle.linalg.OpImpl.mult2cself", "link" : "org\/saddle\/linalg\/OpImpl.html#mult2cself:org.saddle.linalg.MatGemmSelfOp[org.saddle.linalg.aAtxApbC,org.saddle.Mat[Double]]", "kind" : "implicit val"}, {"label" : "mult2self", "tail" : ": MatUnaryOp[AtxA, Mat[Double]]", "member" : "org.saddle.linalg.OpImpl.mult2self", "link" : "org\/saddle\/linalg\/OpImpl.html#mult2self:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.AtxA,org.saddle.Mat[Double]]", "kind" : "implicit val"}, {"label" : "mult2c", "tail" : ": MatGemmOp[aAtxBpbC, Mat[Double]]", "member" : "org.saddle.linalg.OpImpl.mult2c", "link" : "org\/saddle\/linalg\/OpImpl.html#mult2c:org.saddle.linalg.MatGemmOp[org.saddle.linalg.aAtxBpbC,org.saddle.Mat[Double]]", "kind" : "implicit val"}, {"label" : "mult2", "tail" : ": MatBinOp[AtxB, Mat[Double]]", "member" : "org.saddle.linalg.OpImpl.mult2", "link" : "org\/saddle\/linalg\/OpImpl.html#mult2:org.saddle.linalg.MatBinOp[org.saddle.linalg.AtxB,org.saddle.Mat[Double]]", "kind" : "implicit val"}, {"label" : "mult1c", "tail" : ": MatGemmOp[aAxBpbC, Mat[Double]]", "member" : "org.saddle.linalg.OpImpl.mult1c", "link" : "org\/saddle\/linalg\/OpImpl.html#mult1c:org.saddle.linalg.MatGemmOp[org.saddle.linalg.aAxBpbC,org.saddle.Mat[Double]]", "kind" : "implicit val"}, {"label" : "mult1", "tail" : ": MatBinOp[AxB, Mat[Double]]", "member" : "org.saddle.linalg.OpImpl.mult1", "link" : "org\/saddle\/linalg\/OpImpl.html#mult1:org.saddle.linalg.MatBinOp[org.saddle.linalg.AxB,org.saddle.Mat[Double]]", "kind" : "implicit val"}, {"label" : "diagXAInverseXt", "tail" : ": MatBinOp[DiagXAInverseXt, Option[Vec[Double]]]", "member" : "org.saddle.linalg.OpImpl.diagXAInverseXt", "link" : "org\/saddle\/linalg\/OpImpl.html#diagXAInverseXt:org.saddle.linalg.MatBinOp[org.saddle.linalg.DiagXAInverseXt,Option[org.saddle.Vec[Double]]]", "kind" : "implicit val"}, {"label" : "solve", "tail" : ": MatBinOp[GeneralSolve, Option[Mat[Double]]]", "member" : "org.saddle.linalg.OpImpl.solve", "link" : "org\/saddle\/linalg\/OpImpl.html#solve:org.saddle.linalg.MatBinOp[org.saddle.linalg.GeneralSolve,Option[org.saddle.Mat[Double]]]", "kind" : "implicit val"}, {"label" : "forwardSolveUpperDiagonalForTransposed", "tail" : ": MatBinOp[SolveUpperTriangular, Option[Mat[Double]]]", "member" : "org.saddle.linalg.OpImpl.forwardSolveUpperDiagonalForTransposed", "link" : "org\/saddle\/linalg\/OpImpl.html#forwardSolveUpperDiagonalForTransposed:org.saddle.linalg.MatBinOp[org.saddle.linalg.SolveUpperTriangular,Option[org.saddle.Mat[Double]]]", "kind" : "implicit val"}, {"label" : "forwardSolveForTransposed", "tail" : ": MatBinOp[SolveLowerTriangular, Option[Mat[Double]]]", "member" : "org.saddle.linalg.OpImpl.forwardSolveForTransposed", "link" : "org\/saddle\/linalg\/OpImpl.html#forwardSolveForTransposed:org.saddle.linalg.MatBinOp[org.saddle.linalg.SolveLowerTriangular,Option[org.saddle.Mat[Double]]]", "kind" : "implicit val"}, {"label" : "cholesky", "tail" : ": MatUnaryOp[Cholesky, Option[Mat[Double]]]", "member" : "org.saddle.linalg.OpImpl.cholesky", "link" : "org\/saddle\/linalg\/OpImpl.html#cholesky:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.Cholesky,Option[org.saddle.Mat[Double]]]", "kind" : "implicit val"}, {"label" : "colSums", "tail" : ": MatUnaryOp[ColSums, Vec[Double]]", "member" : "org.saddle.linalg.OpImpl.colSums", "link" : "org\/saddle\/linalg\/OpImpl.html#colSums:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.ColSums,org.saddle.Vec[Double]]", "kind" : "implicit val"}, {"label" : "diagAtxA", "tail" : ": MatUnaryOp[DiagAtxA, Vec[Double]]", "member" : "org.saddle.linalg.OpImpl.diagAtxA", "link" : "org\/saddle\/linalg\/OpImpl.html#diagAtxA:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.DiagAtxA,org.saddle.Vec[Double]]", "kind" : "implicit val"}, {"label" : "diagAxAt", "tail" : ": MatUnaryOp[DiagAxAt, Vec[Double]]", "member" : "org.saddle.linalg.OpImpl.diagAxAt", "link" : "org\/saddle\/linalg\/OpImpl.html#diagAxAt:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.DiagAxAt,org.saddle.Vec[Double]]", "kind" : "implicit val"}, {"label" : "rowSums", "tail" : ": MatUnaryOp[RowSums, Vec[Double]]", "member" : "org.saddle.linalg.OpImpl.rowSums", "link" : "org\/saddle\/linalg\/OpImpl.html#rowSums:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.RowSums,org.saddle.Vec[Double]]", "kind" : "implicit val"}, {"label" : "invertPD", "tail" : ": MatUnaryOp[InvertPDCholesky, Option[Mat[Double]]]", "member" : "org.saddle.linalg.OpImpl.invertPD", "link" : "org\/saddle\/linalg\/OpImpl.html#invertPD:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.InvertPDCholesky,Option[org.saddle.Mat[Double]]]", "kind" : "implicit val"}, {"label" : "invertGeneralLU", "tail" : ": MatUnaryOp[InvertWithLU, Mat[Double]]", "member" : "org.saddle.linalg.OpImpl.invertGeneralLU", "link" : "org\/saddle\/linalg\/OpImpl.html#invertGeneralLU:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.InvertWithLU,org.saddle.Mat[Double]]", "kind" : "implicit val"}, {"label" : "svd", "tail" : ": MatUnaryOp[GeneralSVD, SVDResult]", "member" : "org.saddle.linalg.OpImpl.svd", "link" : "org\/saddle\/linalg\/OpImpl.html#svd:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.GeneralSVD,org.saddle.linalg.SVDResult]", "kind" : "implicit val"}, {"label" : "nonsymmEigen", "tail" : ": MatUnaryOp[EigNS, EigenDecompositionNonSymmetric]", "member" : "org.saddle.linalg.OpImpl.nonsymmEigen", "link" : "org\/saddle\/linalg\/OpImpl.html#nonsymmEigen:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.EigNS,org.saddle.linalg.EigenDecompositionNonSymmetric]", "kind" : "implicit val"}, {"label" : "symmEigen", "tail" : ": MatUnaryOp[EigS, EigenDecompositionSymmetric]", "member" : "org.saddle.linalg.OpImpl.symmEigen", "link" : "org\/saddle\/linalg\/OpImpl.html#symmEigen:org.saddle.linalg.MatUnaryOp[org.saddle.linalg.EigS,org.saddle.linalg.EigenDecompositionSymmetric]", "kind" : "implicit val"}, {"label" : "symmEigenTrunc", "tail" : ": MatUnaryOp1Scalar[EigSTrunc, Int, EigenDecompositionSymmetric]", "member" : "org.saddle.linalg.OpImpl.symmEigenTrunc", "link" : "org\/saddle\/linalg\/OpImpl.html#symmEigenTrunc:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.EigSTrunc,Int,org.saddle.linalg.EigenDecompositionSymmetric]", "kind" : "implicit val"}, {"label" : "symmEigenValueTrunc", "tail" : ": MatUnaryOp1Scalar[EigValSymTrunc, Int, Vec[Double]]", "member" : "org.saddle.linalg.OpImpl.symmEigenValueTrunc", "link" : "org\/saddle\/linalg\/OpImpl.html#symmEigenValueTrunc:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.EigValSymTrunc,Int,org.saddle.Vec[Double]]", "kind" : "implicit val"}, {"label" : "dgemvTTarget", "tail" : ": MatUnaryOp1ScalarTarget[AtxV, Vec[Double]]", "member" : "org.saddle.linalg.OpImpl.dgemvTTarget", "link" : "org\/saddle\/linalg\/OpImpl.html#dgemvTTarget:org.saddle.linalg.MatUnaryOp1ScalarTarget[org.saddle.linalg.AtxV,org.saddle.Vec[Double]]", "kind" : "implicit val"}, {"label" : "dgemvTarget", "tail" : ": MatUnaryOp1ScalarTarget[AxV, Vec[Double]]", "member" : "org.saddle.linalg.OpImpl.dgemvTarget", "link" : "org\/saddle\/linalg\/OpImpl.html#dgemvTarget:org.saddle.linalg.MatUnaryOp1ScalarTarget[org.saddle.linalg.AxV,org.saddle.Vec[Double]]", "kind" : "implicit val"}, {"label" : "dgemvT", "tail" : ": MatUnaryOp1Scalar[AtxV, Vec[Double], Vec[Double]]", "member" : "org.saddle.linalg.OpImpl.dgemvT", "link" : "org\/saddle\/linalg\/OpImpl.html#dgemvT:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.AtxV,org.saddle.Vec[Double],org.saddle.Vec[Double]]", "kind" : "implicit val"}, {"label" : "dgemv", "tail" : ": MatUnaryOp1Scalar[AxV, Vec[Double], Vec[Double]]", "member" : "org.saddle.linalg.OpImpl.dgemv", "link" : "org\/saddle\/linalg\/OpImpl.html#dgemv:org.saddle.linalg.MatUnaryOp1Scalar[org.saddle.linalg.AxV,org.saddle.Vec[Double],org.saddle.Vec[Double]]", "kind" : "implicit val"}, {"label" : "ddot", "tail" : ": VecBinOp[Vec[Double], Double]", "member" : "org.saddle.linalg.OpImpl.ddot", "link" : "org\/saddle\/linalg\/OpImpl.html#ddot:org.saddle.linalg.VecBinOp[org.saddle.Vec[Double],Double]", "kind" : "implicit val"}, {"label" : "LAPACK", "tail" : ": LAPACK", "member" : "org.saddle.linalg.OpImpl.LAPACK", "link" : "org\/saddle\/linalg\/OpImpl.html#LAPACK:com.github.fommil.netlib.LAPACK", "kind" : "lazy val"}, {"label" : "BLAS", "tail" : ": BLAS", "member" : "org.saddle.linalg.OpImpl.BLAS", "link" : "org\/saddle\/linalg\/OpImpl.html#BLAS:com.github.fommil.netlib.BLAS", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/OpImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/OpImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/OpImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/OpImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/OpImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/OpImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/OpImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/OpImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/OpImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/OpImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/OpImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/OpImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/OpImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/OpImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/OpImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/OpImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/OpImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/OpImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/OpImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/OpImpl.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.RowSums", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/RowSums.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/RowSums.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/RowSums.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/RowSums.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/RowSums.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/RowSums.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/RowSums.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/RowSums.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/RowSums.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/RowSums.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/RowSums.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/RowSums.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/RowSums.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/RowSums.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/RowSums.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/RowSums.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/RowSums.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/RowSums.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/RowSums.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/RowSums.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.SingularValues", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/SingularValues.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/SingularValues.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/SingularValues.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/SingularValues.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/SingularValues.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/SingularValues.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/SingularValues.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/SingularValues.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/SingularValues.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/SingularValues.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/SingularValues.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/SingularValues.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/SingularValues.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/SingularValues.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/SingularValues.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/SingularValues.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/SingularValues.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/SingularValues.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/SingularValues.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/SingularValues.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.SolveLowerTriangular", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/SolveLowerTriangular.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/SolveLowerTriangular.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.SolveUpperTriangular", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/SolveUpperTriangular.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/SolveUpperTriangular.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.SVDResult", "shortDescription" : "", "members_case class" : [{"member" : "org.saddle.linalg.SVDResult#<init>", "error" : "unsupported entity"}, {"label" : "vt", "tail" : ": Mat[Double]", "member" : "org.saddle.linalg.SVDResult.vt", "link" : "org\/saddle\/linalg\/SVDResult.html#vt:org.saddle.Mat[Double]", "kind" : "val"}, {"label" : "sigma", "tail" : ": Vec[Double]", "member" : "org.saddle.linalg.SVDResult.sigma", "link" : "org\/saddle\/linalg\/SVDResult.html#sigma:org.saddle.Vec[Double]", "kind" : "val"}, {"label" : "u", "tail" : ": Mat[Double]", "member" : "org.saddle.linalg.SVDResult.u", "link" : "org\/saddle\/linalg\/SVDResult.html#u:org.saddle.Mat[Double]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/SVDResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/SVDResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/SVDResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/SVDResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/SVDResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/SVDResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/SVDResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/SVDResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/SVDResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/SVDResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/SVDResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/SVDResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/SVDResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/SVDResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/SVDResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/SVDResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/saddle\/linalg\/SVDResult.html", "kind" : "case class"}, {"name" : "org.saddle.linalg.TestPD", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/TestPD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/TestPD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/TestPD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/TestPD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/TestPD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/TestPD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/TestPD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/TestPD.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/TestPD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/TestPD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/TestPD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/TestPD.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/TestPD.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/TestPD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/TestPD.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/TestPD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/TestPD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/TestPD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/TestPD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/TestPD.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.Trace", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/Trace.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/Trace.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/Trace.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/Trace.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/Trace.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/Trace.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/Trace.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/Trace.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/Trace.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/Trace.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/Trace.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/Trace.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/Trace.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/Trace.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/Trace.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/Trace.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/Trace.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/Trace.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/Trace.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/Trace.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.VecBinOp", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/VecBinOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/VecBinOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/VecBinOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/VecBinOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/VecBinOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/VecBinOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/VecBinOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/VecBinOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/VecBinOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/VecBinOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/VecBinOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/VecBinOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/VecBinOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/VecBinOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/VecBinOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/VecBinOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/VecBinOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/VecBinOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/VecBinOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Vec[Double], b: O): Res", "member" : "org.saddle.linalg.VecBinOp.apply", "link" : "org\/saddle\/linalg\/VecBinOp.html#apply(a:org.saddle.Vec[Double],b:O):Res", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/VecBinOp.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.VecLinalgOps", "members_trait" : [{"label" : "sampleCovariance", "tail" : "(other: Vec[Double]): Double", "member" : "org.saddle.linalg.VecLinalgOps.sampleCovariance", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#sampleCovariance(other:org.saddle.Vec[Double]):Double", "kind" : "def"}, {"label" : "pearson", "tail" : "(other: Vec[Double]): Double", "member" : "org.saddle.linalg.VecLinalgOps.pearson", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#pearson(other:org.saddle.Vec[Double]):Double", "kind" : "def"}, {"label" : "demeaned", "tail" : "(): Vec[Double]", "member" : "org.saddle.linalg.VecLinalgOps.demeaned", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#demeaned:org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "sampleStandardDeviation", "tail" : "(): Double", "member" : "org.saddle.linalg.VecLinalgOps.sampleStandardDeviation", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#sampleStandardDeviation:Double", "kind" : "def"}, {"label" : "sampleVariance", "tail" : "(): Double", "member" : "org.saddle.linalg.VecLinalgOps.sampleVariance", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#sampleVariance:Double", "kind" : "def"}, {"label" : "mean2", "tail" : "(): Double", "member" : "org.saddle.linalg.VecLinalgOps.mean2", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#mean2:Double", "kind" : "def"}, {"label" : "sum2", "tail" : "(): Double", "member" : "org.saddle.linalg.VecLinalgOps.sum2", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#sum2:Double", "kind" : "def"}, {"label" : "vv", "tail" : "(other: Vec[Double])(op: VecBinOp[Vec[Double], Double]): Double", "member" : "org.saddle.linalg.VecLinalgOps.vv", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#vv(other:org.saddle.Vec[Double])(implicitop:org.saddle.linalg.VecBinOp[org.saddle.Vec[Double],Double]):Double", "kind" : "def"}, {"label" : "linalg", "tail" : "(): VecLinalgOps", "member" : "org.saddle.linalg.VecLinalgOps.linalg", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#linalg:org.saddle.linalg.VecLinalgOps", "kind" : "def"}, {"label" : "B", "tail" : "", "member" : "org.saddle.linalg.VecLinalgOps.B", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#B=org.saddle.Vec[Double]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/VecLinalgOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "self", "tail" : ": Vec[Double]", "member" : "org.saddle.linalg.VecLinalgOps.self", "link" : "org\/saddle\/linalg\/VecLinalgOps.html#self:org.saddle.Vec[Double]", "kind" : "abstract val"}], "shortDescription" : "", "trait" : "org\/saddle\/linalg\/VecLinalgOps.html", "kind" : "trait"}, {"name" : "org.saddle.linalg.VecPimp", "shortDescription" : "", "members_class" : [{"member" : "org.saddle.linalg.VecPimp#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": Vec[Double]", "member" : "org.saddle.linalg.VecPimp.self", "link" : "org\/saddle\/linalg\/VecPimp.html#self:org.saddle.Vec[Double]", "kind" : "val"}, {"label" : "sampleCovariance", "tail" : "(other: Vec[Double]): Double", "member" : "org.saddle.linalg.VecLinalgOps.sampleCovariance", "link" : "org\/saddle\/linalg\/VecPimp.html#sampleCovariance(other:org.saddle.Vec[Double]):Double", "kind" : "def"}, {"label" : "pearson", "tail" : "(other: Vec[Double]): Double", "member" : "org.saddle.linalg.VecLinalgOps.pearson", "link" : "org\/saddle\/linalg\/VecPimp.html#pearson(other:org.saddle.Vec[Double]):Double", "kind" : "def"}, {"label" : "demeaned", "tail" : "(): Vec[Double]", "member" : "org.saddle.linalg.VecLinalgOps.demeaned", "link" : "org\/saddle\/linalg\/VecPimp.html#demeaned:org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "sampleStandardDeviation", "tail" : "(): Double", "member" : "org.saddle.linalg.VecLinalgOps.sampleStandardDeviation", "link" : "org\/saddle\/linalg\/VecPimp.html#sampleStandardDeviation:Double", "kind" : "def"}, {"label" : "sampleVariance", "tail" : "(): Double", "member" : "org.saddle.linalg.VecLinalgOps.sampleVariance", "link" : "org\/saddle\/linalg\/VecPimp.html#sampleVariance:Double", "kind" : "def"}, {"label" : "mean2", "tail" : "(): Double", "member" : "org.saddle.linalg.VecLinalgOps.mean2", "link" : "org\/saddle\/linalg\/VecPimp.html#mean2:Double", "kind" : "def"}, {"label" : "sum2", "tail" : "(): Double", "member" : "org.saddle.linalg.VecLinalgOps.sum2", "link" : "org\/saddle\/linalg\/VecPimp.html#sum2:Double", "kind" : "def"}, {"label" : "vv", "tail" : "(other: Vec[Double])(op: VecBinOp[Vec[Double], Double]): Double", "member" : "org.saddle.linalg.VecLinalgOps.vv", "link" : "org\/saddle\/linalg\/VecPimp.html#vv(other:org.saddle.Vec[Double])(implicitop:org.saddle.linalg.VecBinOp[org.saddle.Vec[Double],Double]):Double", "kind" : "def"}, {"label" : "linalg", "tail" : "(): VecLinalgOps", "member" : "org.saddle.linalg.VecLinalgOps.linalg", "link" : "org\/saddle\/linalg\/VecPimp.html#linalg:org.saddle.linalg.VecLinalgOps", "kind" : "def"}, {"label" : "B", "tail" : "", "member" : "org.saddle.linalg.VecLinalgOps.B", "link" : "org\/saddle\/linalg\/VecPimp.html#B=org.saddle.Vec[Double]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/linalg\/VecPimp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/linalg\/VecPimp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/linalg\/VecPimp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/linalg\/VecPimp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/linalg\/VecPimp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/linalg\/VecPimp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/linalg\/VecPimp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/VecPimp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/VecPimp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/linalg\/VecPimp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/linalg\/VecPimp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/linalg\/VecPimp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/linalg\/VecPimp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/linalg\/VecPimp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/linalg\/VecPimp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/linalg\/VecPimp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/linalg\/VecPimp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/linalg\/VecPimp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/linalg\/VecPimp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/linalg\/VecPimp.html", "kind" : "class"}], "org.saddle.time" : [{"name" : "org.saddle.time.DAILY", "shortDescription" : "", "object" : "org\/saddle\/time\/DAILY$.html", "members_object" : [{"label" : "toDur", "tail" : "(): Period", "member" : "org.saddle.time.Frequency.toDur", "link" : "org\/saddle\/time\/DAILY$.html#toDur:org.joda.time.Period", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Frequency", "member" : "org.saddle.time.Frequency.toICal", "link" : "org\/saddle\/time\/DAILY$.html#toICal:com.google.ical.values.Frequency", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/DAILY$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/DAILY$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/DAILY$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/DAILY$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/DAILY$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/DAILY$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/DAILY$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/DAILY$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/DAILY$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/DAILY$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/DAILY$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/DAILY$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/DAILY$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/DAILY$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/DAILY$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/DAILY$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/DAILY$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.time.FR", "shortDescription" : "", "object" : "org\/saddle\/time\/FR$.html", "members_object" : [{"label" : "apply", "tail" : "(i: Int): WeekdayNum", "member" : "org.saddle.time.Weekday.apply", "link" : "org\/saddle\/time\/FR$.html#apply(i:Int):org.saddle.time.WeekdayNum", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Weekday", "member" : "org.saddle.time.Weekday.toICal", "link" : "org\/saddle\/time\/FR$.html#toICal:com.google.ical.values.Weekday", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/FR$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/FR$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/FR$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/FR$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/FR$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/FR$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/FR$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/FR$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/FR$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/FR$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/FR$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/FR$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/FR$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/FR$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/FR$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/FR$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/FR$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.time.Frequency", "members_trait" : [{"label" : "toDur", "tail" : "(): Period", "member" : "org.saddle.time.Frequency.toDur", "link" : "org\/saddle\/time\/Frequency.html#toDur:org.joda.time.Period", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Frequency", "member" : "org.saddle.time.Frequency.toICal", "link" : "org\/saddle\/time\/Frequency.html#toICal:com.google.ical.values.Frequency", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/Frequency.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/Frequency.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/Frequency.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/Frequency.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/Frequency.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/Frequency.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/Frequency.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/Frequency.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/Frequency.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/Frequency.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/Frequency.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/Frequency.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/time\/Frequency.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/Frequency.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/Frequency.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/time\/Frequency.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/Frequency.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/Frequency.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/Frequency.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Enumeration of frequency base for utilizing with an RRule", "trait" : "org\/saddle\/time\/Frequency.html", "kind" : "trait"}, {"name" : "org.saddle.time.HOURLY", "shortDescription" : "", "object" : "org\/saddle\/time\/HOURLY$.html", "members_object" : [{"label" : "toDur", "tail" : "(): Period", "member" : "org.saddle.time.Frequency.toDur", "link" : "org\/saddle\/time\/HOURLY$.html#toDur:org.joda.time.Period", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Frequency", "member" : "org.saddle.time.Frequency.toICal", "link" : "org\/saddle\/time\/HOURLY$.html#toICal:com.google.ical.values.Frequency", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/HOURLY$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/HOURLY$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/HOURLY$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/HOURLY$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/HOURLY$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/HOURLY$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/HOURLY$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/HOURLY$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/HOURLY$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/HOURLY$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/HOURLY$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/HOURLY$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/HOURLY$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/HOURLY$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/HOURLY$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/HOURLY$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/HOURLY$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.time.MINUTELY", "shortDescription" : "", "object" : "org\/saddle\/time\/MINUTELY$.html", "members_object" : [{"label" : "toDur", "tail" : "(): Period", "member" : "org.saddle.time.Frequency.toDur", "link" : "org\/saddle\/time\/MINUTELY$.html#toDur:org.joda.time.Period", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Frequency", "member" : "org.saddle.time.Frequency.toICal", "link" : "org\/saddle\/time\/MINUTELY$.html#toICal:com.google.ical.values.Frequency", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/MINUTELY$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/MINUTELY$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/MINUTELY$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/MINUTELY$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/MINUTELY$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/MINUTELY$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/MINUTELY$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/MINUTELY$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/MINUTELY$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/MINUTELY$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/MINUTELY$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/MINUTELY$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/MINUTELY$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/MINUTELY$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/MINUTELY$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/MINUTELY$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/MINUTELY$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.time.MO", "shortDescription" : "", "object" : "org\/saddle\/time\/MO$.html", "members_object" : [{"label" : "apply", "tail" : "(i: Int): WeekdayNum", "member" : "org.saddle.time.Weekday.apply", "link" : "org\/saddle\/time\/MO$.html#apply(i:Int):org.saddle.time.WeekdayNum", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Weekday", "member" : "org.saddle.time.Weekday.toICal", "link" : "org\/saddle\/time\/MO$.html#toICal:com.google.ical.values.Weekday", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/MO$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/MO$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/MO$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/MO$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/MO$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/MO$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/MO$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/MO$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/MO$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/MO$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/MO$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/MO$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/MO$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/MO$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/MO$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/MO$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/MO$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.time.MONTHLY", "shortDescription" : "", "object" : "org\/saddle\/time\/MONTHLY$.html", "members_object" : [{"label" : "toDur", "tail" : "(): Period", "member" : "org.saddle.time.Frequency.toDur", "link" : "org\/saddle\/time\/MONTHLY$.html#toDur:org.joda.time.Period", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Frequency", "member" : "org.saddle.time.Frequency.toICal", "link" : "org\/saddle\/time\/MONTHLY$.html#toICal:com.google.ical.values.Frequency", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/MONTHLY$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/MONTHLY$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/MONTHLY$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/MONTHLY$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/MONTHLY$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/MONTHLY$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/MONTHLY$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/MONTHLY$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/MONTHLY$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/MONTHLY$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/MONTHLY$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/MONTHLY$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/MONTHLY$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/MONTHLY$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/MONTHLY$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/MONTHLY$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/MONTHLY$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.time.RichDT", "shortDescription" : "Enriched DateTime, helps to simplify Date handling API", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.saddle.time.RichDT.toString", "link" : "org\/saddle\/time\/RichDT.html#toString():String", "kind" : "def"}, {"label" : "stripTime", "tail" : "(): RichDT", "member" : "org.saddle.time.RichDT.stripTime", "link" : "org\/saddle\/time\/RichDT.html#stripTime:org.saddle.time.RichDT", "kind" : "def"}, {"label" : ">=", "tail" : "(ot: T)(fn: (T) ⇒ ReadableInstant): Boolean", "member" : "org.saddle.time.RichDT.>=", "link" : "org\/saddle\/time\/RichDT.html#>=[T](ot:T)(implicitfn:T=>org.joda.time.ReadableInstant):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(ot: T)(fn: (T) ⇒ ReadableInstant): Boolean", "member" : "org.saddle.time.RichDT.<=", "link" : "org\/saddle\/time\/RichDT.html#<=[T](ot:T)(implicitfn:T=>org.joda.time.ReadableInstant):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(ot: T)(fn: (T) ⇒ ReadableInstant): Boolean", "member" : "org.saddle.time.RichDT.>", "link" : "org\/saddle\/time\/RichDT.html#>[T](ot:T)(implicitfn:T=>org.joda.time.ReadableInstant):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(ot: T)(fn: (T) ⇒ ReadableInstant): Boolean", "member" : "org.saddle.time.RichDT.<", "link" : "org\/saddle\/time\/RichDT.html#<[T](ot:T)(implicitfn:T=>org.joda.time.ReadableInstant):Boolean", "kind" : "def"}, {"label" : "-", "tail" : "(rp: T): RichDT", "member" : "org.saddle.time.RichDT.-", "link" : "org\/saddle\/time\/RichDT.html#-[T<:org.joda.time.ReadablePeriod](rp:T):org.saddle.time.RichDT", "kind" : "def"}, {"label" : "+", "tail" : "(rp: T): RichDT", "member" : "org.saddle.time.RichDT.+", "link" : "org\/saddle\/time\/RichDT.html#+[T<:org.joda.time.ReadablePeriod](rp:T):org.saddle.time.RichDT", "kind" : "def"}, {"member" : "org.saddle.time.RichDT#<init>", "error" : "unsupported entity"}, {"label" : "dt", "tail" : ": DateTime", "member" : "org.saddle.time.RichDT.dt", "link" : "org\/saddle\/time\/RichDT.html#dt:org.joda.time.DateTime", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/RichDT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/RichDT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/RichDT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/RichDT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/RichDT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/RichDT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/RichDT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/RichDT.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/RichDT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/RichDT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/RichDT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/RichDT.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/RichDT.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/RichDT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/RichDT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/RichDT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/saddle\/time\/RichDT.html", "kind" : "case class"}, {"name" : "org.saddle.time.RRule", "shortDescription" : "Wrapper of a RFC 2445 RRULE or EXRULE as implemented in the googlerfc2445 java library.", "object" : "org\/saddle\/time\/RRule$.html", "members_object" : [{"label" : "apply", "tail" : "(f: Frequency): RRule", "member" : "org.saddle.time.RRule.apply", "link" : "org\/saddle\/time\/RRule$.html#apply(f:org.saddle.time.Frequency):org.saddle.time.RRule", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/RRule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/RRule$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/RRule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/RRule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/RRule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/RRule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/RRule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/RRule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/RRule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/RRule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/RRule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/RRule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/time\/RRule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/RRule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/RRule$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/time\/RRule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/RRule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/RRule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/RRule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.saddle.time.RRule.toString", "link" : "org\/saddle\/time\/RRule.html#toString():String", "kind" : "def"}, {"label" : "from", "tail" : "(dt: DateTime): Iterator[DateTime]", "member" : "org.saddle.time.RRule.from", "link" : "org\/saddle\/time\/RRule.html#from(dt:org.joda.time.DateTime):Iterator[org.joda.time.DateTime]", "kind" : "def"}, {"label" : "except", "tail" : "(rrule: RRule, from: Option[DateTime]): RRule", "member" : "org.saddle.time.RRule.except", "link" : "org\/saddle\/time\/RRule.html#except(rrule:org.saddle.time.RRule,from:Option[org.joda.time.DateTime]):org.saddle.time.RRule", "kind" : "def"}, {"label" : "join", "tail" : "(rrule: RRule, from: Option[DateTime]): RRule", "member" : "org.saddle.time.RRule.join", "link" : "org\/saddle\/time\/RRule.html#join(rrule:org.saddle.time.RRule,from:Option[org.joda.time.DateTime]):org.saddle.time.RRule", "kind" : "def"}, {"label" : "counting", "tail" : "(i: Int): AnyRef { def from(dt: org.joda.time.DateTime): org.joda.time.DateTime }", "member" : "org.saddle.time.RRule.counting", "link" : "org\/saddle\/time\/RRule.html#counting(i:Int):AnyRef{deffrom(dt:org.joda.time.DateTime):org.joda.time.DateTime}", "kind" : "def"}, {"label" : "inZone", "tail" : "(tz: DateTimeZone): RRule", "member" : "org.saddle.time.RRule.inZone", "link" : "org\/saddle\/time\/RRule.html#inZone(tz:org.joda.time.DateTimeZone):org.saddle.time.RRule", "kind" : "def"}, {"label" : "bySecond", "tail" : "(s: Int*): RRule", "member" : "org.saddle.time.RRule.bySecond", "link" : "org\/saddle\/time\/RRule.html#bySecond(s:Int*):org.saddle.time.RRule", "kind" : "def"}, {"label" : "byMinute", "tail" : "(m: Int*): RRule", "member" : "org.saddle.time.RRule.byMinute", "link" : "org\/saddle\/time\/RRule.html#byMinute(m:Int*):org.saddle.time.RRule", "kind" : "def"}, {"label" : "byHour", "tail" : "(h: Int*): RRule", "member" : "org.saddle.time.RRule.byHour", "link" : "org\/saddle\/time\/RRule.html#byHour(h:Int*):org.saddle.time.RRule", "kind" : "def"}, {"label" : "byWeekDay", "tail" : "(d: T*)(conv: (T) ⇒ WeekdayNum): RRule", "member" : "org.saddle.time.RRule.byWeekDay", "link" : "org\/saddle\/time\/RRule.html#byWeekDay[T](d:T*)(implicitconv:T=>org.saddle.time.WeekdayNum):org.saddle.time.RRule", "kind" : "def"}, {"label" : "byWeekNo", "tail" : "(w: Int*): RRule", "member" : "org.saddle.time.RRule.byWeekNo", "link" : "org\/saddle\/time\/RRule.html#byWeekNo(w:Int*):org.saddle.time.RRule", "kind" : "def"}, {"label" : "byYearDay", "tail" : "(d: Int*): RRule", "member" : "org.saddle.time.RRule.byYearDay", "link" : "org\/saddle\/time\/RRule.html#byYearDay(d:Int*):org.saddle.time.RRule", "kind" : "def"}, {"label" : "byMonthDay", "tail" : "(d: Int*): RRule", "member" : "org.saddle.time.RRule.byMonthDay", "link" : "org\/saddle\/time\/RRule.html#byMonthDay(d:Int*):org.saddle.time.RRule", "kind" : "def"}, {"label" : "byMonth", "tail" : "(m: Int*): RRule", "member" : "org.saddle.time.RRule.byMonth", "link" : "org\/saddle\/time\/RRule.html#byMonth(m:Int*):org.saddle.time.RRule", "kind" : "def"}, {"label" : "bySetPos", "tail" : "(i: Int*): RRule", "member" : "org.saddle.time.RRule.bySetPos", "link" : "org\/saddle\/time\/RRule.html#bySetPos(i:Int*):org.saddle.time.RRule", "kind" : "def"}, {"label" : "withUntil", "tail" : "(d: DateTime): RRule", "member" : "org.saddle.time.RRule.withUntil", "link" : "org\/saddle\/time\/RRule.html#withUntil(d:org.joda.time.DateTime):org.saddle.time.RRule", "kind" : "def"}, {"label" : "withCount", "tail" : "(c: Int): RRule", "member" : "org.saddle.time.RRule.withCount", "link" : "org\/saddle\/time\/RRule.html#withCount(c:Int):org.saddle.time.RRule", "kind" : "def"}, {"label" : "withInterval", "tail" : "(i: Int): RRule", "member" : "org.saddle.time.RRule.withInterval", "link" : "org\/saddle\/time\/RRule.html#withInterval(i:Int):org.saddle.time.RRule", "kind" : "def"}, {"label" : "withWkSt", "tail" : "(w: Weekday): RRule", "member" : "org.saddle.time.RRule.withWkSt", "link" : "org\/saddle\/time\/RRule.html#withWkSt(w:org.saddle.time.Weekday):org.saddle.time.RRule", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.RRule", "member" : "org.saddle.time.RRule.toICal", "link" : "org\/saddle\/time\/RRule.html#toICal:com.google.ical.values.RRule", "kind" : "def"}, {"label" : "excepts", "tail" : ": List[(RRule, Option[DateTime])]", "member" : "org.saddle.time.RRule.excepts", "link" : "org\/saddle\/time\/RRule.html#excepts:List[(org.saddle.time.RRule,Option[org.joda.time.DateTime])]", "kind" : "val"}, {"label" : "joins", "tail" : ": List[(RRule, Option[DateTime])]", "member" : "org.saddle.time.RRule.joins", "link" : "org\/saddle\/time\/RRule.html#joins:List[(org.saddle.time.RRule,Option[org.joda.time.DateTime])]", "kind" : "val"}, {"label" : "inzone", "tail" : ": DateTimeZone", "member" : "org.saddle.time.RRule.inzone", "link" : "org\/saddle\/time\/RRule.html#inzone:org.joda.time.DateTimeZone", "kind" : "val"}, {"label" : "bysecond", "tail" : ": List[Int]", "member" : "org.saddle.time.RRule.bysecond", "link" : "org\/saddle\/time\/RRule.html#bysecond:List[Int]", "kind" : "val"}, {"label" : "byminute", "tail" : ": List[Int]", "member" : "org.saddle.time.RRule.byminute", "link" : "org\/saddle\/time\/RRule.html#byminute:List[Int]", "kind" : "val"}, {"label" : "byhour", "tail" : ": List[Int]", "member" : "org.saddle.time.RRule.byhour", "link" : "org\/saddle\/time\/RRule.html#byhour:List[Int]", "kind" : "val"}, {"label" : "byday", "tail" : ": List[WeekdayNum]", "member" : "org.saddle.time.RRule.byday", "link" : "org\/saddle\/time\/RRule.html#byday:List[org.saddle.time.WeekdayNum]", "kind" : "val"}, {"label" : "byweekno", "tail" : ": List[Int]", "member" : "org.saddle.time.RRule.byweekno", "link" : "org\/saddle\/time\/RRule.html#byweekno:List[Int]", "kind" : "val"}, {"label" : "byyearday", "tail" : ": List[Int]", "member" : "org.saddle.time.RRule.byyearday", "link" : "org\/saddle\/time\/RRule.html#byyearday:List[Int]", "kind" : "val"}, {"label" : "bymonthday", "tail" : ": List[Int]", "member" : "org.saddle.time.RRule.bymonthday", "link" : "org\/saddle\/time\/RRule.html#bymonthday:List[Int]", "kind" : "val"}, {"label" : "bymonth", "tail" : ": List[Int]", "member" : "org.saddle.time.RRule.bymonth", "link" : "org\/saddle\/time\/RRule.html#bymonth:List[Int]", "kind" : "val"}, {"label" : "bysetpos", "tail" : ": List[Int]", "member" : "org.saddle.time.RRule.bysetpos", "link" : "org\/saddle\/time\/RRule.html#bysetpos:List[Int]", "kind" : "val"}, {"label" : "until", "tail" : ": Option[DateTime]", "member" : "org.saddle.time.RRule.until", "link" : "org\/saddle\/time\/RRule.html#until:Option[org.joda.time.DateTime]", "kind" : "val"}, {"label" : "count", "tail" : ": Option[Int]", "member" : "org.saddle.time.RRule.count", "link" : "org\/saddle\/time\/RRule.html#count:Option[Int]", "kind" : "val"}, {"label" : "wkst", "tail" : ": Option[Weekday]", "member" : "org.saddle.time.RRule.wkst", "link" : "org\/saddle\/time\/RRule.html#wkst:Option[org.saddle.time.Weekday]", "kind" : "val"}, {"label" : "interval", "tail" : ": Int", "member" : "org.saddle.time.RRule.interval", "link" : "org\/saddle\/time\/RRule.html#interval:Int", "kind" : "val"}, {"label" : "freq", "tail" : ": Frequency", "member" : "org.saddle.time.RRule.freq", "link" : "org\/saddle\/time\/RRule.html#freq:org.saddle.time.Frequency", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/RRule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/RRule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/RRule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/RRule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/RRule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/RRule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/RRule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/RRule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/RRule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/RRule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/RRule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/RRule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/RRule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/RRule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/RRule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/RRule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/saddle\/time\/RRule.html", "kind" : "case class"}, {"name" : "org.saddle.time.RRules", "shortDescription" : "Helpful prepackaged recurrence rules", "object" : "org\/saddle\/time\/RRules$.html", "members_object" : [{"label" : "conform", "tail" : "(rule: RRule, dt: DateTime, forward: Boolean): DateTime", "member" : "org.saddle.time.RRules.conform", "link" : "org\/saddle\/time\/RRules$.html#conform(rule:org.saddle.time.RRule,dt:org.joda.time.DateTime,forward:Boolean):org.joda.time.DateTime", "kind" : "def"}, {"label" : "weeklyOn", "tail" : "(wd: Weekday): RRule", "member" : "org.saddle.time.RRules.weeklyOn", "link" : "org\/saddle\/time\/RRules$.html#weeklyOn(wd:org.saddle.time.Weekday):org.saddle.time.RRule", "kind" : "def"}, {"label" : "boms", "tail" : ": RRule", "member" : "org.saddle.time.RRules.boms", "link" : "org\/saddle\/time\/RRules$.html#boms:org.saddle.time.RRule", "kind" : "val"}, {"label" : "eoms", "tail" : ": RRule", "member" : "org.saddle.time.RRules.eoms", "link" : "org\/saddle\/time\/RRules$.html#eoms:org.saddle.time.RRule", "kind" : "val"}, {"label" : "bizBoqs", "tail" : ": RRule", "member" : "org.saddle.time.RRules.bizBoqs", "link" : "org\/saddle\/time\/RRules$.html#bizBoqs:org.saddle.time.RRule", "kind" : "val"}, {"label" : "bizEoqs", "tail" : ": RRule", "member" : "org.saddle.time.RRules.bizEoqs", "link" : "org\/saddle\/time\/RRules$.html#bizEoqs:org.saddle.time.RRule", "kind" : "val"}, {"label" : "bizBoms", "tail" : ": RRule", "member" : "org.saddle.time.RRules.bizBoms", "link" : "org\/saddle\/time\/RRules$.html#bizBoms:org.saddle.time.RRule", "kind" : "val"}, {"label" : "bizEoms", "tail" : ": RRule", "member" : "org.saddle.time.RRules.bizEoms", "link" : "org\/saddle\/time\/RRules$.html#bizEoms:org.saddle.time.RRule", "kind" : "val"}, {"label" : "bizDays", "tail" : ": RRule", "member" : "org.saddle.time.RRules.bizDays", "link" : "org\/saddle\/time\/RRules$.html#bizDays:org.saddle.time.RRule", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/RRules$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/RRules$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/RRules$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/RRules$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/RRules$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/RRules$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/RRules$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/RRules$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/RRules$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/RRules$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/RRules$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/RRules$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/time\/RRules$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/RRules$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/RRules$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/time\/RRules$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/RRules$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/RRules$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/RRules$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.time.SA", "shortDescription" : "", "object" : "org\/saddle\/time\/SA$.html", "members_object" : [{"label" : "apply", "tail" : "(i: Int): WeekdayNum", "member" : "org.saddle.time.Weekday.apply", "link" : "org\/saddle\/time\/SA$.html#apply(i:Int):org.saddle.time.WeekdayNum", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Weekday", "member" : "org.saddle.time.Weekday.toICal", "link" : "org\/saddle\/time\/SA$.html#toICal:com.google.ical.values.Weekday", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/SA$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/SA$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/SA$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/SA$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/SA$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/SA$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/SA$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/SA$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/SA$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/SA$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/SA$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/SA$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/SA$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/SA$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/SA$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/SA$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/SA$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.time.SECONDLY", "shortDescription" : "", "object" : "org\/saddle\/time\/SECONDLY$.html", "members_object" : [{"label" : "toDur", "tail" : "(): Period", "member" : "org.saddle.time.Frequency.toDur", "link" : "org\/saddle\/time\/SECONDLY$.html#toDur:org.joda.time.Period", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Frequency", "member" : "org.saddle.time.Frequency.toICal", "link" : "org\/saddle\/time\/SECONDLY$.html#toICal:com.google.ical.values.Frequency", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/SECONDLY$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/SECONDLY$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/SECONDLY$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/SECONDLY$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/SECONDLY$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/SECONDLY$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/SECONDLY$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/SECONDLY$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/SECONDLY$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/SECONDLY$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/SECONDLY$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/SECONDLY$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/SECONDLY$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/SECONDLY$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/SECONDLY$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/SECONDLY$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/SECONDLY$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.time.SU", "shortDescription" : "", "object" : "org\/saddle\/time\/SU$.html", "members_object" : [{"label" : "apply", "tail" : "(i: Int): WeekdayNum", "member" : "org.saddle.time.Weekday.apply", "link" : "org\/saddle\/time\/SU$.html#apply(i:Int):org.saddle.time.WeekdayNum", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Weekday", "member" : "org.saddle.time.Weekday.toICal", "link" : "org\/saddle\/time\/SU$.html#toICal:com.google.ical.values.Weekday", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/SU$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/SU$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/SU$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/SU$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/SU$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/SU$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/SU$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/SU$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/SU$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/SU$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/SU$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/SU$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/SU$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/SU$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/SU$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/SU$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/SU$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.time.TH", "shortDescription" : "", "object" : "org\/saddle\/time\/TH$.html", "members_object" : [{"label" : "apply", "tail" : "(i: Int): WeekdayNum", "member" : "org.saddle.time.Weekday.apply", "link" : "org\/saddle\/time\/TH$.html#apply(i:Int):org.saddle.time.WeekdayNum", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Weekday", "member" : "org.saddle.time.Weekday.toICal", "link" : "org\/saddle\/time\/TH$.html#toICal:com.google.ical.values.Weekday", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/TH$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/TH$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/TH$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/TH$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/TH$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/TH$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/TH$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/TH$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/TH$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/TH$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/TH$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/TH$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/TH$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/TH$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/TH$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/TH$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/TH$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.time.TimeAccessors", "shortDescription" : "Class providing time accessor methods for Vec and Index containing DateTimes", "members_class" : [{"label" : "getFieldFast", "tail" : "(fld: DateTimeField): Vec[Int]", "member" : "org.saddle.time.TimeAccessors.getFieldFast", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#getFieldFast(fld:org.joda.time.DateTimeField):org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "extractor", "tail" : "(unit: Long, range: Long): Vec[Int]", "member" : "org.saddle.time.TimeAccessors.extractor", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#extractor(unit:Long,range:Long):org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "getField", "tail" : "(field: DateTimeField, isTime: Boolean): Vec[Int]", "member" : "org.saddle.time.TimeAccessors.getField", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#getField(field:org.joda.time.DateTimeField,isTime:Boolean):org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "era", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.era", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#era:T", "kind" : "def"}, {"label" : "centuryOfEra", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.centuryOfEra", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#centuryOfEra:T", "kind" : "def"}, {"label" : "yearOfCentury", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.yearOfCentury", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#yearOfCentury:T", "kind" : "def"}, {"label" : "yearOfEra", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.yearOfEra", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#yearOfEra:T", "kind" : "def"}, {"label" : "year", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.year", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#year:T", "kind" : "def"}, {"label" : "monthOfYear", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.monthOfYear", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#monthOfYear:T", "kind" : "def"}, {"label" : "weekyearOfCentury", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.weekyearOfCentury", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#weekyearOfCentury:T", "kind" : "def"}, {"label" : "weekyear", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.weekyear", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#weekyear:T", "kind" : "def"}, {"label" : "weekOfWeekyear", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.weekOfWeekyear", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#weekOfWeekyear:T", "kind" : "def"}, {"label" : "dayOfYear", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.dayOfYear", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#dayOfYear:T", "kind" : "def"}, {"label" : "dayOfMonth", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.dayOfMonth", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#dayOfMonth:T", "kind" : "def"}, {"label" : "dayOfWeek", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.dayOfWeek", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#dayOfWeek:T", "kind" : "def"}, {"label" : "hourOfDay", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.hourOfDay", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#hourOfDay:T", "kind" : "def"}, {"label" : "halfdayOfDay", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.halfdayOfDay", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#halfdayOfDay:T", "kind" : "def"}, {"label" : "clockhourOfHalfday", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.clockhourOfHalfday", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#clockhourOfHalfday:T", "kind" : "def"}, {"label" : "hourOfHalfday", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.hourOfHalfday", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#hourOfHalfday:T", "kind" : "def"}, {"label" : "clockhourOfDay", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.clockhourOfDay", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#clockhourOfDay:T", "kind" : "def"}, {"label" : "minuteOfDay", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.minuteOfDay", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#minuteOfDay:T", "kind" : "def"}, {"label" : "secondOfDay", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.secondOfDay", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#secondOfDay:T", "kind" : "def"}, {"label" : "millisOfDay", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.millisOfDay", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#millisOfDay:T", "kind" : "def"}, {"label" : "minuteOfHour", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.minuteOfHour", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#minuteOfHour:T", "kind" : "def"}, {"label" : "secondOfMinute", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.secondOfMinute", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#secondOfMinute:T", "kind" : "def"}, {"label" : "millisOfSecond", "tail" : "(): T", "member" : "org.saddle.time.TimeAccessors.millisOfSecond", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#millisOfSecond:T", "kind" : "def"}, {"member" : "org.saddle.time.TimeAccessors#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/package$$TimeAccessors.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/package$$TimeAccessors.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/time\/package$$TimeAccessors.html", "kind" : "class"}, {"name" : "org.saddle.time.timeSorter", "shortDescription" : "", "object" : "org\/saddle\/time\/timeSorter$.html", "members_object" : [{"label" : "sorted", "tail" : "(arr: Array[DateTime]): Array[DateTime]", "member" : "org.saddle.time.timeSorter.sorted", "link" : "org\/saddle\/time\/timeSorter$.html#sorted(arr:Array[org.joda.time.DateTime]):Array[org.joda.time.DateTime]", "kind" : "def"}, {"label" : "argSorted", "tail" : "(arr: Array[DateTime]): Array[Int]", "member" : "org.saddle.time.timeSorter.argSorted", "link" : "org\/saddle\/time\/timeSorter$.html#argSorted(arr:Array[org.joda.time.DateTime]):Array[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/timeSorter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/timeSorter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/timeSorter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/timeSorter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/timeSorter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/timeSorter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/timeSorter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/timeSorter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/timeSorter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/timeSorter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/timeSorter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/timeSorter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/time\/timeSorter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/timeSorter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/timeSorter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/time\/timeSorter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/timeSorter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/timeSorter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/timeSorter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.time.TU", "shortDescription" : "", "object" : "org\/saddle\/time\/TU$.html", "members_object" : [{"label" : "apply", "tail" : "(i: Int): WeekdayNum", "member" : "org.saddle.time.Weekday.apply", "link" : "org\/saddle\/time\/TU$.html#apply(i:Int):org.saddle.time.WeekdayNum", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Weekday", "member" : "org.saddle.time.Weekday.toICal", "link" : "org\/saddle\/time\/TU$.html#toICal:com.google.ical.values.Weekday", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/TU$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/TU$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/TU$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/TU$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/TU$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/TU$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/TU$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/TU$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/TU$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/TU$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/TU$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/TU$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/TU$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/TU$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/TU$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/TU$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/TU$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.time.WE", "shortDescription" : "", "object" : "org\/saddle\/time\/WE$.html", "members_object" : [{"label" : "apply", "tail" : "(i: Int): WeekdayNum", "member" : "org.saddle.time.Weekday.apply", "link" : "org\/saddle\/time\/WE$.html#apply(i:Int):org.saddle.time.WeekdayNum", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Weekday", "member" : "org.saddle.time.Weekday.toICal", "link" : "org\/saddle\/time\/WE$.html#toICal:com.google.ical.values.Weekday", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/WE$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/WE$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/WE$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/WE$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/WE$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/WE$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/WE$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/WE$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/WE$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/WE$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/WE$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/WE$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/WE$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/WE$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/WE$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/WE$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/WE$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.time.Weekday", "members_trait" : [{"label" : "apply", "tail" : "(i: Int): WeekdayNum", "member" : "org.saddle.time.Weekday.apply", "link" : "org\/saddle\/time\/Weekday.html#apply(i:Int):org.saddle.time.WeekdayNum", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Weekday", "member" : "org.saddle.time.Weekday.toICal", "link" : "org\/saddle\/time\/Weekday.html#toICal:com.google.ical.values.Weekday", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/Weekday.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/Weekday.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/Weekday.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/Weekday.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/Weekday.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/Weekday.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/Weekday.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/Weekday.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/Weekday.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/Weekday.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/Weekday.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/Weekday.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/time\/Weekday.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/Weekday.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/Weekday.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/time\/Weekday.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/Weekday.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/Weekday.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/Weekday.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Enumeration of weekdays for utilizing with an RRule", "object" : "org\/saddle\/time\/Weekday$.html", "members_object" : [{"label" : "w2wn", "tail" : "(w: Weekday): WeekdayNum", "member" : "org.saddle.time.Weekday.w2wn", "link" : "org\/saddle\/time\/Weekday$.html#w2wn(w:org.saddle.time.Weekday):org.saddle.time.WeekdayNum", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/Weekday$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/Weekday$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/Weekday$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/Weekday$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/Weekday$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/Weekday$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/Weekday$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/Weekday$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/Weekday$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/Weekday$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/Weekday$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/Weekday$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/time\/Weekday$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/Weekday$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/Weekday$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/time\/Weekday$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/Weekday$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/Weekday$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/Weekday$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/saddle\/time\/Weekday.html", "kind" : "trait"}, {"name" : "org.saddle.time.WeekdayNum", "shortDescription" : "Weekday + Offset, for utilizing with an RRule", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.saddle.time.WeekdayNum.toString", "link" : "org\/saddle\/time\/WeekdayNum.html#toString():String", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.WeekdayNum", "member" : "org.saddle.time.WeekdayNum.toICal", "link" : "org\/saddle\/time\/WeekdayNum.html#toICal:com.google.ical.values.WeekdayNum", "kind" : "def"}, {"member" : "org.saddle.time.WeekdayNum#<init>", "error" : "unsupported entity"}, {"label" : "d", "tail" : ": Weekday", "member" : "org.saddle.time.WeekdayNum.d", "link" : "org\/saddle\/time\/WeekdayNum.html#d:org.saddle.time.Weekday", "kind" : "val"}, {"label" : "n", "tail" : ": Int", "member" : "org.saddle.time.WeekdayNum.n", "link" : "org\/saddle\/time\/WeekdayNum.html#n:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/WeekdayNum.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/WeekdayNum.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/WeekdayNum.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/WeekdayNum.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/WeekdayNum.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/WeekdayNum.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/WeekdayNum.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/WeekdayNum.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/WeekdayNum.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/WeekdayNum.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/WeekdayNum.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/WeekdayNum.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/WeekdayNum.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/WeekdayNum.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/WeekdayNum.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/WeekdayNum.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/saddle\/time\/WeekdayNum.html", "kind" : "case class"}, {"name" : "org.saddle.time.WEEKLY", "shortDescription" : "", "object" : "org\/saddle\/time\/WEEKLY$.html", "members_object" : [{"label" : "toDur", "tail" : "(): Period", "member" : "org.saddle.time.Frequency.toDur", "link" : "org\/saddle\/time\/WEEKLY$.html#toDur:org.joda.time.Period", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Frequency", "member" : "org.saddle.time.Frequency.toICal", "link" : "org\/saddle\/time\/WEEKLY$.html#toICal:com.google.ical.values.Frequency", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/WEEKLY$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/WEEKLY$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/WEEKLY$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/WEEKLY$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/WEEKLY$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/WEEKLY$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/WEEKLY$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/WEEKLY$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/WEEKLY$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/WEEKLY$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/WEEKLY$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/WEEKLY$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/WEEKLY$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/WEEKLY$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/WEEKLY$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/WEEKLY$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/WEEKLY$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.time.YEARLY", "shortDescription" : "", "object" : "org\/saddle\/time\/YEARLY$.html", "members_object" : [{"label" : "toDur", "tail" : "(): Period", "member" : "org.saddle.time.Frequency.toDur", "link" : "org\/saddle\/time\/YEARLY$.html#toDur:org.joda.time.Period", "kind" : "def"}, {"label" : "toICal", "tail" : "(): com.google.ical.values.Frequency", "member" : "org.saddle.time.Frequency.toICal", "link" : "org\/saddle\/time\/YEARLY$.html#toICal:com.google.ical.values.Frequency", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/time\/YEARLY$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/time\/YEARLY$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/time\/YEARLY$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/time\/YEARLY$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/time\/YEARLY$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/time\/YEARLY$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/time\/YEARLY$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/YEARLY$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/YEARLY$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/time\/YEARLY$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/time\/YEARLY$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/time\/YEARLY$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/time\/YEARLY$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/time\/YEARLY$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/time\/YEARLY$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/time\/YEARLY$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/time\/YEARLY$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.saddle.scalar" : [{"name" : "org.saddle.scalar.CouldBeNumber", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/CouldBeNumber.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "negInf", "tail" : "(ev: NUM[T]): T", "member" : "org.saddle.scalar.CouldBeNumber.negInf", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#negInf(implicitev:org.saddle.NUM[T]):T", "kind" : "abstract def"}, {"label" : "inf", "tail" : "(ev: NUM[T]): T", "member" : "org.saddle.scalar.CouldBeNumber.inf", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#inf(implicitev:org.saddle.NUM[T]):T", "kind" : "abstract def"}, {"label" : "one", "tail" : "(ev: NUM[T]): T", "member" : "org.saddle.scalar.CouldBeNumber.one", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#one(implicitev:org.saddle.NUM[T]):T", "kind" : "abstract def"}, {"label" : "zero", "tail" : "(ev: NUM[T]): T", "member" : "org.saddle.scalar.CouldBeNumber.zero", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#zero(implicitev:org.saddle.NUM[T]):T", "kind" : "abstract def"}, {"label" : "isDouble", "tail" : "(): Boolean", "member" : "org.saddle.scalar.CouldBeNumber.isDouble", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#isDouble:Boolean", "kind" : "abstract def"}, {"label" : "toDouble", "tail" : "(t: T)(ev: NUM[T]): Double", "member" : "org.saddle.scalar.CouldBeNumber.toDouble", "link" : "org\/saddle\/scalar\/CouldBeNumber.html#toDouble(t:T)(implicitev:org.saddle.NUM[T]):Double", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/saddle\/scalar\/CouldBeNumber.html", "kind" : "trait"}, {"name" : "org.saddle.scalar.CouldBeOrdered", "members_trait" : [{"label" : "iseq", "tail" : "(a: T, b: T)(ev: ORD[T]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.iseq", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#iseq(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(a: T, b: T)(ev: ORD[T]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.gt", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#gt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(a: T, b: T)(ev: ORD[T]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.lt", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#lt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compare", "tail" : "(a: T, b: T)(ev: ORD[T]): Int", "member" : "org.saddle.scalar.CouldBeOrdered.compare", "link" : "org\/saddle\/scalar\/CouldBeOrdered.html#compare(a:T,b:T)(implicitev:org.saddle.ORD[T]):Int", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/saddle\/scalar\/CouldBeOrdered.html", "kind" : "trait"}, {"name" : "org.saddle.scalar.NA", "shortDescription" : "", "object" : "org\/saddle\/scalar\/NA$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "org.saddle.scalar.NA.toString", "link" : "org\/saddle\/scalar\/NA$.html#toString():String", "kind" : "def"}, {"label" : "get", "tail" : "(): Nothing", "member" : "org.saddle.scalar.NA.get", "link" : "org\/saddle\/scalar\/NA$.html#get:Nothing", "kind" : "def"}, {"label" : "isNA", "tail" : "(): Boolean", "member" : "org.saddle.scalar.NA.isNA", "link" : "org\/saddle\/scalar\/NA$.html#isNA:Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Nothing) ⇒ U): Unit", "member" : "org.saddle.scalar.Scalar.foreach", "link" : "org\/saddle\/scalar\/NA$.html#foreach[U](f:T=>U):Unit", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Nothing) ⇒ Scalar[B]): Scalar[B]", "member" : "org.saddle.scalar.Scalar.flatMap", "link" : "org\/saddle\/scalar\/NA$.html#flatMap[B](f:T=>org.saddle.scalar.Scalar[B]):org.saddle.scalar.Scalar[B]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Nothing) ⇒ B)(arg0: ST[B]): Scalar[B]", "member" : "org.saddle.scalar.Scalar.map", "link" : "org\/saddle\/scalar\/NA$.html#map[B](f:T=>B)(implicitevidence$1:org.saddle.ST[B]):org.saddle.scalar.Scalar[B]", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.scalar.Scalar.isEmpty", "link" : "org\/saddle\/scalar\/NA$.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(): Boolean", "member" : "org.saddle.scalar.Scalar.isDefined", "link" : "org\/saddle\/scalar\/NA$.html#isDefined:Boolean", "kind" : "def"}, {"label" : "toOption", "tail" : "(): Option[Nothing]", "member" : "org.saddle.scalar.Scalar.toOption", "link" : "org\/saddle\/scalar\/NA$.html#toOption:Option[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/NA$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/NA$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/NA$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/NA$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/NA$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/NA$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/NA$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/NA$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/NA$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/NA$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/NA$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/NA$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/NA$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/scalar\/NA$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/NA$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/NA$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/NA$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.scalar.Scalar", "shortDescription" : "Scalar wrapper for a single element of a vector-like container.", "object" : "org\/saddle\/scalar\/Scalar$.html", "members_class" : [{"label" : "foreach", "tail" : "(f: (T) ⇒ U): Unit", "member" : "org.saddle.scalar.Scalar.foreach", "link" : "org\/saddle\/scalar\/Scalar.html#foreach[U](f:T=>U):Unit", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ Scalar[B]): Scalar[B]", "member" : "org.saddle.scalar.Scalar.flatMap", "link" : "org\/saddle\/scalar\/Scalar.html#flatMap[B](f:T=>org.saddle.scalar.Scalar[B]):org.saddle.scalar.Scalar[B]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (T) ⇒ B)(arg0: ST[B]): Scalar[B]", "member" : "org.saddle.scalar.Scalar.map", "link" : "org\/saddle\/scalar\/Scalar.html#map[B](f:T=>B)(implicitevidence$1:org.saddle.ST[B]):org.saddle.scalar.Scalar[B]", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.scalar.Scalar.isEmpty", "link" : "org\/saddle\/scalar\/Scalar.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(): Boolean", "member" : "org.saddle.scalar.Scalar.isDefined", "link" : "org\/saddle\/scalar\/Scalar.html#isDefined:Boolean", "kind" : "def"}, {"label" : "toOption", "tail" : "(): Option[T]", "member" : "org.saddle.scalar.Scalar.toOption", "link" : "org\/saddle\/scalar\/Scalar.html#toOption:Option[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/Scalar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/Scalar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/Scalar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/Scalar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/Scalar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/Scalar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/Scalar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/Scalar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/Scalar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/Scalar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/Scalar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/Scalar.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/scalar\/Scalar.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/Scalar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/scalar\/Scalar.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/scalar\/Scalar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/Scalar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/Scalar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/Scalar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "get", "tail" : "(): T", "member" : "org.saddle.scalar.Scalar.get", "link" : "org\/saddle\/scalar\/Scalar.html#get:T", "kind" : "abstract def"}, {"label" : "isNA", "tail" : "(): Boolean", "member" : "org.saddle.scalar.Scalar.isNA", "link" : "org\/saddle\/scalar\/Scalar.html#isNA:Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "scalarToOption", "tail" : "(sc: Scalar[T]): Option[T]", "member" : "org.saddle.scalar.Scalar.scalarToOption", "link" : "org\/saddle\/scalar\/Scalar$.html#scalarToOption[T](sc:org.saddle.scalar.Scalar[T]):Option[T]", "kind" : "implicit def"}, {"label" : "scalarUnboxF", "tail" : "(ds: Scalar[Float]): Float", "member" : "org.saddle.scalar.Scalar.scalarUnboxF", "link" : "org\/saddle\/scalar\/Scalar$.html#scalarUnboxF(ds:org.saddle.scalar.Scalar[Float]):Float", "kind" : "implicit def"}, {"label" : "scalarUnboxD", "tail" : "(ds: Scalar[Double]): Double", "member" : "org.saddle.scalar.Scalar.scalarUnboxD", "link" : "org\/saddle\/scalar\/Scalar$.html#scalarUnboxD(ds:org.saddle.scalar.Scalar[Double]):Double", "kind" : "implicit def"}, {"label" : "ord", "tail" : "(arg0: ORD[T]): ORD[Scalar[T]]", "member" : "org.saddle.scalar.Scalar.ord", "link" : "org\/saddle\/scalar\/Scalar$.html#ord[T](implicitevidence$2:org.saddle.ORD[T]):org.saddle.ORD[org.saddle.scalar.Scalar[T]]", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(x: T)(st: ST[T]): Scalar[T]", "member" : "org.saddle.scalar.Scalar.apply", "link" : "org\/saddle\/scalar\/Scalar$.html#apply[T](x:T)(implicitst:org.saddle.ST[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "UnboxF", "tail" : "", "member" : "org.saddle.scalar.Scalar.UnboxF", "link" : "org\/saddle\/scalar\/Scalar$.html#UnboxFextendsAnyRef", "kind" : "implicit class"}, {"label" : "UnboxD", "tail" : "", "member" : "org.saddle.scalar.Scalar.UnboxD", "link" : "org\/saddle\/scalar\/Scalar$.html#UnboxDextendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/Scalar$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/Scalar$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/Scalar$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/Scalar$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/Scalar$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/Scalar$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/Scalar$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/Scalar$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/Scalar$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/Scalar$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/Scalar$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/Scalar$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/scalar\/Scalar$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/Scalar$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/scalar\/Scalar$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/scalar\/Scalar$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/Scalar$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/Scalar$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/Scalar$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/scalar\/Scalar.html", "kind" : "class"}, {"name" : "org.saddle.scalar.ScalarHelperOps", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "concat", "tail" : "(vecs: IndexedSeq[Vec[T]]): Vec[T]", "member" : "org.saddle.scalar.ScalarHelperOps.concat", "link" : "org\/saddle\/scalar\/ScalarHelperOps.html#concat(vecs:IndexedSeq[org.saddle.Vec[T]]):org.saddle.Vec[T]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/saddle\/scalar\/ScalarHelperOps.html", "kind" : "trait"}, {"name" : "org.saddle.scalar.ScalarTag", "members_trait" : [{"label" : "erasure", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTag.erasure", "link" : "org\/saddle\/scalar\/ScalarTag.html#erasure:Class[_]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.scalar.ScalarTag.toString", "link" : "org\/saddle\/scalar\/ScalarTag.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.scalar.ScalarTag.equals", "link" : "org\/saddle\/scalar\/ScalarTag.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.scalar.ScalarTag.hashCode", "link" : "org\/saddle\/scalar\/ScalarTag.html#hashCode():Int", "kind" : "def"}, {"label" : "isAnyVal", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAnyVal", "link" : "org\/saddle\/scalar\/ScalarTag.html#isAnyVal:Boolean", "kind" : "def"}, {"label" : "isAny", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAny", "link" : "org\/saddle\/scalar\/ScalarTag.html#isAny:Boolean", "kind" : "def"}, {"label" : "strList", "tail" : "(): (T) ⇒ List[String]", "member" : "org.saddle.scalar.ScalarTag.strList", "link" : "org\/saddle\/scalar\/ScalarTag.html#strList:T=>List[String]", "kind" : "def"}, {"label" : "isDouble", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isDouble", "link" : "org\/saddle\/scalar\/ScalarTag.html#isDouble:Boolean", "kind" : "def"}, {"label" : "isTuple", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isTuple", "link" : "org\/saddle\/scalar\/ScalarTag.html#isTuple:Boolean", "kind" : "def"}, {"label" : "iseq", "tail" : "(a: T, b: T)(ev: ORD[T]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.iseq", "link" : "org\/saddle\/scalar\/ScalarTag.html#iseq(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(a: T, b: T)(ev: ORD[T]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.gt", "link" : "org\/saddle\/scalar\/ScalarTag.html#gt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(a: T, b: T)(ev: ORD[T]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.lt", "link" : "org\/saddle\/scalar\/ScalarTag.html#lt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "altMatConstructor", "tail" : "(r: Int, c: Int, arr: Array[Vec[T]])(st: ST[T]): Mat[T]", "member" : "org.saddle.scalar.SpecializedFactory.altMatConstructor", "link" : "org\/saddle\/scalar\/ScalarTag.html#altMatConstructor(r:Int,c:Int,arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(arr: Array[Vec[T]])(st: ST[T]): Mat[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeMat", "link" : "org\/saddle\/scalar\/ScalarTag.html#makeMat(arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(x: Any): Boolean", "member" : "scala.reflect.ClassTag.canEqual", "link" : "org\/saddle\/scalar\/ScalarTag.html#canEqual(x:Any):Boolean", "kind" : "def"}, {"label" : "unapply", "tail" : "(x: Any): Option[T]", "member" : "scala.reflect.ClassTag.unapply", "link" : "org\/saddle\/scalar\/ScalarTag.html#unapply(x:Any):Option[T]", "kind" : "def"}, {"label" : "newArray", "tail" : "(len: Int): Array[T]", "member" : "scala.reflect.ClassTag.newArray", "link" : "org\/saddle\/scalar\/ScalarTag.html#newArray(len:Int):Array[T]", "kind" : "def"}, {"label" : "wrap", "tail" : "(): ClassTag[Array[T]]", "member" : "scala.reflect.ClassTag.wrap", "link" : "org\/saddle\/scalar\/ScalarTag.html#wrap:scala.reflect.ClassTag[Array[T]]", "kind" : "def"}, {"label" : "argString", "tail" : "(): String", "member" : "scala.reflect.ClassManifestDeprecatedApis.argString", "link" : "org\/saddle\/scalar\/ScalarTag.html#argString:String", "kind" : "def"}, {"label" : "typeArguments", "tail" : "(): List[OptManifest[_]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.typeArguments", "link" : "org\/saddle\/scalar\/ScalarTag.html#typeArguments:List[scala.reflect.OptManifest[_]]", "kind" : "def"}, {"label" : "newArrayBuilder", "tail" : "(): ArrayBuilder[T]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArrayBuilder", "link" : "org\/saddle\/scalar\/ScalarTag.html#newArrayBuilder():scala.collection.mutable.ArrayBuilder[T]", "kind" : "def"}, {"label" : "newWrappedArray", "tail" : "(len: Int): WrappedArray[T]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newWrappedArray", "link" : "org\/saddle\/scalar\/ScalarTag.html#newWrappedArray(len:Int):scala.collection.mutable.WrappedArray[T]", "kind" : "def"}, {"label" : "newArray5", "tail" : "(len: Int): Array[Array[Array[Array[Array[T]]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray5", "link" : "org\/saddle\/scalar\/ScalarTag.html#newArray5(len:Int):Array[Array[Array[Array[Array[T]]]]]", "kind" : "def"}, {"label" : "newArray4", "tail" : "(len: Int): Array[Array[Array[Array[T]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray4", "link" : "org\/saddle\/scalar\/ScalarTag.html#newArray4(len:Int):Array[Array[Array[Array[T]]]]", "kind" : "def"}, {"label" : "newArray3", "tail" : "(len: Int): Array[Array[Array[T]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray3", "link" : "org\/saddle\/scalar\/ScalarTag.html#newArray3(len:Int):Array[Array[Array[T]]]", "kind" : "def"}, {"label" : "newArray2", "tail" : "(len: Int): Array[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray2", "link" : "org\/saddle\/scalar\/ScalarTag.html#newArray2(len:Int):Array[Array[T]]", "kind" : "def"}, {"label" : "arrayManifest", "tail" : "(): ClassManifest[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayManifest", "link" : "org\/saddle\/scalar\/ScalarTag.html#arrayManifest:scala.reflect.ClassManifest[Array[T]]", "kind" : "def"}, {"label" : "arrayClass", "tail" : "(tp: Class[_]): Class[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayClass", "link" : "org\/saddle\/scalar\/ScalarTag.html#arrayClass[T](tp:Class[_]):Class[Array[T]]", "kind" : "def"}, {"label" : ">:>", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.>:>", "link" : "org\/saddle\/scalar\/ScalarTag.html#>:>(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "<:<", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.<:<", "link" : "org\/saddle\/scalar\/ScalarTag.html#<:<(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTag.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTag.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTag.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTag.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTag.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTag.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTag.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTag.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTag.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTag.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTag.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTag.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTag.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTag.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTag.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTag.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "runtimeClass", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTag.runtimeClass", "link" : "org\/saddle\/scalar\/ScalarTag.html#runtimeClass:Class[_]", "kind" : "abstract def"}, {"label" : "show", "tail" : "(v: T): String", "member" : "org.saddle.scalar.ScalarTag.show", "link" : "org\/saddle\/scalar\/ScalarTag.html#show(v:T):String", "kind" : "abstract def"}, {"label" : "parse", "tail" : "(s: String): T", "member" : "org.saddle.scalar.ScalarTag.parse", "link" : "org\/saddle\/scalar\/ScalarTag.html#parse(s:String):T", "kind" : "abstract def"}, {"label" : "notMissing", "tail" : "(t: T): Boolean", "member" : "org.saddle.scalar.ScalarTag.notMissing", "link" : "org\/saddle\/scalar\/ScalarTag.html#notMissing(t:T):Boolean", "kind" : "abstract def"}, {"label" : "isMissing", "tail" : "(t: T): Boolean", "member" : "org.saddle.scalar.ScalarTag.isMissing", "link" : "org\/saddle\/scalar\/ScalarTag.html#isMissing(t:T):Boolean", "kind" : "abstract def"}, {"label" : "missing", "tail" : "(): T", "member" : "org.saddle.scalar.ScalarTag.missing", "link" : "org\/saddle\/scalar\/ScalarTag.html#missing:T", "kind" : "abstract def"}, {"label" : "concat", "tail" : "(vecs: IndexedSeq[Vec[T]]): Vec[T]", "member" : "org.saddle.scalar.ScalarHelperOps.concat", "link" : "org\/saddle\/scalar\/ScalarTag.html#concat(vecs:IndexedSeq[org.saddle.Vec[T]]):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "negInf", "tail" : "(ev: NUM[T]): T", "member" : "org.saddle.scalar.CouldBeNumber.negInf", "link" : "org\/saddle\/scalar\/ScalarTag.html#negInf(implicitev:org.saddle.NUM[T]):T", "kind" : "abstract def"}, {"label" : "inf", "tail" : "(ev: NUM[T]): T", "member" : "org.saddle.scalar.CouldBeNumber.inf", "link" : "org\/saddle\/scalar\/ScalarTag.html#inf(implicitev:org.saddle.NUM[T]):T", "kind" : "abstract def"}, {"label" : "one", "tail" : "(ev: NUM[T]): T", "member" : "org.saddle.scalar.CouldBeNumber.one", "link" : "org\/saddle\/scalar\/ScalarTag.html#one(implicitev:org.saddle.NUM[T]):T", "kind" : "abstract def"}, {"label" : "zero", "tail" : "(ev: NUM[T]): T", "member" : "org.saddle.scalar.CouldBeNumber.zero", "link" : "org\/saddle\/scalar\/ScalarTag.html#zero(implicitev:org.saddle.NUM[T]):T", "kind" : "abstract def"}, {"label" : "toDouble", "tail" : "(t: T)(ev: NUM[T]): Double", "member" : "org.saddle.scalar.CouldBeNumber.toDouble", "link" : "org\/saddle\/scalar\/ScalarTag.html#toDouble(t:T)(implicitev:org.saddle.NUM[T]):Double", "kind" : "abstract def"}, {"label" : "compare", "tail" : "(a: T, b: T)(ev: ORD[T]): Int", "member" : "org.saddle.scalar.CouldBeOrdered.compare", "link" : "org\/saddle\/scalar\/ScalarTag.html#compare(a:T,b:T)(implicitev:org.saddle.ORD[T]):Int", "kind" : "abstract def"}, {"label" : "makeSorter", "tail" : "(ord: ORD[T]): Sorter[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeSorter", "link" : "org\/saddle\/scalar\/ScalarTag.html#makeSorter(implicitord:org.saddle.ORD[T]):org.saddle.array.Sorter[T]", "kind" : "abstract def"}, {"label" : "makeIndex", "tail" : "(vec: Vec[T])(ord: ORD[T]): Index[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeIndex", "link" : "org\/saddle\/scalar\/ScalarTag.html#makeIndex(vec:org.saddle.Vec[T])(implicitord:org.saddle.ORD[T]):org.saddle.Index[T]", "kind" : "abstract def"}, {"label" : "makeMat", "tail" : "(r: Int, c: Int, arr: Array[T]): Mat[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeMat", "link" : "org\/saddle\/scalar\/ScalarTag.html#makeMat(r:Int,c:Int,arr:Array[T]):org.saddle.Mat[T]", "kind" : "abstract def"}, {"label" : "makeVec", "tail" : "(arr: Array[T]): Vec[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeVec", "link" : "org\/saddle\/scalar\/ScalarTag.html#makeVec(arr:Array[T]):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "makeLoc", "tail" : "(sz: Int): Locator[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeLoc", "link" : "org\/saddle\/scalar\/ScalarTag.html#makeLoc(sz:Int):org.saddle.locator.Locator[T]", "kind" : "abstract def"}, {"label" : "makeBuf", "tail" : "(sz: Int): Buffer[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeBuf", "link" : "org\/saddle\/scalar\/ScalarTag.html#makeBuf(sz:Int):org.saddle.Buffer[T]", "kind" : "abstract def"}], "shortDescription" : "Typeclass definition for scalar tags.", "object" : "org\/saddle\/scalar\/ScalarTag$.html", "members_object" : [{"label" : "stDouble", "tail" : ": ScalarTagDouble.type", "member" : "org.saddle.scalar.ScalarTag.stDouble", "link" : "org\/saddle\/scalar\/ScalarTag$.html#stDouble:org.saddle.scalar.ScalarTagDouble.type", "kind" : "implicit val"}, {"label" : "stLong", "tail" : ": ScalarTagLong.type", "member" : "org.saddle.scalar.ScalarTag.stLong", "link" : "org\/saddle\/scalar\/ScalarTag$.html#stLong:org.saddle.scalar.ScalarTagLong.type", "kind" : "implicit val"}, {"label" : "stFloat", "tail" : ": ScalarTagFloat.type", "member" : "org.saddle.scalar.ScalarTag.stFloat", "link" : "org\/saddle\/scalar\/ScalarTag$.html#stFloat:org.saddle.scalar.ScalarTagFloat.type", "kind" : "implicit val"}, {"label" : "stInt", "tail" : ": ScalarTagInt.type", "member" : "org.saddle.scalar.ScalarTag.stInt", "link" : "org\/saddle\/scalar\/ScalarTag$.html#stInt:org.saddle.scalar.ScalarTagInt.type", "kind" : "implicit val"}, {"label" : "stShort", "tail" : ": ScalarTagShort.type", "member" : "org.saddle.scalar.ScalarTag.stShort", "link" : "org\/saddle\/scalar\/ScalarTag$.html#stShort:org.saddle.scalar.ScalarTagShort.type", "kind" : "implicit val"}, {"label" : "stBool", "tail" : ": ScalarTagBool.type", "member" : "org.saddle.scalar.ScalarTag.stBool", "link" : "org\/saddle\/scalar\/ScalarTag$.html#stBool:org.saddle.scalar.ScalarTagBool.type", "kind" : "implicit val"}, {"label" : "stByte", "tail" : ": ScalarTagByte.type", "member" : "org.saddle.scalar.ScalarTag.stByte", "link" : "org\/saddle\/scalar\/ScalarTag$.html#stByte:org.saddle.scalar.ScalarTagByte.type", "kind" : "implicit val"}, {"label" : "stChar", "tail" : ": ScalarTagChar.type", "member" : "org.saddle.scalar.ScalarTag.stChar", "link" : "org\/saddle\/scalar\/ScalarTag$.html#stChar:org.saddle.scalar.ScalarTagChar.type", "kind" : "implicit val"}, {"label" : "stPrd", "tail" : "(arg0: CLM[T]): ScalarTagProduct[T]", "member" : "org.saddle.scalar.ScalarTagImplicits.stPrd", "link" : "org\/saddle\/scalar\/ScalarTag$.html#stPrd[T<:Product](implicitevidence$1:org.saddle.CLM[T]):org.saddle.scalar.ScalarTagProduct[T]", "kind" : "implicit def"}, {"label" : "stAnyVal", "tail" : "(arg0: CLM[T]): ScalarTagAny[T]", "member" : "org.saddle.scalar.ScalarTagImplicitsL1.stAnyVal", "link" : "org\/saddle\/scalar\/ScalarTag$.html#stAnyVal[T<:AnyVal](implicitevidence$2:org.saddle.CLM[T]):org.saddle.scalar.ScalarTagAny[T]", "kind" : "implicit def"}, {"label" : "stAnyRef", "tail" : "(arg0: CLM[T]): ScalarTagAny[T]", "member" : "org.saddle.scalar.ScalarTagImplicitsL2.stAnyRef", "link" : "org\/saddle\/scalar\/ScalarTag$.html#stAnyRef[T<:AnyRef](implicitevidence$3:org.saddle.CLM[T]):org.saddle.scalar.ScalarTagAny[T]", "kind" : "implicit def"}, {"label" : "stAny", "tail" : "(arg0: CLM[T]): ScalarTagAny[T]", "member" : "org.saddle.scalar.ScalarTagImplicitsL3.stAny", "link" : "org\/saddle\/scalar\/ScalarTag$.html#stAny[T](implicitevidence$4:org.saddle.CLM[T]):org.saddle.scalar.ScalarTagAny[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTag$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTag$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTag$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTag$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTag$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTag$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTag$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTag$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTag$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTag$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTag$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTag$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/scalar\/ScalarTag$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTag$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/scalar\/ScalarTag$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/scalar\/ScalarTag$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTag$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTag$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTag$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/saddle\/scalar\/ScalarTag.html", "kind" : "trait"}, {"name" : "org.saddle.scalar.ScalarTagAny", "shortDescription" : "", "members_class" : [{"label" : "concat", "tail" : "(arrs: IndexedSeq[Vec[T]]): Vec[T]", "member" : "org.saddle.scalar.ScalarTagAny.concat", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#concat(arrs:IndexedSeq[org.saddle.Vec[T]]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "makeSorter", "tail" : "(ord: ORD[T]): Sorter[T]", "member" : "org.saddle.scalar.ScalarTagAny.makeSorter", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#makeSorter(implicitord:org.saddle.ORD[T]):org.saddle.array.Sorter[T]", "kind" : "def"}, {"label" : "makeIndex", "tail" : "(vec: Vec[T])(ord: ORD[T]): Index[T]", "member" : "org.saddle.scalar.ScalarTagAny.makeIndex", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#makeIndex(vec:org.saddle.Vec[T])(implicitord:org.saddle.ORD[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(r: Int, c: Int, arr: Array[T]): Mat[T]", "member" : "org.saddle.scalar.ScalarTagAny.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#makeMat(r:Int,c:Int,arr:Array[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeVec", "tail" : "(arr: Array[T]): Vec[T]", "member" : "org.saddle.scalar.ScalarTagAny.makeVec", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#makeVec(arr:Array[T]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "makeLoc", "tail" : "(sz: Int): Locator[T]", "member" : "org.saddle.scalar.ScalarTagAny.makeLoc", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#makeLoc(sz:Int):org.saddle.locator.Locator[T]", "kind" : "def"}, {"label" : "makeBuf", "tail" : "(sz: Int): Buffer[T]", "member" : "org.saddle.scalar.ScalarTagAny.makeBuf", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#makeBuf(sz:Int):org.saddle.Buffer[T]", "kind" : "def"}, {"label" : "runtimeClass", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTagAny.runtimeClass", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#runtimeClass:Class[_]", "kind" : "def"}, {"label" : "show", "tail" : "(v: T): String", "member" : "org.saddle.scalar.ScalarTagAny.show", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#show(v:T):String", "kind" : "def"}, {"label" : "negInf", "tail" : "(ev: NUM[T]): Nothing", "member" : "org.saddle.scalar.ScalarTagAny.negInf", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#negInf(implicitev:org.saddle.NUM[T]):Nothing", "kind" : "def"}, {"label" : "inf", "tail" : "(ev: NUM[T]): Nothing", "member" : "org.saddle.scalar.ScalarTagAny.inf", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#inf(implicitev:org.saddle.NUM[T]):Nothing", "kind" : "def"}, {"label" : "one", "tail" : "(ev: NUM[T]): T", "member" : "org.saddle.scalar.ScalarTagAny.one", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#one(implicitev:org.saddle.NUM[T]):T", "kind" : "def"}, {"label" : "zero", "tail" : "(ev: NUM[T]): T", "member" : "org.saddle.scalar.ScalarTagAny.zero", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#zero(implicitev:org.saddle.NUM[T]):T", "kind" : "def"}, {"label" : "toDouble", "tail" : "(t: T)(ev: NUM[T]): Double", "member" : "org.saddle.scalar.ScalarTagAny.toDouble", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#toDouble(t:T)(implicitev:org.saddle.NUM[T]):Double", "kind" : "def"}, {"label" : "compare", "tail" : "(x: T, y: T)(ev: ORD[T]): Int", "member" : "org.saddle.scalar.ScalarTagAny.compare", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#compare(x:T,y:T)(implicitev:org.saddle.ORD[T]):Int", "kind" : "def"}, {"label" : "parse", "tail" : "(s: String): T", "member" : "org.saddle.scalar.ScalarTagAny.parse", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#parse(s:String):T", "kind" : "def"}, {"label" : "notMissing", "tail" : "(v: T): Boolean", "member" : "org.saddle.scalar.ScalarTagAny.notMissing", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#notMissing(v:T):Boolean", "kind" : "def"}, {"label" : "isMissing", "tail" : "(v: T): Boolean", "member" : "org.saddle.scalar.ScalarTagAny.isMissing", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#isMissing(v:T):Boolean", "kind" : "def"}, {"label" : "missing", "tail" : "(): T", "member" : "org.saddle.scalar.ScalarTagAny.missing", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#missing:T", "kind" : "def"}, {"member" : "org.saddle.scalar.ScalarTagAny#<init>", "error" : "unsupported entity"}, {"label" : "erasure", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTag.erasure", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#erasure:Class[_]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.scalar.ScalarTag.toString", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.scalar.ScalarTag.equals", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.scalar.ScalarTag.hashCode", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#hashCode():Int", "kind" : "def"}, {"label" : "isAnyVal", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAnyVal", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#isAnyVal:Boolean", "kind" : "def"}, {"label" : "isAny", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAny", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#isAny:Boolean", "kind" : "def"}, {"label" : "strList", "tail" : "(): (T) ⇒ List[String]", "member" : "org.saddle.scalar.ScalarTag.strList", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#strList:T=>List[String]", "kind" : "def"}, {"label" : "isDouble", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isDouble", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#isDouble:Boolean", "kind" : "def"}, {"label" : "isTuple", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isTuple", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#isTuple:Boolean", "kind" : "def"}, {"label" : "iseq", "tail" : "(a: T, b: T)(ev: ORD[T]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.iseq", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#iseq(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(a: T, b: T)(ev: ORD[T]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.gt", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#gt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(a: T, b: T)(ev: ORD[T]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.lt", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#lt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "altMatConstructor", "tail" : "(r: Int, c: Int, arr: Array[Vec[T]])(st: ST[T]): Mat[T]", "member" : "org.saddle.scalar.SpecializedFactory.altMatConstructor", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#altMatConstructor(r:Int,c:Int,arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(arr: Array[Vec[T]])(st: ST[T]): Mat[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#makeMat(arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(x: Any): Boolean", "member" : "scala.reflect.ClassTag.canEqual", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#canEqual(x:Any):Boolean", "kind" : "def"}, {"label" : "unapply", "tail" : "(x: Any): Option[T]", "member" : "scala.reflect.ClassTag.unapply", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#unapply(x:Any):Option[T]", "kind" : "def"}, {"label" : "newArray", "tail" : "(len: Int): Array[T]", "member" : "scala.reflect.ClassTag.newArray", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#newArray(len:Int):Array[T]", "kind" : "def"}, {"label" : "wrap", "tail" : "(): ClassTag[Array[T]]", "member" : "scala.reflect.ClassTag.wrap", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#wrap:scala.reflect.ClassTag[Array[T]]", "kind" : "def"}, {"label" : "argString", "tail" : "(): String", "member" : "scala.reflect.ClassManifestDeprecatedApis.argString", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#argString:String", "kind" : "def"}, {"label" : "typeArguments", "tail" : "(): List[OptManifest[_]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.typeArguments", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#typeArguments:List[scala.reflect.OptManifest[_]]", "kind" : "def"}, {"label" : "newArrayBuilder", "tail" : "(): ArrayBuilder[T]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArrayBuilder", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#newArrayBuilder():scala.collection.mutable.ArrayBuilder[T]", "kind" : "def"}, {"label" : "newWrappedArray", "tail" : "(len: Int): WrappedArray[T]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newWrappedArray", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#newWrappedArray(len:Int):scala.collection.mutable.WrappedArray[T]", "kind" : "def"}, {"label" : "newArray5", "tail" : "(len: Int): Array[Array[Array[Array[Array[T]]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray5", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#newArray5(len:Int):Array[Array[Array[Array[Array[T]]]]]", "kind" : "def"}, {"label" : "newArray4", "tail" : "(len: Int): Array[Array[Array[Array[T]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray4", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#newArray4(len:Int):Array[Array[Array[Array[T]]]]", "kind" : "def"}, {"label" : "newArray3", "tail" : "(len: Int): Array[Array[Array[T]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray3", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#newArray3(len:Int):Array[Array[Array[T]]]", "kind" : "def"}, {"label" : "newArray2", "tail" : "(len: Int): Array[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray2", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#newArray2(len:Int):Array[Array[T]]", "kind" : "def"}, {"label" : "arrayManifest", "tail" : "(): ClassManifest[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayManifest", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#arrayManifest:scala.reflect.ClassManifest[Array[T]]", "kind" : "def"}, {"label" : "arrayClass", "tail" : "(tp: Class[_]): Class[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayClass", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#arrayClass[T](tp:Class[_]):Class[Array[T]]", "kind" : "def"}, {"label" : ">:>", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.>:>", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#>:>(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "<:<", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.<:<", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#<:<(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTagAny.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagAny.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/scalar\/ScalarTagAny.html", "kind" : "class"}, {"name" : "org.saddle.scalar.ScalarTagBool", "shortDescription" : "Boolean ScalarTag", "object" : "org\/saddle\/scalar\/ScalarTagBool$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "org.saddle.scalar.ScalarTagBool.toString", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#toString():String", "kind" : "def"}, {"label" : "parse", "tail" : "(s: String): Boolean", "member" : "org.saddle.scalar.ScalarTagBool.parse", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#parse(s:String):Boolean", "kind" : "def"}, {"label" : "concat", "tail" : "(arrs: IndexedSeq[Vec[Boolean]]): Vec[Boolean]", "member" : "org.saddle.scalar.ScalarTagBool.concat", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#concat(arrs:IndexedSeq[org.saddle.Vec[Boolean]]):org.saddle.Vec[Boolean]", "kind" : "def"}, {"label" : "makeSorter", "tail" : "(ord: ORD[Boolean]): Sorter[Boolean]", "member" : "org.saddle.scalar.ScalarTagBool.makeSorter", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#makeSorter(implicitord:org.saddle.ORD[Boolean]):org.saddle.array.Sorter[Boolean]", "kind" : "def"}, {"label" : "makeIndex", "tail" : "(vec: Vec[Boolean])(ord: ORD[Boolean]): Index[Boolean]", "member" : "org.saddle.scalar.ScalarTagBool.makeIndex", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#makeIndex(vec:org.saddle.Vec[Boolean])(implicitord:org.saddle.ORD[Boolean]):org.saddle.Index[Boolean]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(r: Int, c: Int, arr: Array[Boolean]): Mat[Boolean]", "member" : "org.saddle.scalar.ScalarTagBool.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#makeMat(r:Int,c:Int,arr:Array[Boolean]):org.saddle.Mat[Boolean]", "kind" : "def"}, {"label" : "makeVec", "tail" : "(arr: Array[Boolean]): Vec[Boolean]", "member" : "org.saddle.scalar.ScalarTagBool.makeVec", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#makeVec(arr:Array[Boolean]):org.saddle.Vec[Boolean]", "kind" : "def"}, {"label" : "makeLoc", "tail" : "(sz: Int): LocatorBool", "member" : "org.saddle.scalar.ScalarTagBool.makeLoc", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#makeLoc(sz:Int):org.saddle.locator.LocatorBool", "kind" : "def"}, {"label" : "makeBuf", "tail" : "(sz: Int): Buffer[Boolean]", "member" : "org.saddle.scalar.ScalarTagBool.makeBuf", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#makeBuf(sz:Int):org.saddle.Buffer[Boolean]", "kind" : "def"}, {"label" : "runtimeClass", "tail" : "(): Class[Boolean]", "member" : "org.saddle.scalar.ScalarTagBool.runtimeClass", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#runtimeClass:Class[Boolean]", "kind" : "def"}, {"label" : "show", "tail" : "(v: Boolean): String", "member" : "org.saddle.scalar.ScalarTagBool.show", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#show(v:Boolean):String", "kind" : "def"}, {"label" : "negInf", "tail" : "(ev: NUM[Boolean]): Boolean", "member" : "org.saddle.scalar.ScalarTagBool.negInf", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#negInf(implicitev:org.saddle.NUM[Boolean]):Boolean", "kind" : "def"}, {"label" : "inf", "tail" : "(ev: NUM[Boolean]): Boolean", "member" : "org.saddle.scalar.ScalarTagBool.inf", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#inf(implicitev:org.saddle.NUM[Boolean]):Boolean", "kind" : "def"}, {"label" : "one", "tail" : "(ev: NUM[Boolean]): Boolean", "member" : "org.saddle.scalar.ScalarTagBool.one", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#one(implicitev:org.saddle.NUM[Boolean]):Boolean", "kind" : "def"}, {"label" : "zero", "tail" : "(ev: NUM[Boolean]): Boolean", "member" : "org.saddle.scalar.ScalarTagBool.zero", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#zero(implicitev:org.saddle.NUM[Boolean]):Boolean", "kind" : "def"}, {"label" : "toDouble", "tail" : "(t: Boolean)(ev: NUM[Boolean]): Double", "member" : "org.saddle.scalar.ScalarTagBool.toDouble", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#toDouble(t:Boolean)(implicitev:org.saddle.NUM[Boolean]):Double", "kind" : "def"}, {"label" : "compare", "tail" : "(x: Boolean, y: Boolean)(ev: ORD[Boolean]): Int", "member" : "org.saddle.scalar.ScalarTagBool.compare", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#compare(x:Boolean,y:Boolean)(implicitev:org.saddle.ORD[Boolean]):Int", "kind" : "def"}, {"label" : "notMissing", "tail" : "(v: Boolean): Boolean", "member" : "org.saddle.scalar.ScalarTagBool.notMissing", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#notMissing(v:Boolean):Boolean", "kind" : "def"}, {"label" : "isMissing", "tail" : "(v: Boolean): Boolean", "member" : "org.saddle.scalar.ScalarTagBool.isMissing", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#isMissing(v:Boolean):Boolean", "kind" : "def"}, {"label" : "missing", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTagBool.missing", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#missing:Boolean", "kind" : "def"}, {"label" : "erasure", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTag.erasure", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#erasure:Class[_]", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.scalar.ScalarTag.equals", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.scalar.ScalarTag.hashCode", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#hashCode():Int", "kind" : "def"}, {"label" : "isAnyVal", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAnyVal", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#isAnyVal:Boolean", "kind" : "def"}, {"label" : "isAny", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAny", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#isAny:Boolean", "kind" : "def"}, {"label" : "strList", "tail" : "(): (Boolean) ⇒ List[String]", "member" : "org.saddle.scalar.ScalarTag.strList", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#strList:T=>List[String]", "kind" : "def"}, {"label" : "isDouble", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isDouble", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#isDouble:Boolean", "kind" : "def"}, {"label" : "isTuple", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isTuple", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#isTuple:Boolean", "kind" : "def"}, {"label" : "iseq", "tail" : "(a: Boolean, b: Boolean)(ev: ORD[Boolean]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.iseq", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#iseq(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(a: Boolean, b: Boolean)(ev: ORD[Boolean]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.gt", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#gt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(a: Boolean, b: Boolean)(ev: ORD[Boolean]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.lt", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#lt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "altMatConstructor", "tail" : "(r: Int, c: Int, arr: Array[Vec[Boolean]])(st: ST[Boolean]): Mat[Boolean]", "member" : "org.saddle.scalar.SpecializedFactory.altMatConstructor", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#altMatConstructor(r:Int,c:Int,arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(arr: Array[Vec[Boolean]])(st: ST[Boolean]): Mat[Boolean]", "member" : "org.saddle.scalar.SpecializedFactory.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#makeMat(arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(x: Any): Boolean", "member" : "scala.reflect.ClassTag.canEqual", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#canEqual(x:Any):Boolean", "kind" : "def"}, {"label" : "unapply", "tail" : "(x: Any): Option[Boolean]", "member" : "scala.reflect.ClassTag.unapply", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#unapply(x:Any):Option[T]", "kind" : "def"}, {"label" : "newArray", "tail" : "(len: Int): Array[Boolean]", "member" : "scala.reflect.ClassTag.newArray", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#newArray(len:Int):Array[T]", "kind" : "def"}, {"label" : "wrap", "tail" : "(): ClassTag[Array[Boolean]]", "member" : "scala.reflect.ClassTag.wrap", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#wrap:scala.reflect.ClassTag[Array[T]]", "kind" : "def"}, {"label" : "argString", "tail" : "(): String", "member" : "scala.reflect.ClassManifestDeprecatedApis.argString", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#argString:String", "kind" : "def"}, {"label" : "typeArguments", "tail" : "(): List[OptManifest[_]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.typeArguments", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#typeArguments:List[scala.reflect.OptManifest[_]]", "kind" : "def"}, {"label" : "newArrayBuilder", "tail" : "(): ArrayBuilder[Boolean]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArrayBuilder", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#newArrayBuilder():scala.collection.mutable.ArrayBuilder[T]", "kind" : "def"}, {"label" : "newWrappedArray", "tail" : "(len: Int): WrappedArray[Boolean]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newWrappedArray", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#newWrappedArray(len:Int):scala.collection.mutable.WrappedArray[T]", "kind" : "def"}, {"label" : "newArray5", "tail" : "(len: Int): Array[Array[Array[Array[Array[Boolean]]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray5", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#newArray5(len:Int):Array[Array[Array[Array[Array[T]]]]]", "kind" : "def"}, {"label" : "newArray4", "tail" : "(len: Int): Array[Array[Array[Array[Boolean]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray4", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#newArray4(len:Int):Array[Array[Array[Array[T]]]]", "kind" : "def"}, {"label" : "newArray3", "tail" : "(len: Int): Array[Array[Array[Boolean]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray3", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#newArray3(len:Int):Array[Array[Array[T]]]", "kind" : "def"}, {"label" : "newArray2", "tail" : "(len: Int): Array[Array[Boolean]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray2", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#newArray2(len:Int):Array[Array[T]]", "kind" : "def"}, {"label" : "arrayManifest", "tail" : "(): ClassManifest[Array[Boolean]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayManifest", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#arrayManifest:scala.reflect.ClassManifest[Array[T]]", "kind" : "def"}, {"label" : "arrayClass", "tail" : "(tp: Class[_]): Class[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayClass", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#arrayClass[T](tp:Class[_]):Class[Array[T]]", "kind" : "def"}, {"label" : ">:>", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.>:>", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#>:>(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "<:<", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.<:<", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#<:<(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagBool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.scalar.ScalarTagByte", "shortDescription" : "Byte ScalarTag", "object" : "org\/saddle\/scalar\/ScalarTagByte$.html", "members_object" : [{"label" : "makeSorter", "tail" : "(ord: ORD[Byte]): Sorter[Byte]", "member" : "org.saddle.scalar.ScalarTagByte.makeSorter", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#makeSorter(implicitord:org.saddle.ORD[Byte]):org.saddle.array.Sorter[Byte]", "kind" : "def"}, {"label" : "parse", "tail" : "(s: String): Byte", "member" : "org.saddle.scalar.ScalarTagByte.parse", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#parse(s:String):Byte", "kind" : "def"}, {"label" : "concat", "tail" : "(arrs: IndexedSeq[Vec[Byte]]): Vec[Byte]", "member" : "org.saddle.scalar.ScalarTagAny.concat", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#concat(arrs:IndexedSeq[org.saddle.Vec[T]]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "makeIndex", "tail" : "(vec: Vec[Byte])(ord: ORD[Byte]): Index[Byte]", "member" : "org.saddle.scalar.ScalarTagAny.makeIndex", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#makeIndex(vec:org.saddle.Vec[T])(implicitord:org.saddle.ORD[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(r: Int, c: Int, arr: Array[Byte]): Mat[Byte]", "member" : "org.saddle.scalar.ScalarTagAny.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#makeMat(r:Int,c:Int,arr:Array[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeVec", "tail" : "(arr: Array[Byte]): Vec[Byte]", "member" : "org.saddle.scalar.ScalarTagAny.makeVec", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#makeVec(arr:Array[T]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "makeLoc", "tail" : "(sz: Int): Locator[Byte]", "member" : "org.saddle.scalar.ScalarTagAny.makeLoc", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#makeLoc(sz:Int):org.saddle.locator.Locator[T]", "kind" : "def"}, {"label" : "makeBuf", "tail" : "(sz: Int): Buffer[Byte]", "member" : "org.saddle.scalar.ScalarTagAny.makeBuf", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#makeBuf(sz:Int):org.saddle.Buffer[T]", "kind" : "def"}, {"label" : "runtimeClass", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTagAny.runtimeClass", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#runtimeClass:Class[_]", "kind" : "def"}, {"label" : "show", "tail" : "(v: Byte): String", "member" : "org.saddle.scalar.ScalarTagAny.show", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#show(v:T):String", "kind" : "def"}, {"label" : "negInf", "tail" : "(ev: NUM[Byte]): Nothing", "member" : "org.saddle.scalar.ScalarTagAny.negInf", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#negInf(implicitev:org.saddle.NUM[T]):Nothing", "kind" : "def"}, {"label" : "inf", "tail" : "(ev: NUM[Byte]): Nothing", "member" : "org.saddle.scalar.ScalarTagAny.inf", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#inf(implicitev:org.saddle.NUM[T]):Nothing", "kind" : "def"}, {"label" : "one", "tail" : "(ev: NUM[Byte]): Byte", "member" : "org.saddle.scalar.ScalarTagAny.one", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#one(implicitev:org.saddle.NUM[T]):T", "kind" : "def"}, {"label" : "zero", "tail" : "(ev: NUM[Byte]): Byte", "member" : "org.saddle.scalar.ScalarTagAny.zero", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#zero(implicitev:org.saddle.NUM[T]):T", "kind" : "def"}, {"label" : "toDouble", "tail" : "(t: Byte)(ev: NUM[Byte]): Double", "member" : "org.saddle.scalar.ScalarTagAny.toDouble", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#toDouble(t:T)(implicitev:org.saddle.NUM[T]):Double", "kind" : "def"}, {"label" : "compare", "tail" : "(x: Byte, y: Byte)(ev: ORD[Byte]): Int", "member" : "org.saddle.scalar.ScalarTagAny.compare", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#compare(x:T,y:T)(implicitev:org.saddle.ORD[T]):Int", "kind" : "def"}, {"label" : "notMissing", "tail" : "(v: Byte): Boolean", "member" : "org.saddle.scalar.ScalarTagAny.notMissing", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#notMissing(v:T):Boolean", "kind" : "def"}, {"label" : "isMissing", "tail" : "(v: Byte): Boolean", "member" : "org.saddle.scalar.ScalarTagAny.isMissing", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#isMissing(v:T):Boolean", "kind" : "def"}, {"label" : "missing", "tail" : "(): Byte", "member" : "org.saddle.scalar.ScalarTagAny.missing", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#missing:T", "kind" : "def"}, {"label" : "erasure", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTag.erasure", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#erasure:Class[_]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.scalar.ScalarTag.toString", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.scalar.ScalarTag.equals", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.scalar.ScalarTag.hashCode", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#hashCode():Int", "kind" : "def"}, {"label" : "isAnyVal", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAnyVal", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#isAnyVal:Boolean", "kind" : "def"}, {"label" : "isAny", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAny", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#isAny:Boolean", "kind" : "def"}, {"label" : "strList", "tail" : "(): (Byte) ⇒ List[String]", "member" : "org.saddle.scalar.ScalarTag.strList", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#strList:T=>List[String]", "kind" : "def"}, {"label" : "isDouble", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isDouble", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#isDouble:Boolean", "kind" : "def"}, {"label" : "isTuple", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isTuple", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#isTuple:Boolean", "kind" : "def"}, {"label" : "iseq", "tail" : "(a: Byte, b: Byte)(ev: ORD[Byte]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.iseq", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#iseq(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(a: Byte, b: Byte)(ev: ORD[Byte]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.gt", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#gt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(a: Byte, b: Byte)(ev: ORD[Byte]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.lt", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#lt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "altMatConstructor", "tail" : "(r: Int, c: Int, arr: Array[Vec[Byte]])(st: ST[Byte]): Mat[Byte]", "member" : "org.saddle.scalar.SpecializedFactory.altMatConstructor", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#altMatConstructor(r:Int,c:Int,arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(arr: Array[Vec[Byte]])(st: ST[Byte]): Mat[Byte]", "member" : "org.saddle.scalar.SpecializedFactory.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#makeMat(arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(x: Any): Boolean", "member" : "scala.reflect.ClassTag.canEqual", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#canEqual(x:Any):Boolean", "kind" : "def"}, {"label" : "unapply", "tail" : "(x: Any): Option[Byte]", "member" : "scala.reflect.ClassTag.unapply", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#unapply(x:Any):Option[T]", "kind" : "def"}, {"label" : "newArray", "tail" : "(len: Int): Array[Byte]", "member" : "scala.reflect.ClassTag.newArray", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#newArray(len:Int):Array[T]", "kind" : "def"}, {"label" : "wrap", "tail" : "(): ClassTag[Array[Byte]]", "member" : "scala.reflect.ClassTag.wrap", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#wrap:scala.reflect.ClassTag[Array[T]]", "kind" : "def"}, {"label" : "argString", "tail" : "(): String", "member" : "scala.reflect.ClassManifestDeprecatedApis.argString", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#argString:String", "kind" : "def"}, {"label" : "typeArguments", "tail" : "(): List[OptManifest[_]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.typeArguments", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#typeArguments:List[scala.reflect.OptManifest[_]]", "kind" : "def"}, {"label" : "newArrayBuilder", "tail" : "(): ArrayBuilder[Byte]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArrayBuilder", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#newArrayBuilder():scala.collection.mutable.ArrayBuilder[T]", "kind" : "def"}, {"label" : "newWrappedArray", "tail" : "(len: Int): WrappedArray[Byte]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newWrappedArray", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#newWrappedArray(len:Int):scala.collection.mutable.WrappedArray[T]", "kind" : "def"}, {"label" : "newArray5", "tail" : "(len: Int): Array[Array[Array[Array[Array[Byte]]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray5", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#newArray5(len:Int):Array[Array[Array[Array[Array[T]]]]]", "kind" : "def"}, {"label" : "newArray4", "tail" : "(len: Int): Array[Array[Array[Array[Byte]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray4", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#newArray4(len:Int):Array[Array[Array[Array[T]]]]", "kind" : "def"}, {"label" : "newArray3", "tail" : "(len: Int): Array[Array[Array[Byte]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray3", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#newArray3(len:Int):Array[Array[Array[T]]]", "kind" : "def"}, {"label" : "newArray2", "tail" : "(len: Int): Array[Array[Byte]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray2", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#newArray2(len:Int):Array[Array[T]]", "kind" : "def"}, {"label" : "arrayManifest", "tail" : "(): ClassManifest[Array[Byte]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayManifest", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#arrayManifest:scala.reflect.ClassManifest[Array[T]]", "kind" : "def"}, {"label" : "arrayClass", "tail" : "(tp: Class[_]): Class[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayClass", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#arrayClass[T](tp:Class[_]):Class[Array[T]]", "kind" : "def"}, {"label" : ">:>", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.>:>", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#>:>(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "<:<", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.<:<", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#<:<(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagByte$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.scalar.ScalarTagChar", "shortDescription" : "Char ScalarTag", "object" : "org\/saddle\/scalar\/ScalarTagChar$.html", "members_object" : [{"label" : "makeSorter", "tail" : "(ord: ORD[Char]): Sorter[Char]", "member" : "org.saddle.scalar.ScalarTagChar.makeSorter", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#makeSorter(implicitord:org.saddle.ORD[Char]):org.saddle.array.Sorter[Char]", "kind" : "def"}, {"label" : "parse", "tail" : "(s: String): Char", "member" : "org.saddle.scalar.ScalarTagChar.parse", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#parse(s:String):Char", "kind" : "def"}, {"label" : "concat", "tail" : "(arrs: IndexedSeq[Vec[Char]]): Vec[Char]", "member" : "org.saddle.scalar.ScalarTagAny.concat", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#concat(arrs:IndexedSeq[org.saddle.Vec[T]]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "makeIndex", "tail" : "(vec: Vec[Char])(ord: ORD[Char]): Index[Char]", "member" : "org.saddle.scalar.ScalarTagAny.makeIndex", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#makeIndex(vec:org.saddle.Vec[T])(implicitord:org.saddle.ORD[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(r: Int, c: Int, arr: Array[Char]): Mat[Char]", "member" : "org.saddle.scalar.ScalarTagAny.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#makeMat(r:Int,c:Int,arr:Array[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeVec", "tail" : "(arr: Array[Char]): Vec[Char]", "member" : "org.saddle.scalar.ScalarTagAny.makeVec", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#makeVec(arr:Array[T]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "makeLoc", "tail" : "(sz: Int): Locator[Char]", "member" : "org.saddle.scalar.ScalarTagAny.makeLoc", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#makeLoc(sz:Int):org.saddle.locator.Locator[T]", "kind" : "def"}, {"label" : "makeBuf", "tail" : "(sz: Int): Buffer[Char]", "member" : "org.saddle.scalar.ScalarTagAny.makeBuf", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#makeBuf(sz:Int):org.saddle.Buffer[T]", "kind" : "def"}, {"label" : "runtimeClass", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTagAny.runtimeClass", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#runtimeClass:Class[_]", "kind" : "def"}, {"label" : "show", "tail" : "(v: Char): String", "member" : "org.saddle.scalar.ScalarTagAny.show", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#show(v:T):String", "kind" : "def"}, {"label" : "negInf", "tail" : "(ev: NUM[Char]): Nothing", "member" : "org.saddle.scalar.ScalarTagAny.negInf", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#negInf(implicitev:org.saddle.NUM[T]):Nothing", "kind" : "def"}, {"label" : "inf", "tail" : "(ev: NUM[Char]): Nothing", "member" : "org.saddle.scalar.ScalarTagAny.inf", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#inf(implicitev:org.saddle.NUM[T]):Nothing", "kind" : "def"}, {"label" : "one", "tail" : "(ev: NUM[Char]): Char", "member" : "org.saddle.scalar.ScalarTagAny.one", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#one(implicitev:org.saddle.NUM[T]):T", "kind" : "def"}, {"label" : "zero", "tail" : "(ev: NUM[Char]): Char", "member" : "org.saddle.scalar.ScalarTagAny.zero", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#zero(implicitev:org.saddle.NUM[T]):T", "kind" : "def"}, {"label" : "toDouble", "tail" : "(t: Char)(ev: NUM[Char]): Double", "member" : "org.saddle.scalar.ScalarTagAny.toDouble", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#toDouble(t:T)(implicitev:org.saddle.NUM[T]):Double", "kind" : "def"}, {"label" : "compare", "tail" : "(x: Char, y: Char)(ev: ORD[Char]): Int", "member" : "org.saddle.scalar.ScalarTagAny.compare", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#compare(x:T,y:T)(implicitev:org.saddle.ORD[T]):Int", "kind" : "def"}, {"label" : "notMissing", "tail" : "(v: Char): Boolean", "member" : "org.saddle.scalar.ScalarTagAny.notMissing", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#notMissing(v:T):Boolean", "kind" : "def"}, {"label" : "isMissing", "tail" : "(v: Char): Boolean", "member" : "org.saddle.scalar.ScalarTagAny.isMissing", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#isMissing(v:T):Boolean", "kind" : "def"}, {"label" : "missing", "tail" : "(): Char", "member" : "org.saddle.scalar.ScalarTagAny.missing", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#missing:T", "kind" : "def"}, {"label" : "erasure", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTag.erasure", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#erasure:Class[_]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.scalar.ScalarTag.toString", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.scalar.ScalarTag.equals", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.scalar.ScalarTag.hashCode", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#hashCode():Int", "kind" : "def"}, {"label" : "isAnyVal", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAnyVal", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#isAnyVal:Boolean", "kind" : "def"}, {"label" : "isAny", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAny", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#isAny:Boolean", "kind" : "def"}, {"label" : "strList", "tail" : "(): (Char) ⇒ List[String]", "member" : "org.saddle.scalar.ScalarTag.strList", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#strList:T=>List[String]", "kind" : "def"}, {"label" : "isDouble", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isDouble", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#isDouble:Boolean", "kind" : "def"}, {"label" : "isTuple", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isTuple", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#isTuple:Boolean", "kind" : "def"}, {"label" : "iseq", "tail" : "(a: Char, b: Char)(ev: ORD[Char]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.iseq", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#iseq(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(a: Char, b: Char)(ev: ORD[Char]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.gt", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#gt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(a: Char, b: Char)(ev: ORD[Char]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.lt", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#lt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "altMatConstructor", "tail" : "(r: Int, c: Int, arr: Array[Vec[Char]])(st: ST[Char]): Mat[Char]", "member" : "org.saddle.scalar.SpecializedFactory.altMatConstructor", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#altMatConstructor(r:Int,c:Int,arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(arr: Array[Vec[Char]])(st: ST[Char]): Mat[Char]", "member" : "org.saddle.scalar.SpecializedFactory.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#makeMat(arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(x: Any): Boolean", "member" : "scala.reflect.ClassTag.canEqual", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#canEqual(x:Any):Boolean", "kind" : "def"}, {"label" : "unapply", "tail" : "(x: Any): Option[Char]", "member" : "scala.reflect.ClassTag.unapply", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#unapply(x:Any):Option[T]", "kind" : "def"}, {"label" : "newArray", "tail" : "(len: Int): Array[Char]", "member" : "scala.reflect.ClassTag.newArray", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#newArray(len:Int):Array[T]", "kind" : "def"}, {"label" : "wrap", "tail" : "(): ClassTag[Array[Char]]", "member" : "scala.reflect.ClassTag.wrap", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#wrap:scala.reflect.ClassTag[Array[T]]", "kind" : "def"}, {"label" : "argString", "tail" : "(): String", "member" : "scala.reflect.ClassManifestDeprecatedApis.argString", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#argString:String", "kind" : "def"}, {"label" : "typeArguments", "tail" : "(): List[OptManifest[_]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.typeArguments", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#typeArguments:List[scala.reflect.OptManifest[_]]", "kind" : "def"}, {"label" : "newArrayBuilder", "tail" : "(): ArrayBuilder[Char]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArrayBuilder", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#newArrayBuilder():scala.collection.mutable.ArrayBuilder[T]", "kind" : "def"}, {"label" : "newWrappedArray", "tail" : "(len: Int): WrappedArray[Char]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newWrappedArray", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#newWrappedArray(len:Int):scala.collection.mutable.WrappedArray[T]", "kind" : "def"}, {"label" : "newArray5", "tail" : "(len: Int): Array[Array[Array[Array[Array[Char]]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray5", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#newArray5(len:Int):Array[Array[Array[Array[Array[T]]]]]", "kind" : "def"}, {"label" : "newArray4", "tail" : "(len: Int): Array[Array[Array[Array[Char]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray4", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#newArray4(len:Int):Array[Array[Array[Array[T]]]]", "kind" : "def"}, {"label" : "newArray3", "tail" : "(len: Int): Array[Array[Array[Char]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray3", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#newArray3(len:Int):Array[Array[Array[T]]]", "kind" : "def"}, {"label" : "newArray2", "tail" : "(len: Int): Array[Array[Char]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray2", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#newArray2(len:Int):Array[Array[T]]", "kind" : "def"}, {"label" : "arrayManifest", "tail" : "(): ClassManifest[Array[Char]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayManifest", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#arrayManifest:scala.reflect.ClassManifest[Array[T]]", "kind" : "def"}, {"label" : "arrayClass", "tail" : "(tp: Class[_]): Class[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayClass", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#arrayClass[T](tp:Class[_]):Class[Array[T]]", "kind" : "def"}, {"label" : ">:>", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.>:>", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#>:>(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "<:<", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.<:<", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#<:<(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagChar$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.scalar.ScalarTagDouble", "shortDescription" : "Double ScalarTag", "object" : "org\/saddle\/scalar\/ScalarTagDouble$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "org.saddle.scalar.ScalarTagDouble.toString", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#toString():String", "kind" : "def"}, {"label" : "concat", "tail" : "(arrs: IndexedSeq[Vec[Double]]): Vec[Double]", "member" : "org.saddle.scalar.ScalarTagDouble.concat", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#concat(arrs:IndexedSeq[org.saddle.Vec[Double]]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "makeSorter", "tail" : "(ord: ORD[Double]): Sorter[Double]", "member" : "org.saddle.scalar.ScalarTagDouble.makeSorter", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#makeSorter(implicitord:org.saddle.ORD[Double]):org.saddle.array.Sorter[Double]", "kind" : "def"}, {"label" : "makeIndex", "tail" : "(vec: Vec[Double])(ord: ORD[Double]): Index[Double]", "member" : "org.saddle.scalar.ScalarTagDouble.makeIndex", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#makeIndex(vec:org.saddle.Vec[Double])(implicitord:org.saddle.ORD[Double]):org.saddle.Index[Double]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(r: Int, c: Int, arr: Array[Double]): Mat[Double]", "member" : "org.saddle.scalar.ScalarTagDouble.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#makeMat(r:Int,c:Int,arr:Array[Double]):org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "makeVec", "tail" : "(arr: Array[Double]): Vec[Double]", "member" : "org.saddle.scalar.ScalarTagDouble.makeVec", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#makeVec(arr:Array[Double]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "makeLoc", "tail" : "(sz: Int): LocatorDouble", "member" : "org.saddle.scalar.ScalarTagDouble.makeLoc", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#makeLoc(sz:Int):org.saddle.locator.LocatorDouble", "kind" : "def"}, {"label" : "makeBuf", "tail" : "(sz: Int): Buffer[Double]", "member" : "org.saddle.scalar.ScalarTagDouble.makeBuf", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#makeBuf(sz:Int):org.saddle.Buffer[Double]", "kind" : "def"}, {"label" : "runtimeClass", "tail" : "(): Class[Double]", "member" : "org.saddle.scalar.ScalarTagDouble.runtimeClass", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#runtimeClass:Class[Double]", "kind" : "def"}, {"label" : "show", "tail" : "(v: Double): String", "member" : "org.saddle.scalar.ScalarTagDouble.show", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#show(v:Double):String", "kind" : "def"}, {"label" : "negInf", "tail" : "(ev: NUM[Double]): Double", "member" : "org.saddle.scalar.ScalarTagDouble.negInf", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#negInf(implicitev:org.saddle.NUM[Double]):Double", "kind" : "def"}, {"label" : "inf", "tail" : "(ev: NUM[Double]): Double", "member" : "org.saddle.scalar.ScalarTagDouble.inf", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#inf(implicitev:org.saddle.NUM[Double]):Double", "kind" : "def"}, {"label" : "one", "tail" : "(ev: NUM[Double]): Double", "member" : "org.saddle.scalar.ScalarTagDouble.one", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#one(implicitev:org.saddle.NUM[Double]):Double", "kind" : "def"}, {"label" : "zero", "tail" : "(ev: NUM[Double]): Double", "member" : "org.saddle.scalar.ScalarTagDouble.zero", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#zero(implicitev:org.saddle.NUM[Double]):Double", "kind" : "def"}, {"label" : "isDouble", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTagDouble.isDouble", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#isDouble:Boolean", "kind" : "def"}, {"label" : "toDouble", "tail" : "(t: Double)(ev: NUM[Double]): Double", "member" : "org.saddle.scalar.ScalarTagDouble.toDouble", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#toDouble(t:Double)(implicitev:org.saddle.NUM[Double]):Double", "kind" : "def"}, {"label" : "compare", "tail" : "(x: Double, y: Double)(ev: ORD[Double]): Int", "member" : "org.saddle.scalar.ScalarTagDouble.compare", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#compare(x:Double,y:Double)(implicitev:org.saddle.ORD[Double]):Int", "kind" : "def"}, {"label" : "parse", "tail" : "(s: String): Double", "member" : "org.saddle.scalar.ScalarTagDouble.parse", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#parse(s:String):Double", "kind" : "def"}, {"label" : "notMissing", "tail" : "(v: Double): Boolean", "member" : "org.saddle.scalar.ScalarTagDouble.notMissing", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#notMissing(v:Double):Boolean", "kind" : "def"}, {"label" : "isMissing", "tail" : "(v: Double): Boolean", "member" : "org.saddle.scalar.ScalarTagDouble.isMissing", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#isMissing(v:Double):Boolean", "kind" : "def"}, {"label" : "missing", "tail" : "(): Double", "member" : "org.saddle.scalar.ScalarTagDouble.missing", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#missing:Double", "kind" : "def"}, {"label" : "erasure", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTag.erasure", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#erasure:Class[_]", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.scalar.ScalarTag.equals", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.scalar.ScalarTag.hashCode", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#hashCode():Int", "kind" : "def"}, {"label" : "isAnyVal", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAnyVal", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#isAnyVal:Boolean", "kind" : "def"}, {"label" : "isAny", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAny", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#isAny:Boolean", "kind" : "def"}, {"label" : "strList", "tail" : "(): (Double) ⇒ List[String]", "member" : "org.saddle.scalar.ScalarTag.strList", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#strList:T=>List[String]", "kind" : "def"}, {"label" : "isTuple", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isTuple", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#isTuple:Boolean", "kind" : "def"}, {"label" : "iseq", "tail" : "(a: Double, b: Double)(ev: ORD[Double]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.iseq", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#iseq(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(a: Double, b: Double)(ev: ORD[Double]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.gt", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#gt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(a: Double, b: Double)(ev: ORD[Double]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.lt", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#lt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "altMatConstructor", "tail" : "(r: Int, c: Int, arr: Array[Vec[Double]])(st: ST[Double]): Mat[Double]", "member" : "org.saddle.scalar.SpecializedFactory.altMatConstructor", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#altMatConstructor(r:Int,c:Int,arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(arr: Array[Vec[Double]])(st: ST[Double]): Mat[Double]", "member" : "org.saddle.scalar.SpecializedFactory.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#makeMat(arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(x: Any): Boolean", "member" : "scala.reflect.ClassTag.canEqual", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#canEqual(x:Any):Boolean", "kind" : "def"}, {"label" : "unapply", "tail" : "(x: Any): Option[Double]", "member" : "scala.reflect.ClassTag.unapply", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#unapply(x:Any):Option[T]", "kind" : "def"}, {"label" : "newArray", "tail" : "(len: Int): Array[Double]", "member" : "scala.reflect.ClassTag.newArray", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#newArray(len:Int):Array[T]", "kind" : "def"}, {"label" : "wrap", "tail" : "(): ClassTag[Array[Double]]", "member" : "scala.reflect.ClassTag.wrap", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#wrap:scala.reflect.ClassTag[Array[T]]", "kind" : "def"}, {"label" : "argString", "tail" : "(): String", "member" : "scala.reflect.ClassManifestDeprecatedApis.argString", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#argString:String", "kind" : "def"}, {"label" : "typeArguments", "tail" : "(): List[OptManifest[_]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.typeArguments", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#typeArguments:List[scala.reflect.OptManifest[_]]", "kind" : "def"}, {"label" : "newArrayBuilder", "tail" : "(): ArrayBuilder[Double]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArrayBuilder", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#newArrayBuilder():scala.collection.mutable.ArrayBuilder[T]", "kind" : "def"}, {"label" : "newWrappedArray", "tail" : "(len: Int): WrappedArray[Double]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newWrappedArray", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#newWrappedArray(len:Int):scala.collection.mutable.WrappedArray[T]", "kind" : "def"}, {"label" : "newArray5", "tail" : "(len: Int): Array[Array[Array[Array[Array[Double]]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray5", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#newArray5(len:Int):Array[Array[Array[Array[Array[T]]]]]", "kind" : "def"}, {"label" : "newArray4", "tail" : "(len: Int): Array[Array[Array[Array[Double]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray4", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#newArray4(len:Int):Array[Array[Array[Array[T]]]]", "kind" : "def"}, {"label" : "newArray3", "tail" : "(len: Int): Array[Array[Array[Double]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray3", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#newArray3(len:Int):Array[Array[Array[T]]]", "kind" : "def"}, {"label" : "newArray2", "tail" : "(len: Int): Array[Array[Double]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray2", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#newArray2(len:Int):Array[Array[T]]", "kind" : "def"}, {"label" : "arrayManifest", "tail" : "(): ClassManifest[Array[Double]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayManifest", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#arrayManifest:scala.reflect.ClassManifest[Array[T]]", "kind" : "def"}, {"label" : "arrayClass", "tail" : "(tp: Class[_]): Class[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayClass", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#arrayClass[T](tp:Class[_]):Class[Array[T]]", "kind" : "def"}, {"label" : ">:>", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.>:>", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#>:>(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "<:<", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.<:<", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#<:<(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagDouble$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.scalar.ScalarTagFloat", "shortDescription" : "Float ScalarTag", "object" : "org\/saddle\/scalar\/ScalarTagFloat$.html", "members_object" : [{"label" : "makeSorter", "tail" : "(ord: ORD[Float]): Sorter[Float]", "member" : "org.saddle.scalar.ScalarTagFloat.makeSorter", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#makeSorter(implicitord:org.saddle.ORD[Float]):org.saddle.array.Sorter[Float]", "kind" : "def"}, {"label" : "parse", "tail" : "(s: String): Float", "member" : "org.saddle.scalar.ScalarTagFloat.parse", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#parse(s:String):Float", "kind" : "def"}, {"label" : "concat", "tail" : "(arrs: IndexedSeq[Vec[Float]]): Vec[Float]", "member" : "org.saddle.scalar.ScalarTagAny.concat", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#concat(arrs:IndexedSeq[org.saddle.Vec[T]]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "makeIndex", "tail" : "(vec: Vec[Float])(ord: ORD[Float]): Index[Float]", "member" : "org.saddle.scalar.ScalarTagAny.makeIndex", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#makeIndex(vec:org.saddle.Vec[T])(implicitord:org.saddle.ORD[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(r: Int, c: Int, arr: Array[Float]): Mat[Float]", "member" : "org.saddle.scalar.ScalarTagAny.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#makeMat(r:Int,c:Int,arr:Array[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeVec", "tail" : "(arr: Array[Float]): Vec[Float]", "member" : "org.saddle.scalar.ScalarTagAny.makeVec", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#makeVec(arr:Array[T]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "makeLoc", "tail" : "(sz: Int): Locator[Float]", "member" : "org.saddle.scalar.ScalarTagAny.makeLoc", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#makeLoc(sz:Int):org.saddle.locator.Locator[T]", "kind" : "def"}, {"label" : "makeBuf", "tail" : "(sz: Int): Buffer[Float]", "member" : "org.saddle.scalar.ScalarTagAny.makeBuf", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#makeBuf(sz:Int):org.saddle.Buffer[T]", "kind" : "def"}, {"label" : "runtimeClass", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTagAny.runtimeClass", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#runtimeClass:Class[_]", "kind" : "def"}, {"label" : "show", "tail" : "(v: Float): String", "member" : "org.saddle.scalar.ScalarTagAny.show", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#show(v:T):String", "kind" : "def"}, {"label" : "negInf", "tail" : "(ev: NUM[Float]): Nothing", "member" : "org.saddle.scalar.ScalarTagAny.negInf", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#negInf(implicitev:org.saddle.NUM[T]):Nothing", "kind" : "def"}, {"label" : "inf", "tail" : "(ev: NUM[Float]): Nothing", "member" : "org.saddle.scalar.ScalarTagAny.inf", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#inf(implicitev:org.saddle.NUM[T]):Nothing", "kind" : "def"}, {"label" : "one", "tail" : "(ev: NUM[Float]): Float", "member" : "org.saddle.scalar.ScalarTagAny.one", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#one(implicitev:org.saddle.NUM[T]):T", "kind" : "def"}, {"label" : "zero", "tail" : "(ev: NUM[Float]): Float", "member" : "org.saddle.scalar.ScalarTagAny.zero", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#zero(implicitev:org.saddle.NUM[T]):T", "kind" : "def"}, {"label" : "toDouble", "tail" : "(t: Float)(ev: NUM[Float]): Double", "member" : "org.saddle.scalar.ScalarTagAny.toDouble", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#toDouble(t:T)(implicitev:org.saddle.NUM[T]):Double", "kind" : "def"}, {"label" : "compare", "tail" : "(x: Float, y: Float)(ev: ORD[Float]): Int", "member" : "org.saddle.scalar.ScalarTagAny.compare", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#compare(x:T,y:T)(implicitev:org.saddle.ORD[T]):Int", "kind" : "def"}, {"label" : "notMissing", "tail" : "(v: Float): Boolean", "member" : "org.saddle.scalar.ScalarTagAny.notMissing", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#notMissing(v:T):Boolean", "kind" : "def"}, {"label" : "isMissing", "tail" : "(v: Float): Boolean", "member" : "org.saddle.scalar.ScalarTagAny.isMissing", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#isMissing(v:T):Boolean", "kind" : "def"}, {"label" : "missing", "tail" : "(): Float", "member" : "org.saddle.scalar.ScalarTagAny.missing", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#missing:T", "kind" : "def"}, {"label" : "erasure", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTag.erasure", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#erasure:Class[_]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.scalar.ScalarTag.toString", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.scalar.ScalarTag.equals", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.scalar.ScalarTag.hashCode", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#hashCode():Int", "kind" : "def"}, {"label" : "isAnyVal", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAnyVal", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#isAnyVal:Boolean", "kind" : "def"}, {"label" : "isAny", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAny", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#isAny:Boolean", "kind" : "def"}, {"label" : "strList", "tail" : "(): (Float) ⇒ List[String]", "member" : "org.saddle.scalar.ScalarTag.strList", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#strList:T=>List[String]", "kind" : "def"}, {"label" : "isDouble", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isDouble", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#isDouble:Boolean", "kind" : "def"}, {"label" : "isTuple", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isTuple", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#isTuple:Boolean", "kind" : "def"}, {"label" : "iseq", "tail" : "(a: Float, b: Float)(ev: ORD[Float]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.iseq", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#iseq(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(a: Float, b: Float)(ev: ORD[Float]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.gt", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#gt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(a: Float, b: Float)(ev: ORD[Float]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.lt", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#lt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "altMatConstructor", "tail" : "(r: Int, c: Int, arr: Array[Vec[Float]])(st: ST[Float]): Mat[Float]", "member" : "org.saddle.scalar.SpecializedFactory.altMatConstructor", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#altMatConstructor(r:Int,c:Int,arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(arr: Array[Vec[Float]])(st: ST[Float]): Mat[Float]", "member" : "org.saddle.scalar.SpecializedFactory.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#makeMat(arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(x: Any): Boolean", "member" : "scala.reflect.ClassTag.canEqual", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#canEqual(x:Any):Boolean", "kind" : "def"}, {"label" : "unapply", "tail" : "(x: Any): Option[Float]", "member" : "scala.reflect.ClassTag.unapply", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#unapply(x:Any):Option[T]", "kind" : "def"}, {"label" : "newArray", "tail" : "(len: Int): Array[Float]", "member" : "scala.reflect.ClassTag.newArray", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#newArray(len:Int):Array[T]", "kind" : "def"}, {"label" : "wrap", "tail" : "(): ClassTag[Array[Float]]", "member" : "scala.reflect.ClassTag.wrap", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#wrap:scala.reflect.ClassTag[Array[T]]", "kind" : "def"}, {"label" : "argString", "tail" : "(): String", "member" : "scala.reflect.ClassManifestDeprecatedApis.argString", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#argString:String", "kind" : "def"}, {"label" : "typeArguments", "tail" : "(): List[OptManifest[_]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.typeArguments", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#typeArguments:List[scala.reflect.OptManifest[_]]", "kind" : "def"}, {"label" : "newArrayBuilder", "tail" : "(): ArrayBuilder[Float]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArrayBuilder", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#newArrayBuilder():scala.collection.mutable.ArrayBuilder[T]", "kind" : "def"}, {"label" : "newWrappedArray", "tail" : "(len: Int): WrappedArray[Float]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newWrappedArray", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#newWrappedArray(len:Int):scala.collection.mutable.WrappedArray[T]", "kind" : "def"}, {"label" : "newArray5", "tail" : "(len: Int): Array[Array[Array[Array[Array[Float]]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray5", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#newArray5(len:Int):Array[Array[Array[Array[Array[T]]]]]", "kind" : "def"}, {"label" : "newArray4", "tail" : "(len: Int): Array[Array[Array[Array[Float]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray4", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#newArray4(len:Int):Array[Array[Array[Array[T]]]]", "kind" : "def"}, {"label" : "newArray3", "tail" : "(len: Int): Array[Array[Array[Float]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray3", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#newArray3(len:Int):Array[Array[Array[T]]]", "kind" : "def"}, {"label" : "newArray2", "tail" : "(len: Int): Array[Array[Float]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray2", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#newArray2(len:Int):Array[Array[T]]", "kind" : "def"}, {"label" : "arrayManifest", "tail" : "(): ClassManifest[Array[Float]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayManifest", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#arrayManifest:scala.reflect.ClassManifest[Array[T]]", "kind" : "def"}, {"label" : "arrayClass", "tail" : "(tp: Class[_]): Class[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayClass", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#arrayClass[T](tp:Class[_]):Class[Array[T]]", "kind" : "def"}, {"label" : ">:>", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.>:>", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#>:>(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "<:<", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.<:<", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#<:<(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagFloat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.scalar.ScalarTagImplicits", "members_trait" : [{"label" : "stPrd", "tail" : "(arg0: CLM[T]): ScalarTagProduct[T]", "member" : "org.saddle.scalar.ScalarTagImplicits.stPrd", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#stPrd[T<:Product](implicitevidence$1:org.saddle.CLM[T]):org.saddle.scalar.ScalarTagProduct[T]", "kind" : "implicit def"}, {"label" : "stAnyVal", "tail" : "(arg0: CLM[T]): ScalarTagAny[T]", "member" : "org.saddle.scalar.ScalarTagImplicitsL1.stAnyVal", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#stAnyVal[T<:AnyVal](implicitevidence$2:org.saddle.CLM[T]):org.saddle.scalar.ScalarTagAny[T]", "kind" : "implicit def"}, {"label" : "stAnyRef", "tail" : "(arg0: CLM[T]): ScalarTagAny[T]", "member" : "org.saddle.scalar.ScalarTagImplicitsL2.stAnyRef", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#stAnyRef[T<:AnyRef](implicitevidence$3:org.saddle.CLM[T]):org.saddle.scalar.ScalarTagAny[T]", "kind" : "implicit def"}, {"label" : "stAny", "tail" : "(arg0: CLM[T]): ScalarTagAny[T]", "member" : "org.saddle.scalar.ScalarTagImplicitsL3.stAny", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#stAny[T](implicitevidence$4:org.saddle.CLM[T]):org.saddle.scalar.ScalarTagAny[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/scalar\/ScalarTagImplicits.html", "kind" : "trait"}, {"name" : "org.saddle.scalar.ScalarTagImplicitsL1", "members_trait" : [{"label" : "stAnyVal", "tail" : "(arg0: CLM[T]): ScalarTagAny[T]", "member" : "org.saddle.scalar.ScalarTagImplicitsL1.stAnyVal", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#stAnyVal[T<:AnyVal](implicitevidence$2:org.saddle.CLM[T]):org.saddle.scalar.ScalarTagAny[T]", "kind" : "implicit def"}, {"label" : "stAnyRef", "tail" : "(arg0: CLM[T]): ScalarTagAny[T]", "member" : "org.saddle.scalar.ScalarTagImplicitsL2.stAnyRef", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#stAnyRef[T<:AnyRef](implicitevidence$3:org.saddle.CLM[T]):org.saddle.scalar.ScalarTagAny[T]", "kind" : "implicit def"}, {"label" : "stAny", "tail" : "(arg0: CLM[T]): ScalarTagAny[T]", "member" : "org.saddle.scalar.ScalarTagImplicitsL3.stAny", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#stAny[T](implicitevidence$4:org.saddle.CLM[T]):org.saddle.scalar.ScalarTagAny[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/scalar\/ScalarTagImplicitsL1.html", "kind" : "trait"}, {"name" : "org.saddle.scalar.ScalarTagImplicitsL2", "members_trait" : [{"label" : "stAnyRef", "tail" : "(arg0: CLM[T]): ScalarTagAny[T]", "member" : "org.saddle.scalar.ScalarTagImplicitsL2.stAnyRef", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#stAnyRef[T<:AnyRef](implicitevidence$3:org.saddle.CLM[T]):org.saddle.scalar.ScalarTagAny[T]", "kind" : "implicit def"}, {"label" : "stAny", "tail" : "(arg0: CLM[T]): ScalarTagAny[T]", "member" : "org.saddle.scalar.ScalarTagImplicitsL3.stAny", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#stAny[T](implicitevidence$4:org.saddle.CLM[T]):org.saddle.scalar.ScalarTagAny[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/scalar\/ScalarTagImplicitsL2.html", "kind" : "trait"}, {"name" : "org.saddle.scalar.ScalarTagImplicitsL3", "members_trait" : [{"label" : "stAny", "tail" : "(arg0: CLM[T]): ScalarTagAny[T]", "member" : "org.saddle.scalar.ScalarTagImplicitsL3.stAny", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#stAny[T](implicitevidence$4:org.saddle.CLM[T]):org.saddle.scalar.ScalarTagAny[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/scalar\/ScalarTagImplicitsL3.html", "kind" : "trait"}, {"name" : "org.saddle.scalar.ScalarTagInt", "shortDescription" : "Int ScalarTag", "object" : "org\/saddle\/scalar\/ScalarTagInt$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "org.saddle.scalar.ScalarTagInt.toString", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#toString():String", "kind" : "def"}, {"label" : "concat", "tail" : "(arrs: IndexedSeq[Vec[Int]]): Vec[Int]", "member" : "org.saddle.scalar.ScalarTagInt.concat", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#concat(arrs:IndexedSeq[org.saddle.Vec[Int]]):org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "makeSorter", "tail" : "(ord: ORD[Int]): Sorter[Int]", "member" : "org.saddle.scalar.ScalarTagInt.makeSorter", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#makeSorter(implicitord:org.saddle.ORD[Int]):org.saddle.array.Sorter[Int]", "kind" : "def"}, {"label" : "makeIndex", "tail" : "(vec: Vec[Int])(ord: ORD[Int]): Index[Int]", "member" : "org.saddle.scalar.ScalarTagInt.makeIndex", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#makeIndex(vec:org.saddle.Vec[Int])(implicitord:org.saddle.ORD[Int]):org.saddle.Index[Int]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(r: Int, c: Int, arr: Array[Int]): Mat[Int]", "member" : "org.saddle.scalar.ScalarTagInt.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#makeMat(r:Int,c:Int,arr:Array[Int]):org.saddle.Mat[Int]", "kind" : "def"}, {"label" : "makeVec", "tail" : "(arr: Array[Int]): Vec[Int]", "member" : "org.saddle.scalar.ScalarTagInt.makeVec", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#makeVec(arr:Array[Int]):org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "makeLoc", "tail" : "(sz: Int): LocatorInt", "member" : "org.saddle.scalar.ScalarTagInt.makeLoc", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#makeLoc(sz:Int):org.saddle.locator.LocatorInt", "kind" : "def"}, {"label" : "makeBuf", "tail" : "(sz: Int): Buffer[Int]", "member" : "org.saddle.scalar.ScalarTagInt.makeBuf", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#makeBuf(sz:Int):org.saddle.Buffer[Int]", "kind" : "def"}, {"label" : "runtimeClass", "tail" : "(): Class[Int]", "member" : "org.saddle.scalar.ScalarTagInt.runtimeClass", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#runtimeClass:Class[Int]", "kind" : "def"}, {"label" : "show", "tail" : "(v: Int): String", "member" : "org.saddle.scalar.ScalarTagInt.show", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#show(v:Int):String", "kind" : "def"}, {"label" : "negInf", "tail" : "(ev: NUM[Int]): Int", "member" : "org.saddle.scalar.ScalarTagInt.negInf", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#negInf(implicitev:org.saddle.NUM[Int]):Int", "kind" : "def"}, {"label" : "inf", "tail" : "(ev: NUM[Int]): Int", "member" : "org.saddle.scalar.ScalarTagInt.inf", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#inf(implicitev:org.saddle.NUM[Int]):Int", "kind" : "def"}, {"label" : "one", "tail" : "(ev: NUM[Int]): Int", "member" : "org.saddle.scalar.ScalarTagInt.one", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#one(implicitev:org.saddle.NUM[Int]):Int", "kind" : "def"}, {"label" : "zero", "tail" : "(ev: NUM[Int]): Int", "member" : "org.saddle.scalar.ScalarTagInt.zero", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#zero(implicitev:org.saddle.NUM[Int]):Int", "kind" : "def"}, {"label" : "toDouble", "tail" : "(t: Int)(ev: NUM[Int]): Double", "member" : "org.saddle.scalar.ScalarTagInt.toDouble", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#toDouble(t:Int)(implicitev:org.saddle.NUM[Int]):Double", "kind" : "def"}, {"label" : "compare", "tail" : "(x: Int, y: Int)(ev: ORD[Int]): Int", "member" : "org.saddle.scalar.ScalarTagInt.compare", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#compare(x:Int,y:Int)(implicitev:org.saddle.ORD[Int]):Int", "kind" : "def"}, {"label" : "parse", "tail" : "(s: String): Int", "member" : "org.saddle.scalar.ScalarTagInt.parse", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#parse(s:String):Int", "kind" : "def"}, {"label" : "notMissing", "tail" : "(v: Int): Boolean", "member" : "org.saddle.scalar.ScalarTagInt.notMissing", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#notMissing(v:Int):Boolean", "kind" : "def"}, {"label" : "isMissing", "tail" : "(v: Int): Boolean", "member" : "org.saddle.scalar.ScalarTagInt.isMissing", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#isMissing(v:Int):Boolean", "kind" : "def"}, {"label" : "missing", "tail" : "(): Int", "member" : "org.saddle.scalar.ScalarTagInt.missing", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#missing:Int", "kind" : "def"}, {"label" : "erasure", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTag.erasure", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#erasure:Class[_]", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.scalar.ScalarTag.equals", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.scalar.ScalarTag.hashCode", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#hashCode():Int", "kind" : "def"}, {"label" : "isAnyVal", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAnyVal", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#isAnyVal:Boolean", "kind" : "def"}, {"label" : "isAny", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAny", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#isAny:Boolean", "kind" : "def"}, {"label" : "strList", "tail" : "(): (Int) ⇒ List[String]", "member" : "org.saddle.scalar.ScalarTag.strList", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#strList:T=>List[String]", "kind" : "def"}, {"label" : "isDouble", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isDouble", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#isDouble:Boolean", "kind" : "def"}, {"label" : "isTuple", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isTuple", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#isTuple:Boolean", "kind" : "def"}, {"label" : "iseq", "tail" : "(a: Int, b: Int)(ev: ORD[Int]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.iseq", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#iseq(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(a: Int, b: Int)(ev: ORD[Int]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.gt", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#gt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(a: Int, b: Int)(ev: ORD[Int]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.lt", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#lt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "altMatConstructor", "tail" : "(r: Int, c: Int, arr: Array[Vec[Int]])(st: ST[Int]): Mat[Int]", "member" : "org.saddle.scalar.SpecializedFactory.altMatConstructor", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#altMatConstructor(r:Int,c:Int,arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(arr: Array[Vec[Int]])(st: ST[Int]): Mat[Int]", "member" : "org.saddle.scalar.SpecializedFactory.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#makeMat(arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(x: Any): Boolean", "member" : "scala.reflect.ClassTag.canEqual", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#canEqual(x:Any):Boolean", "kind" : "def"}, {"label" : "unapply", "tail" : "(x: Any): Option[Int]", "member" : "scala.reflect.ClassTag.unapply", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#unapply(x:Any):Option[T]", "kind" : "def"}, {"label" : "newArray", "tail" : "(len: Int): Array[Int]", "member" : "scala.reflect.ClassTag.newArray", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#newArray(len:Int):Array[T]", "kind" : "def"}, {"label" : "wrap", "tail" : "(): ClassTag[Array[Int]]", "member" : "scala.reflect.ClassTag.wrap", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#wrap:scala.reflect.ClassTag[Array[T]]", "kind" : "def"}, {"label" : "argString", "tail" : "(): String", "member" : "scala.reflect.ClassManifestDeprecatedApis.argString", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#argString:String", "kind" : "def"}, {"label" : "typeArguments", "tail" : "(): List[OptManifest[_]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.typeArguments", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#typeArguments:List[scala.reflect.OptManifest[_]]", "kind" : "def"}, {"label" : "newArrayBuilder", "tail" : "(): ArrayBuilder[Int]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArrayBuilder", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#newArrayBuilder():scala.collection.mutable.ArrayBuilder[T]", "kind" : "def"}, {"label" : "newWrappedArray", "tail" : "(len: Int): WrappedArray[Int]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newWrappedArray", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#newWrappedArray(len:Int):scala.collection.mutable.WrappedArray[T]", "kind" : "def"}, {"label" : "newArray5", "tail" : "(len: Int): Array[Array[Array[Array[Array[Int]]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray5", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#newArray5(len:Int):Array[Array[Array[Array[Array[T]]]]]", "kind" : "def"}, {"label" : "newArray4", "tail" : "(len: Int): Array[Array[Array[Array[Int]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray4", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#newArray4(len:Int):Array[Array[Array[Array[T]]]]", "kind" : "def"}, {"label" : "newArray3", "tail" : "(len: Int): Array[Array[Array[Int]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray3", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#newArray3(len:Int):Array[Array[Array[T]]]", "kind" : "def"}, {"label" : "newArray2", "tail" : "(len: Int): Array[Array[Int]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray2", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#newArray2(len:Int):Array[Array[T]]", "kind" : "def"}, {"label" : "arrayManifest", "tail" : "(): ClassManifest[Array[Int]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayManifest", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#arrayManifest:scala.reflect.ClassManifest[Array[T]]", "kind" : "def"}, {"label" : "arrayClass", "tail" : "(tp: Class[_]): Class[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayClass", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#arrayClass[T](tp:Class[_]):Class[Array[T]]", "kind" : "def"}, {"label" : ">:>", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.>:>", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#>:>(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "<:<", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.<:<", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#<:<(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagInt$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.scalar.ScalarTagLong", "shortDescription" : "Long ScalarTag", "object" : "org\/saddle\/scalar\/ScalarTagLong$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "org.saddle.scalar.ScalarTagLong.toString", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#toString():String", "kind" : "def"}, {"label" : "concat", "tail" : "(arrs: IndexedSeq[Vec[Long]]): Vec[Long]", "member" : "org.saddle.scalar.ScalarTagLong.concat", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#concat(arrs:IndexedSeq[org.saddle.Vec[Long]]):org.saddle.Vec[Long]", "kind" : "def"}, {"label" : "makeSorter", "tail" : "(ord: ORD[Long]): Sorter[Long]", "member" : "org.saddle.scalar.ScalarTagLong.makeSorter", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#makeSorter(implicitord:org.saddle.ORD[Long]):org.saddle.array.Sorter[Long]", "kind" : "def"}, {"label" : "makeIndex", "tail" : "(vec: Vec[Long])(ord: ORD[Long]): Index[Long]", "member" : "org.saddle.scalar.ScalarTagLong.makeIndex", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#makeIndex(vec:org.saddle.Vec[Long])(implicitord:org.saddle.ORD[Long]):org.saddle.Index[Long]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(r: Int, c: Int, arr: Array[Long]): Mat[Long]", "member" : "org.saddle.scalar.ScalarTagLong.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#makeMat(r:Int,c:Int,arr:Array[Long]):org.saddle.Mat[Long]", "kind" : "def"}, {"label" : "makeVec", "tail" : "(arr: Array[Long]): Vec[Long]", "member" : "org.saddle.scalar.ScalarTagLong.makeVec", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#makeVec(arr:Array[Long]):org.saddle.Vec[Long]", "kind" : "def"}, {"label" : "makeLoc", "tail" : "(sz: Int): LocatorLong", "member" : "org.saddle.scalar.ScalarTagLong.makeLoc", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#makeLoc(sz:Int):org.saddle.locator.LocatorLong", "kind" : "def"}, {"label" : "makeBuf", "tail" : "(sz: Int): Buffer[Long]", "member" : "org.saddle.scalar.ScalarTagLong.makeBuf", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#makeBuf(sz:Int):org.saddle.Buffer[Long]", "kind" : "def"}, {"label" : "runtimeClass", "tail" : "(): Class[Long]", "member" : "org.saddle.scalar.ScalarTagLong.runtimeClass", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#runtimeClass:Class[Long]", "kind" : "def"}, {"label" : "show", "tail" : "(v: Long): String", "member" : "org.saddle.scalar.ScalarTagLong.show", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#show(v:Long):String", "kind" : "def"}, {"label" : "negInf", "tail" : "(ev: NUM[Long]): Long", "member" : "org.saddle.scalar.ScalarTagLong.negInf", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#negInf(implicitev:org.saddle.NUM[Long]):Long", "kind" : "def"}, {"label" : "inf", "tail" : "(ev: NUM[Long]): Long", "member" : "org.saddle.scalar.ScalarTagLong.inf", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#inf(implicitev:org.saddle.NUM[Long]):Long", "kind" : "def"}, {"label" : "one", "tail" : "(ev: NUM[Long]): Long", "member" : "org.saddle.scalar.ScalarTagLong.one", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#one(implicitev:org.saddle.NUM[Long]):Long", "kind" : "def"}, {"label" : "zero", "tail" : "(ev: NUM[Long]): Long", "member" : "org.saddle.scalar.ScalarTagLong.zero", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#zero(implicitev:org.saddle.NUM[Long]):Long", "kind" : "def"}, {"label" : "toDouble", "tail" : "(t: Long)(ev: NUM[Long]): Double", "member" : "org.saddle.scalar.ScalarTagLong.toDouble", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#toDouble(t:Long)(implicitev:org.saddle.NUM[Long]):Double", "kind" : "def"}, {"label" : "compare", "tail" : "(x: Long, y: Long)(ev: ORD[Long]): Int", "member" : "org.saddle.scalar.ScalarTagLong.compare", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#compare(x:Long,y:Long)(implicitev:org.saddle.ORD[Long]):Int", "kind" : "def"}, {"label" : "parse", "tail" : "(s: String): Long", "member" : "org.saddle.scalar.ScalarTagLong.parse", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#parse(s:String):Long", "kind" : "def"}, {"label" : "notMissing", "tail" : "(v: Long): Boolean", "member" : "org.saddle.scalar.ScalarTagLong.notMissing", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#notMissing(v:Long):Boolean", "kind" : "def"}, {"label" : "isMissing", "tail" : "(v: Long): Boolean", "member" : "org.saddle.scalar.ScalarTagLong.isMissing", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#isMissing(v:Long):Boolean", "kind" : "def"}, {"label" : "missing", "tail" : "(): Long", "member" : "org.saddle.scalar.ScalarTagLong.missing", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#missing:Long", "kind" : "def"}, {"label" : "erasure", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTag.erasure", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#erasure:Class[_]", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.scalar.ScalarTag.equals", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.scalar.ScalarTag.hashCode", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#hashCode():Int", "kind" : "def"}, {"label" : "isAnyVal", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAnyVal", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#isAnyVal:Boolean", "kind" : "def"}, {"label" : "isAny", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAny", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#isAny:Boolean", "kind" : "def"}, {"label" : "strList", "tail" : "(): (Long) ⇒ List[String]", "member" : "org.saddle.scalar.ScalarTag.strList", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#strList:T=>List[String]", "kind" : "def"}, {"label" : "isDouble", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isDouble", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#isDouble:Boolean", "kind" : "def"}, {"label" : "isTuple", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isTuple", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#isTuple:Boolean", "kind" : "def"}, {"label" : "iseq", "tail" : "(a: Long, b: Long)(ev: ORD[Long]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.iseq", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#iseq(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(a: Long, b: Long)(ev: ORD[Long]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.gt", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#gt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(a: Long, b: Long)(ev: ORD[Long]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.lt", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#lt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "altMatConstructor", "tail" : "(r: Int, c: Int, arr: Array[Vec[Long]])(st: ST[Long]): Mat[Long]", "member" : "org.saddle.scalar.SpecializedFactory.altMatConstructor", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#altMatConstructor(r:Int,c:Int,arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(arr: Array[Vec[Long]])(st: ST[Long]): Mat[Long]", "member" : "org.saddle.scalar.SpecializedFactory.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#makeMat(arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(x: Any): Boolean", "member" : "scala.reflect.ClassTag.canEqual", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#canEqual(x:Any):Boolean", "kind" : "def"}, {"label" : "unapply", "tail" : "(x: Any): Option[Long]", "member" : "scala.reflect.ClassTag.unapply", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#unapply(x:Any):Option[T]", "kind" : "def"}, {"label" : "newArray", "tail" : "(len: Int): Array[Long]", "member" : "scala.reflect.ClassTag.newArray", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#newArray(len:Int):Array[T]", "kind" : "def"}, {"label" : "wrap", "tail" : "(): ClassTag[Array[Long]]", "member" : "scala.reflect.ClassTag.wrap", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#wrap:scala.reflect.ClassTag[Array[T]]", "kind" : "def"}, {"label" : "argString", "tail" : "(): String", "member" : "scala.reflect.ClassManifestDeprecatedApis.argString", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#argString:String", "kind" : "def"}, {"label" : "typeArguments", "tail" : "(): List[OptManifest[_]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.typeArguments", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#typeArguments:List[scala.reflect.OptManifest[_]]", "kind" : "def"}, {"label" : "newArrayBuilder", "tail" : "(): ArrayBuilder[Long]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArrayBuilder", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#newArrayBuilder():scala.collection.mutable.ArrayBuilder[T]", "kind" : "def"}, {"label" : "newWrappedArray", "tail" : "(len: Int): WrappedArray[Long]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newWrappedArray", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#newWrappedArray(len:Int):scala.collection.mutable.WrappedArray[T]", "kind" : "def"}, {"label" : "newArray5", "tail" : "(len: Int): Array[Array[Array[Array[Array[Long]]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray5", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#newArray5(len:Int):Array[Array[Array[Array[Array[T]]]]]", "kind" : "def"}, {"label" : "newArray4", "tail" : "(len: Int): Array[Array[Array[Array[Long]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray4", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#newArray4(len:Int):Array[Array[Array[Array[T]]]]", "kind" : "def"}, {"label" : "newArray3", "tail" : "(len: Int): Array[Array[Array[Long]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray3", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#newArray3(len:Int):Array[Array[Array[T]]]", "kind" : "def"}, {"label" : "newArray2", "tail" : "(len: Int): Array[Array[Long]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray2", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#newArray2(len:Int):Array[Array[T]]", "kind" : "def"}, {"label" : "arrayManifest", "tail" : "(): ClassManifest[Array[Long]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayManifest", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#arrayManifest:scala.reflect.ClassManifest[Array[T]]", "kind" : "def"}, {"label" : "arrayClass", "tail" : "(tp: Class[_]): Class[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayClass", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#arrayClass[T](tp:Class[_]):Class[Array[T]]", "kind" : "def"}, {"label" : ">:>", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.>:>", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#>:>(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "<:<", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.<:<", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#<:<(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagLong$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.scalar.ScalarTagProduct", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.saddle.scalar.ScalarTagProduct.toString", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#toString():String", "kind" : "def"}, {"label" : "strList", "tail" : "(): (T) ⇒ List[String]", "member" : "org.saddle.scalar.ScalarTagProduct.strList", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#strList:T=>List[String]", "kind" : "def"}, {"label" : "isTuple", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTagProduct.isTuple", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#isTuple:Boolean", "kind" : "def"}, {"member" : "org.saddle.scalar.ScalarTagProduct#<init>", "error" : "unsupported entity"}, {"label" : "concat", "tail" : "(arrs: IndexedSeq[Vec[T]]): Vec[T]", "member" : "org.saddle.scalar.ScalarTagAny.concat", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#concat(arrs:IndexedSeq[org.saddle.Vec[T]]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "makeSorter", "tail" : "(ord: ORD[T]): Sorter[T]", "member" : "org.saddle.scalar.ScalarTagAny.makeSorter", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#makeSorter(implicitord:org.saddle.ORD[T]):org.saddle.array.Sorter[T]", "kind" : "def"}, {"label" : "makeIndex", "tail" : "(vec: Vec[T])(ord: ORD[T]): Index[T]", "member" : "org.saddle.scalar.ScalarTagAny.makeIndex", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#makeIndex(vec:org.saddle.Vec[T])(implicitord:org.saddle.ORD[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(r: Int, c: Int, arr: Array[T]): Mat[T]", "member" : "org.saddle.scalar.ScalarTagAny.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#makeMat(r:Int,c:Int,arr:Array[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeVec", "tail" : "(arr: Array[T]): Vec[T]", "member" : "org.saddle.scalar.ScalarTagAny.makeVec", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#makeVec(arr:Array[T]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "makeLoc", "tail" : "(sz: Int): Locator[T]", "member" : "org.saddle.scalar.ScalarTagAny.makeLoc", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#makeLoc(sz:Int):org.saddle.locator.Locator[T]", "kind" : "def"}, {"label" : "makeBuf", "tail" : "(sz: Int): Buffer[T]", "member" : "org.saddle.scalar.ScalarTagAny.makeBuf", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#makeBuf(sz:Int):org.saddle.Buffer[T]", "kind" : "def"}, {"label" : "runtimeClass", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTagAny.runtimeClass", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#runtimeClass:Class[_]", "kind" : "def"}, {"label" : "show", "tail" : "(v: T): String", "member" : "org.saddle.scalar.ScalarTagAny.show", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#show(v:T):String", "kind" : "def"}, {"label" : "negInf", "tail" : "(ev: NUM[T]): Nothing", "member" : "org.saddle.scalar.ScalarTagAny.negInf", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#negInf(implicitev:org.saddle.NUM[T]):Nothing", "kind" : "def"}, {"label" : "inf", "tail" : "(ev: NUM[T]): Nothing", "member" : "org.saddle.scalar.ScalarTagAny.inf", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#inf(implicitev:org.saddle.NUM[T]):Nothing", "kind" : "def"}, {"label" : "one", "tail" : "(ev: NUM[T]): T", "member" : "org.saddle.scalar.ScalarTagAny.one", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#one(implicitev:org.saddle.NUM[T]):T", "kind" : "def"}, {"label" : "zero", "tail" : "(ev: NUM[T]): T", "member" : "org.saddle.scalar.ScalarTagAny.zero", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#zero(implicitev:org.saddle.NUM[T]):T", "kind" : "def"}, {"label" : "toDouble", "tail" : "(t: T)(ev: NUM[T]): Double", "member" : "org.saddle.scalar.ScalarTagAny.toDouble", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#toDouble(t:T)(implicitev:org.saddle.NUM[T]):Double", "kind" : "def"}, {"label" : "compare", "tail" : "(x: T, y: T)(ev: ORD[T]): Int", "member" : "org.saddle.scalar.ScalarTagAny.compare", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#compare(x:T,y:T)(implicitev:org.saddle.ORD[T]):Int", "kind" : "def"}, {"label" : "parse", "tail" : "(s: String): T", "member" : "org.saddle.scalar.ScalarTagAny.parse", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#parse(s:String):T", "kind" : "def"}, {"label" : "notMissing", "tail" : "(v: T): Boolean", "member" : "org.saddle.scalar.ScalarTagAny.notMissing", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#notMissing(v:T):Boolean", "kind" : "def"}, {"label" : "isMissing", "tail" : "(v: T): Boolean", "member" : "org.saddle.scalar.ScalarTagAny.isMissing", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#isMissing(v:T):Boolean", "kind" : "def"}, {"label" : "missing", "tail" : "(): T", "member" : "org.saddle.scalar.ScalarTagAny.missing", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#missing:T", "kind" : "def"}, {"label" : "erasure", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTag.erasure", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#erasure:Class[_]", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.scalar.ScalarTag.equals", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.scalar.ScalarTag.hashCode", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#hashCode():Int", "kind" : "def"}, {"label" : "isAnyVal", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAnyVal", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#isAnyVal:Boolean", "kind" : "def"}, {"label" : "isAny", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAny", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#isAny:Boolean", "kind" : "def"}, {"label" : "isDouble", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isDouble", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#isDouble:Boolean", "kind" : "def"}, {"label" : "iseq", "tail" : "(a: T, b: T)(ev: ORD[T]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.iseq", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#iseq(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(a: T, b: T)(ev: ORD[T]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.gt", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#gt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(a: T, b: T)(ev: ORD[T]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.lt", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#lt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "altMatConstructor", "tail" : "(r: Int, c: Int, arr: Array[Vec[T]])(st: ST[T]): Mat[T]", "member" : "org.saddle.scalar.SpecializedFactory.altMatConstructor", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#altMatConstructor(r:Int,c:Int,arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(arr: Array[Vec[T]])(st: ST[T]): Mat[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#makeMat(arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(x: Any): Boolean", "member" : "scala.reflect.ClassTag.canEqual", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#canEqual(x:Any):Boolean", "kind" : "def"}, {"label" : "unapply", "tail" : "(x: Any): Option[T]", "member" : "scala.reflect.ClassTag.unapply", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#unapply(x:Any):Option[T]", "kind" : "def"}, {"label" : "newArray", "tail" : "(len: Int): Array[T]", "member" : "scala.reflect.ClassTag.newArray", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#newArray(len:Int):Array[T]", "kind" : "def"}, {"label" : "wrap", "tail" : "(): ClassTag[Array[T]]", "member" : "scala.reflect.ClassTag.wrap", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#wrap:scala.reflect.ClassTag[Array[T]]", "kind" : "def"}, {"label" : "argString", "tail" : "(): String", "member" : "scala.reflect.ClassManifestDeprecatedApis.argString", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#argString:String", "kind" : "def"}, {"label" : "typeArguments", "tail" : "(): List[OptManifest[_]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.typeArguments", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#typeArguments:List[scala.reflect.OptManifest[_]]", "kind" : "def"}, {"label" : "newArrayBuilder", "tail" : "(): ArrayBuilder[T]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArrayBuilder", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#newArrayBuilder():scala.collection.mutable.ArrayBuilder[T]", "kind" : "def"}, {"label" : "newWrappedArray", "tail" : "(len: Int): WrappedArray[T]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newWrappedArray", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#newWrappedArray(len:Int):scala.collection.mutable.WrappedArray[T]", "kind" : "def"}, {"label" : "newArray5", "tail" : "(len: Int): Array[Array[Array[Array[Array[T]]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray5", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#newArray5(len:Int):Array[Array[Array[Array[Array[T]]]]]", "kind" : "def"}, {"label" : "newArray4", "tail" : "(len: Int): Array[Array[Array[Array[T]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray4", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#newArray4(len:Int):Array[Array[Array[Array[T]]]]", "kind" : "def"}, {"label" : "newArray3", "tail" : "(len: Int): Array[Array[Array[T]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray3", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#newArray3(len:Int):Array[Array[Array[T]]]", "kind" : "def"}, {"label" : "newArray2", "tail" : "(len: Int): Array[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray2", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#newArray2(len:Int):Array[Array[T]]", "kind" : "def"}, {"label" : "arrayManifest", "tail" : "(): ClassManifest[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayManifest", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#arrayManifest:scala.reflect.ClassManifest[Array[T]]", "kind" : "def"}, {"label" : "arrayClass", "tail" : "(tp: Class[_]): Class[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayClass", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#arrayClass[T](tp:Class[_]):Class[Array[T]]", "kind" : "def"}, {"label" : ">:>", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.>:>", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#>:>(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "<:<", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.<:<", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#<:<(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagProduct.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/scalar\/ScalarTagProduct.html", "kind" : "class"}, {"name" : "org.saddle.scalar.ScalarTagShort", "shortDescription" : "Short ScalarTag", "object" : "org\/saddle\/scalar\/ScalarTagShort$.html", "members_object" : [{"label" : "makeSorter", "tail" : "(ord: ORD[Short]): Sorter[Short]", "member" : "org.saddle.scalar.ScalarTagShort.makeSorter", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#makeSorter(implicitord:org.saddle.ORD[Short]):org.saddle.array.Sorter[Short]", "kind" : "def"}, {"label" : "parse", "tail" : "(s: String): Short", "member" : "org.saddle.scalar.ScalarTagShort.parse", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#parse(s:String):Short", "kind" : "def"}, {"label" : "concat", "tail" : "(arrs: IndexedSeq[Vec[Short]]): Vec[Short]", "member" : "org.saddle.scalar.ScalarTagAny.concat", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#concat(arrs:IndexedSeq[org.saddle.Vec[T]]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "makeIndex", "tail" : "(vec: Vec[Short])(ord: ORD[Short]): Index[Short]", "member" : "org.saddle.scalar.ScalarTagAny.makeIndex", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#makeIndex(vec:org.saddle.Vec[T])(implicitord:org.saddle.ORD[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(r: Int, c: Int, arr: Array[Short]): Mat[Short]", "member" : "org.saddle.scalar.ScalarTagAny.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#makeMat(r:Int,c:Int,arr:Array[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeVec", "tail" : "(arr: Array[Short]): Vec[Short]", "member" : "org.saddle.scalar.ScalarTagAny.makeVec", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#makeVec(arr:Array[T]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "makeLoc", "tail" : "(sz: Int): Locator[Short]", "member" : "org.saddle.scalar.ScalarTagAny.makeLoc", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#makeLoc(sz:Int):org.saddle.locator.Locator[T]", "kind" : "def"}, {"label" : "makeBuf", "tail" : "(sz: Int): Buffer[Short]", "member" : "org.saddle.scalar.ScalarTagAny.makeBuf", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#makeBuf(sz:Int):org.saddle.Buffer[T]", "kind" : "def"}, {"label" : "runtimeClass", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTagAny.runtimeClass", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#runtimeClass:Class[_]", "kind" : "def"}, {"label" : "show", "tail" : "(v: Short): String", "member" : "org.saddle.scalar.ScalarTagAny.show", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#show(v:T):String", "kind" : "def"}, {"label" : "negInf", "tail" : "(ev: NUM[Short]): Nothing", "member" : "org.saddle.scalar.ScalarTagAny.negInf", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#negInf(implicitev:org.saddle.NUM[T]):Nothing", "kind" : "def"}, {"label" : "inf", "tail" : "(ev: NUM[Short]): Nothing", "member" : "org.saddle.scalar.ScalarTagAny.inf", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#inf(implicitev:org.saddle.NUM[T]):Nothing", "kind" : "def"}, {"label" : "one", "tail" : "(ev: NUM[Short]): Short", "member" : "org.saddle.scalar.ScalarTagAny.one", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#one(implicitev:org.saddle.NUM[T]):T", "kind" : "def"}, {"label" : "zero", "tail" : "(ev: NUM[Short]): Short", "member" : "org.saddle.scalar.ScalarTagAny.zero", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#zero(implicitev:org.saddle.NUM[T]):T", "kind" : "def"}, {"label" : "toDouble", "tail" : "(t: Short)(ev: NUM[Short]): Double", "member" : "org.saddle.scalar.ScalarTagAny.toDouble", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#toDouble(t:T)(implicitev:org.saddle.NUM[T]):Double", "kind" : "def"}, {"label" : "compare", "tail" : "(x: Short, y: Short)(ev: ORD[Short]): Int", "member" : "org.saddle.scalar.ScalarTagAny.compare", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#compare(x:T,y:T)(implicitev:org.saddle.ORD[T]):Int", "kind" : "def"}, {"label" : "notMissing", "tail" : "(v: Short): Boolean", "member" : "org.saddle.scalar.ScalarTagAny.notMissing", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#notMissing(v:T):Boolean", "kind" : "def"}, {"label" : "isMissing", "tail" : "(v: Short): Boolean", "member" : "org.saddle.scalar.ScalarTagAny.isMissing", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#isMissing(v:T):Boolean", "kind" : "def"}, {"label" : "missing", "tail" : "(): Short", "member" : "org.saddle.scalar.ScalarTagAny.missing", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#missing:T", "kind" : "def"}, {"label" : "erasure", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTag.erasure", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#erasure:Class[_]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.scalar.ScalarTag.toString", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.scalar.ScalarTag.equals", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.scalar.ScalarTag.hashCode", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#hashCode():Int", "kind" : "def"}, {"label" : "isAnyVal", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAnyVal", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#isAnyVal:Boolean", "kind" : "def"}, {"label" : "isAny", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAny", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#isAny:Boolean", "kind" : "def"}, {"label" : "strList", "tail" : "(): (Short) ⇒ List[String]", "member" : "org.saddle.scalar.ScalarTag.strList", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#strList:T=>List[String]", "kind" : "def"}, {"label" : "isDouble", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isDouble", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#isDouble:Boolean", "kind" : "def"}, {"label" : "isTuple", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isTuple", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#isTuple:Boolean", "kind" : "def"}, {"label" : "iseq", "tail" : "(a: Short, b: Short)(ev: ORD[Short]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.iseq", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#iseq(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(a: Short, b: Short)(ev: ORD[Short]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.gt", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#gt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(a: Short, b: Short)(ev: ORD[Short]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.lt", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#lt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "altMatConstructor", "tail" : "(r: Int, c: Int, arr: Array[Vec[Short]])(st: ST[Short]): Mat[Short]", "member" : "org.saddle.scalar.SpecializedFactory.altMatConstructor", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#altMatConstructor(r:Int,c:Int,arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(arr: Array[Vec[Short]])(st: ST[Short]): Mat[Short]", "member" : "org.saddle.scalar.SpecializedFactory.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#makeMat(arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(x: Any): Boolean", "member" : "scala.reflect.ClassTag.canEqual", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#canEqual(x:Any):Boolean", "kind" : "def"}, {"label" : "unapply", "tail" : "(x: Any): Option[Short]", "member" : "scala.reflect.ClassTag.unapply", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#unapply(x:Any):Option[T]", "kind" : "def"}, {"label" : "newArray", "tail" : "(len: Int): Array[Short]", "member" : "scala.reflect.ClassTag.newArray", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#newArray(len:Int):Array[T]", "kind" : "def"}, {"label" : "wrap", "tail" : "(): ClassTag[Array[Short]]", "member" : "scala.reflect.ClassTag.wrap", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#wrap:scala.reflect.ClassTag[Array[T]]", "kind" : "def"}, {"label" : "argString", "tail" : "(): String", "member" : "scala.reflect.ClassManifestDeprecatedApis.argString", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#argString:String", "kind" : "def"}, {"label" : "typeArguments", "tail" : "(): List[OptManifest[_]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.typeArguments", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#typeArguments:List[scala.reflect.OptManifest[_]]", "kind" : "def"}, {"label" : "newArrayBuilder", "tail" : "(): ArrayBuilder[Short]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArrayBuilder", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#newArrayBuilder():scala.collection.mutable.ArrayBuilder[T]", "kind" : "def"}, {"label" : "newWrappedArray", "tail" : "(len: Int): WrappedArray[Short]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newWrappedArray", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#newWrappedArray(len:Int):scala.collection.mutable.WrappedArray[T]", "kind" : "def"}, {"label" : "newArray5", "tail" : "(len: Int): Array[Array[Array[Array[Array[Short]]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray5", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#newArray5(len:Int):Array[Array[Array[Array[Array[T]]]]]", "kind" : "def"}, {"label" : "newArray4", "tail" : "(len: Int): Array[Array[Array[Array[Short]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray4", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#newArray4(len:Int):Array[Array[Array[Array[T]]]]", "kind" : "def"}, {"label" : "newArray3", "tail" : "(len: Int): Array[Array[Array[Short]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray3", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#newArray3(len:Int):Array[Array[Array[T]]]", "kind" : "def"}, {"label" : "newArray2", "tail" : "(len: Int): Array[Array[Short]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray2", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#newArray2(len:Int):Array[Array[T]]", "kind" : "def"}, {"label" : "arrayManifest", "tail" : "(): ClassManifest[Array[Short]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayManifest", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#arrayManifest:scala.reflect.ClassManifest[Array[T]]", "kind" : "def"}, {"label" : "arrayClass", "tail" : "(tp: Class[_]): Class[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayClass", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#arrayClass[T](tp:Class[_]):Class[Array[T]]", "kind" : "def"}, {"label" : ">:>", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.>:>", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#>:>(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "<:<", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.<:<", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#<:<(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagShort$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.scalar.ScalarTagTime", "shortDescription" : "DateTime ScalarTag", "object" : "org\/saddle\/scalar\/ScalarTagTime$.html", "members_object" : [{"label" : "concat", "tail" : "(vecs: IndexedSeq[Vec[DateTime]]): VecTime", "member" : "org.saddle.scalar.ScalarTagTime.concat", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#concat(vecs:IndexedSeq[org.saddle.Vec[org.joda.time.DateTime]]):org.saddle.vec.VecTime", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.scalar.ScalarTagTime.toString", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#toString():String", "kind" : "def"}, {"label" : "runtimeClass", "tail" : "(): Class[DateTime]", "member" : "org.saddle.scalar.ScalarTagTime.runtimeClass", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#runtimeClass:Class[org.joda.time.DateTime]", "kind" : "def"}, {"label" : "show", "tail" : "(v: DateTime): String", "member" : "org.saddle.scalar.ScalarTagTime.show", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#show(v:org.joda.time.DateTime):String", "kind" : "def"}, {"label" : "makeSorter", "tail" : "(ord: ORD[DateTime]): Sorter[DateTime]", "member" : "org.saddle.scalar.ScalarTagTime.makeSorter", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#makeSorter(implicitord:org.saddle.ORD[org.joda.time.DateTime]):org.saddle.array.Sorter[org.joda.time.DateTime]", "kind" : "def"}, {"label" : "makeIndex", "tail" : "(vec: Vec[DateTime])(ord: ORD[DateTime]): Index[DateTime]", "member" : "org.saddle.scalar.ScalarTagTime.makeIndex", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#makeIndex(vec:org.saddle.Vec[org.joda.time.DateTime])(implicitord:org.saddle.ORD[org.joda.time.DateTime]):org.saddle.Index[org.joda.time.DateTime]", "kind" : "def"}, {"label" : "makeVec", "tail" : "(arr: Array[DateTime]): Vec[DateTime]", "member" : "org.saddle.scalar.ScalarTagTime.makeVec", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#makeVec(arr:Array[org.joda.time.DateTime]):org.saddle.Vec[org.joda.time.DateTime]", "kind" : "def"}, {"label" : "time2LongArray", "tail" : "(arr: Array[DateTime]): Array[Long]", "member" : "org.saddle.scalar.ScalarTagTime.time2LongArray", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#time2LongArray(arr:Array[org.joda.time.DateTime]):Array[Long]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(r: Int, c: Int, arr: Array[DateTime]): Mat[DateTime]", "member" : "org.saddle.scalar.ScalarTagAny.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#makeMat(r:Int,c:Int,arr:Array[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeLoc", "tail" : "(sz: Int): Locator[DateTime]", "member" : "org.saddle.scalar.ScalarTagAny.makeLoc", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#makeLoc(sz:Int):org.saddle.locator.Locator[T]", "kind" : "def"}, {"label" : "makeBuf", "tail" : "(sz: Int): Buffer[DateTime]", "member" : "org.saddle.scalar.ScalarTagAny.makeBuf", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#makeBuf(sz:Int):org.saddle.Buffer[T]", "kind" : "def"}, {"label" : "negInf", "tail" : "(ev: NUM[DateTime]): Nothing", "member" : "org.saddle.scalar.ScalarTagAny.negInf", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#negInf(implicitev:org.saddle.NUM[T]):Nothing", "kind" : "def"}, {"label" : "inf", "tail" : "(ev: NUM[DateTime]): Nothing", "member" : "org.saddle.scalar.ScalarTagAny.inf", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#inf(implicitev:org.saddle.NUM[T]):Nothing", "kind" : "def"}, {"label" : "one", "tail" : "(ev: NUM[DateTime]): DateTime", "member" : "org.saddle.scalar.ScalarTagAny.one", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#one(implicitev:org.saddle.NUM[T]):T", "kind" : "def"}, {"label" : "zero", "tail" : "(ev: NUM[DateTime]): DateTime", "member" : "org.saddle.scalar.ScalarTagAny.zero", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#zero(implicitev:org.saddle.NUM[T]):T", "kind" : "def"}, {"label" : "toDouble", "tail" : "(t: DateTime)(ev: NUM[DateTime]): Double", "member" : "org.saddle.scalar.ScalarTagAny.toDouble", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#toDouble(t:T)(implicitev:org.saddle.NUM[T]):Double", "kind" : "def"}, {"label" : "compare", "tail" : "(x: DateTime, y: DateTime)(ev: ORD[DateTime]): Int", "member" : "org.saddle.scalar.ScalarTagAny.compare", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#compare(x:T,y:T)(implicitev:org.saddle.ORD[T]):Int", "kind" : "def"}, {"label" : "parse", "tail" : "(s: String): DateTime", "member" : "org.saddle.scalar.ScalarTagAny.parse", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#parse(s:String):T", "kind" : "def"}, {"label" : "notMissing", "tail" : "(v: DateTime): Boolean", "member" : "org.saddle.scalar.ScalarTagAny.notMissing", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#notMissing(v:T):Boolean", "kind" : "def"}, {"label" : "isMissing", "tail" : "(v: DateTime): Boolean", "member" : "org.saddle.scalar.ScalarTagAny.isMissing", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#isMissing(v:T):Boolean", "kind" : "def"}, {"label" : "missing", "tail" : "(): DateTime", "member" : "org.saddle.scalar.ScalarTagAny.missing", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#missing:T", "kind" : "def"}, {"label" : "erasure", "tail" : "(): Class[_]", "member" : "org.saddle.scalar.ScalarTag.erasure", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#erasure:Class[_]", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.scalar.ScalarTag.equals", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.scalar.ScalarTag.hashCode", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#hashCode():Int", "kind" : "def"}, {"label" : "isAnyVal", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAnyVal", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#isAnyVal:Boolean", "kind" : "def"}, {"label" : "isAny", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isAny", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#isAny:Boolean", "kind" : "def"}, {"label" : "strList", "tail" : "(): (DateTime) ⇒ List[String]", "member" : "org.saddle.scalar.ScalarTag.strList", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#strList:T=>List[String]", "kind" : "def"}, {"label" : "isDouble", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isDouble", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#isDouble:Boolean", "kind" : "def"}, {"label" : "isTuple", "tail" : "(): Boolean", "member" : "org.saddle.scalar.ScalarTag.isTuple", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#isTuple:Boolean", "kind" : "def"}, {"label" : "iseq", "tail" : "(a: DateTime, b: DateTime)(ev: ORD[DateTime]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.iseq", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#iseq(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "gt", "tail" : "(a: DateTime, b: DateTime)(ev: ORD[DateTime]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.gt", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#gt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "lt", "tail" : "(a: DateTime, b: DateTime)(ev: ORD[DateTime]): Boolean", "member" : "org.saddle.scalar.CouldBeOrdered.lt", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#lt(a:T,b:T)(implicitev:org.saddle.ORD[T]):Boolean", "kind" : "def"}, {"label" : "altMatConstructor", "tail" : "(r: Int, c: Int, arr: Array[Vec[DateTime]])(st: ST[DateTime]): Mat[DateTime]", "member" : "org.saddle.scalar.SpecializedFactory.altMatConstructor", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#altMatConstructor(r:Int,c:Int,arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(arr: Array[Vec[DateTime]])(st: ST[DateTime]): Mat[DateTime]", "member" : "org.saddle.scalar.SpecializedFactory.makeMat", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#makeMat(arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(x: Any): Boolean", "member" : "scala.reflect.ClassTag.canEqual", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#canEqual(x:Any):Boolean", "kind" : "def"}, {"label" : "unapply", "tail" : "(x: Any): Option[DateTime]", "member" : "scala.reflect.ClassTag.unapply", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#unapply(x:Any):Option[T]", "kind" : "def"}, {"label" : "newArray", "tail" : "(len: Int): Array[DateTime]", "member" : "scala.reflect.ClassTag.newArray", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#newArray(len:Int):Array[T]", "kind" : "def"}, {"label" : "wrap", "tail" : "(): ClassTag[Array[DateTime]]", "member" : "scala.reflect.ClassTag.wrap", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#wrap:scala.reflect.ClassTag[Array[T]]", "kind" : "def"}, {"label" : "argString", "tail" : "(): String", "member" : "scala.reflect.ClassManifestDeprecatedApis.argString", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#argString:String", "kind" : "def"}, {"label" : "typeArguments", "tail" : "(): List[OptManifest[_]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.typeArguments", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#typeArguments:List[scala.reflect.OptManifest[_]]", "kind" : "def"}, {"label" : "newArrayBuilder", "tail" : "(): ArrayBuilder[DateTime]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArrayBuilder", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#newArrayBuilder():scala.collection.mutable.ArrayBuilder[T]", "kind" : "def"}, {"label" : "newWrappedArray", "tail" : "(len: Int): WrappedArray[DateTime]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newWrappedArray", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#newWrappedArray(len:Int):scala.collection.mutable.WrappedArray[T]", "kind" : "def"}, {"label" : "newArray5", "tail" : "(len: Int): Array[Array[Array[Array[Array[DateTime]]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray5", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#newArray5(len:Int):Array[Array[Array[Array[Array[T]]]]]", "kind" : "def"}, {"label" : "newArray4", "tail" : "(len: Int): Array[Array[Array[Array[DateTime]]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray4", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#newArray4(len:Int):Array[Array[Array[Array[T]]]]", "kind" : "def"}, {"label" : "newArray3", "tail" : "(len: Int): Array[Array[Array[DateTime]]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray3", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#newArray3(len:Int):Array[Array[Array[T]]]", "kind" : "def"}, {"label" : "newArray2", "tail" : "(len: Int): Array[Array[DateTime]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.newArray2", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#newArray2(len:Int):Array[Array[T]]", "kind" : "def"}, {"label" : "arrayManifest", "tail" : "(): ClassManifest[Array[DateTime]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayManifest", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#arrayManifest:scala.reflect.ClassManifest[Array[T]]", "kind" : "def"}, {"label" : "arrayClass", "tail" : "(tp: Class[_]): Class[Array[T]]", "member" : "scala.reflect.ClassManifestDeprecatedApis.arrayClass", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#arrayClass[T](tp:Class[_]):Class[Array[T]]", "kind" : "def"}, {"label" : ">:>", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.>:>", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#>:>(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "<:<", "tail" : "(that: ClassManifest[_]): Boolean", "member" : "scala.reflect.ClassManifestDeprecatedApis.<:<", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#<:<(that:scala.reflect.ClassManifest[_]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/ScalarTagTime$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.scalar.SpecializedFactory", "members_trait" : [{"label" : "altMatConstructor", "tail" : "(r: Int, c: Int, arr: Array[Vec[T]])(st: ST[T]): Mat[T]", "member" : "org.saddle.scalar.SpecializedFactory.altMatConstructor", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#altMatConstructor(r:Int,c:Int,arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "makeMat", "tail" : "(arr: Array[Vec[T]])(st: ST[T]): Mat[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeMat", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#makeMat(arr:Array[org.saddle.Vec[T]])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/SpecializedFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "makeSorter", "tail" : "(ord: ORD[T]): Sorter[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeSorter", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#makeSorter(implicitord:org.saddle.ORD[T]):org.saddle.array.Sorter[T]", "kind" : "abstract def"}, {"label" : "makeIndex", "tail" : "(vec: Vec[T])(ord: ORD[T]): Index[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeIndex", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#makeIndex(vec:org.saddle.Vec[T])(implicitord:org.saddle.ORD[T]):org.saddle.Index[T]", "kind" : "abstract def"}, {"label" : "makeMat", "tail" : "(r: Int, c: Int, arr: Array[T]): Mat[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeMat", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#makeMat(r:Int,c:Int,arr:Array[T]):org.saddle.Mat[T]", "kind" : "abstract def"}, {"label" : "makeVec", "tail" : "(arr: Array[T]): Vec[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeVec", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#makeVec(arr:Array[T]):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "makeLoc", "tail" : "(sz: Int): Locator[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeLoc", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#makeLoc(sz:Int):org.saddle.locator.Locator[T]", "kind" : "abstract def"}, {"label" : "makeBuf", "tail" : "(sz: Int): Buffer[T]", "member" : "org.saddle.scalar.SpecializedFactory.makeBuf", "link" : "org\/saddle\/scalar\/SpecializedFactory.html#makeBuf(sz:Int):org.saddle.Buffer[T]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/saddle\/scalar\/SpecializedFactory.html", "kind" : "trait"}, {"name" : "org.saddle.scalar.Value", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.saddle.scalar.Value.toString", "link" : "org\/saddle\/scalar\/Value.html#toString():String", "kind" : "def"}, {"label" : "get", "tail" : "(): T", "member" : "org.saddle.scalar.Value.get", "link" : "org\/saddle\/scalar\/Value.html#get:T", "kind" : "def"}, {"label" : "isNA", "tail" : "(): Boolean", "member" : "org.saddle.scalar.Value.isNA", "link" : "org\/saddle\/scalar\/Value.html#isNA:Boolean", "kind" : "def"}, {"member" : "org.saddle.scalar.Value#<init>", "error" : "unsupported entity"}, {"label" : "el", "tail" : ": T", "member" : "org.saddle.scalar.Value.el", "link" : "org\/saddle\/scalar\/Value.html#el:T", "kind" : "val"}, {"label" : "foreach", "tail" : "(f: (T) ⇒ U): Unit", "member" : "org.saddle.scalar.Scalar.foreach", "link" : "org\/saddle\/scalar\/Value.html#foreach[U](f:T=>U):Unit", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ Scalar[B]): Scalar[B]", "member" : "org.saddle.scalar.Scalar.flatMap", "link" : "org\/saddle\/scalar\/Value.html#flatMap[B](f:T=>org.saddle.scalar.Scalar[B]):org.saddle.scalar.Scalar[B]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (T) ⇒ B)(arg0: ST[B]): Scalar[B]", "member" : "org.saddle.scalar.Scalar.map", "link" : "org\/saddle\/scalar\/Value.html#map[B](f:T=>B)(implicitevidence$1:org.saddle.ST[B]):org.saddle.scalar.Scalar[B]", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.scalar.Scalar.isEmpty", "link" : "org\/saddle\/scalar\/Value.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(): Boolean", "member" : "org.saddle.scalar.Scalar.isDefined", "link" : "org\/saddle\/scalar\/Value.html#isDefined:Boolean", "kind" : "def"}, {"label" : "toOption", "tail" : "(): Option[T]", "member" : "org.saddle.scalar.Scalar.toOption", "link" : "org\/saddle\/scalar\/Value.html#toOption:Option[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/scalar\/Value.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/scalar\/Value.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/scalar\/Value.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/scalar\/Value.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/scalar\/Value.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/scalar\/Value.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/scalar\/Value.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/Value.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/Value.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/scalar\/Value.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/scalar\/Value.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/scalar\/Value.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/scalar\/Value.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/scalar\/Value.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/scalar\/Value.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/scalar\/Value.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/saddle\/scalar\/Value.html", "kind" : "case class"}], "org.saddle.binary" : [{"name" : "org.saddle.binary.Reader", "shortDescription" : "", "object" : "org\/saddle\/binary\/Reader$.html", "members_object" : [{"label" : "readMatFromArray", "tail" : "(array: Array[Byte])(arg0: ST[T]): Either[String, Mat[T]]", "member" : "org.saddle.binary.Reader.readMatFromArray", "link" : "org\/saddle\/binary\/Reader$.html#readMatFromArray[T](array:Array[Byte])(implicitevidence$8:org.saddle.ST[T]):scala.util.Either[String,org.saddle.Mat[T]]", "kind" : "def"}, {"label" : "readFrameFromArray", "tail" : "(array: Array[Byte])(arg0: ST[T]): Either[String, Frame[String, String, T]]", "member" : "org.saddle.binary.Reader.readFrameFromArray", "link" : "org\/saddle\/binary\/Reader$.html#readFrameFromArray[T](array:Array[Byte])(implicitevidence$7:org.saddle.ST[T]):scala.util.Either[String,org.saddle.Frame[String,String,T]]", "kind" : "def"}, {"label" : "ByteChannel", "tail" : "", "member" : "org.saddle.binary.Reader.ByteChannel", "link" : "org\/saddle\/binary\/Reader$.html#ByteChannelextendsReadableByteChannel", "kind" : "class"}, {"label" : "readFrameFromChannel", "tail" : "(channel: ReadableByteChannel)(arg0: ST[T]): Either[String, Frame[String, String, T]]", "member" : "org.saddle.binary.Reader.readFrameFromChannel", "link" : "org\/saddle\/binary\/Reader$.html#readFrameFromChannel[T](channel:java.nio.channels.ReadableByteChannel)(implicitevidence$6:org.saddle.ST[T]):scala.util.Either[String,org.saddle.Frame[String,String,T]]", "kind" : "def"}, {"label" : "readFrameDataFromChannel", "tail" : "(channel: ReadableByteChannel, rowIx: Index[String], colIx: Index[String], width: Int)(arg0: ST[T]): Either[String, Frame[String, String, T]]", "member" : "org.saddle.binary.Reader.readFrameDataFromChannel", "link" : "org\/saddle\/binary\/Reader$.html#readFrameDataFromChannel[T](channel:java.nio.channels.ReadableByteChannel,rowIx:org.saddle.Index[String],colIx:org.saddle.Index[String],width:Int)(implicitevidence$5:org.saddle.ST[T]):scala.util.Either[String,org.saddle.Frame[String,String,T]]", "kind" : "def"}, {"label" : "readMatFromChannel", "tail" : "(channel: ReadableByteChannel)(arg0: ST[T]): Either[String, Mat[T]]", "member" : "org.saddle.binary.Reader.readMatFromChannel", "link" : "org\/saddle\/binary\/Reader$.html#readMatFromChannel[T](channel:java.nio.channels.ReadableByteChannel)(implicitevidence$4:org.saddle.ST[T]):scala.util.Either[String,org.saddle.Mat[T]]", "kind" : "def"}, {"label" : "readMatDataFromChannel", "tail" : "(channel: ReadableByteChannel, numRows: Int, numCols: Int, width: Int)(arg0: ST[T]): Either[String, Mat[T]]", "member" : "org.saddle.binary.Reader.readMatDataFromChannel", "link" : "org\/saddle\/binary\/Reader$.html#readMatDataFromChannel[T](channel:java.nio.channels.ReadableByteChannel,numRows:Int,numCols:Int,width:Int)(implicitevidence$3:org.saddle.ST[T]):scala.util.Either[String,org.saddle.Mat[T]]", "kind" : "def"}, {"label" : "readHeaderFromChannel", "tail" : "(channel: ReadableByteChannel)(arg0: ST[T]): Either[String, LinkedHashMap[String, Value]]", "member" : "org.saddle.binary.Reader.readHeaderFromChannel", "link" : "org\/saddle\/binary\/Reader$.html#readHeaderFromChannel[T](channel:java.nio.channels.ReadableByteChannel)(implicitevidence$2:org.saddle.ST[T]):scala.util.Either[String,scala.collection.mutable.LinkedHashMap[String,ujson.Value]]", "kind" : "def"}, {"label" : "readFully", "tail" : "(bb: ByteBuffer, channel: ReadableByteChannel): java.nio.Buffer", "member" : "org.saddle.binary.Reader.readFully", "link" : "org\/saddle\/binary\/Reader$.html#readFully(bb:java.nio.ByteBuffer,channel:java.nio.channels.ReadableByteChannel):java.nio.Buffer", "kind" : "def"}, {"label" : "sequence", "tail" : "(s: Seq[Either[A, B]]): Either[A, Seq[B]]", "member" : "org.saddle.binary.Reader.sequence", "link" : "org\/saddle\/binary\/Reader$.html#sequence[A,B](s:Seq[scala.util.Either[A,B]]):scala.util.Either[A,Seq[B]]", "kind" : "def"}, {"label" : "parse", "tail" : "(size: Int, from: ByteBuffer)(arg0: ST[T]): Either[String, Array[T]]", "member" : "org.saddle.binary.Reader.parse", "link" : "org\/saddle\/binary\/Reader$.html#parse[T](size:Int,from:java.nio.ByteBuffer)(implicitevidence$1:org.saddle.ST[T]):scala.util.Either[String,Array[T]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/binary\/Reader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/binary\/Reader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/binary\/Reader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/binary\/Reader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/binary\/Reader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/binary\/Reader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/binary\/Reader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/binary\/Reader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/binary\/Reader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/binary\/Reader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/binary\/Reader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/binary\/Reader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/binary\/Reader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/binary\/Reader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/binary\/Reader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/binary\/Reader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/binary\/Reader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/binary\/Reader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/binary\/Reader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.binary.Writer", "shortDescription" : "", "object" : "org\/saddle\/binary\/Writer$.html", "members_object" : [{"label" : "writeFrameIntoArray", "tail" : "(frame: Frame[RX, CX, T])(arg0: ST[T]): Either[String, Array[Byte]]", "member" : "org.saddle.binary.Writer.writeFrameIntoArray", "link" : "org\/saddle\/binary\/Writer$.html#writeFrameIntoArray[RX,CX,T](frame:org.saddle.Frame[RX,CX,T])(implicitevidence$9:org.saddle.ST[T]):Either[String,Array[Byte]]", "kind" : "def"}, {"label" : "writeMatIntoArray", "tail" : "(mat: Mat[T])(arg0: ST[T]): Either[String, Array[Byte]]", "member" : "org.saddle.binary.Writer.writeMatIntoArray", "link" : "org\/saddle\/binary\/Writer$.html#writeMatIntoArray[T](mat:org.saddle.Mat[T])(implicitevidence$8:org.saddle.ST[T]):Either[String,Array[Byte]]", "kind" : "def"}, {"label" : "writeFrameIntoChannel", "tail" : "(frame: Frame[RX, CX, T], channel: WritableByteChannel)(arg0: ST[T]): Either[String, Unit]", "member" : "org.saddle.binary.Writer.writeFrameIntoChannel", "link" : "org\/saddle\/binary\/Writer$.html#writeFrameIntoChannel[RX,CX,T](frame:org.saddle.Frame[RX,CX,T],channel:java.nio.channels.WritableByteChannel)(implicitevidence$7:org.saddle.ST[T]):Either[String,Unit]", "kind" : "def"}, {"label" : "writeFully", "tail" : "(bb: ByteBuffer, channel: WritableByteChannel): Unit", "member" : "org.saddle.binary.Writer.writeFully", "link" : "org\/saddle\/binary\/Writer$.html#writeFully(bb:java.nio.ByteBuffer,channel:java.nio.channels.WritableByteChannel):Unit", "kind" : "def"}, {"label" : "writeMatIntoChannel", "tail" : "(mat: Mat[T], channel: WritableByteChannel)(arg0: ST[T]): Either[String, Unit]", "member" : "org.saddle.binary.Writer.writeMatIntoChannel", "link" : "org\/saddle\/binary\/Writer$.html#writeMatIntoChannel[T](mat:org.saddle.Mat[T],channel:java.nio.channels.WritableByteChannel)(implicitevidence$6:org.saddle.ST[T]):Either[String,Unit]", "kind" : "def"}, {"label" : "put", "tail" : "(t: Array[T], bb: ByteBuffer)(arg0: ST[T]): Either[String, Unit]", "member" : "org.saddle.binary.Writer.put", "link" : "org\/saddle\/binary\/Writer$.html#put[T](t:Array[T],bb:java.nio.ByteBuffer)(implicitevidence$5:org.saddle.ST[T]):scala.util.Either[String,Unit]", "kind" : "def"}, {"label" : "createHeader", "tail" : "(descriptor: Either[String, String]): Either[String, Array[Byte]]", "member" : "org.saddle.binary.Writer.createHeader", "link" : "org\/saddle\/binary\/Writer$.html#createHeader(descriptor:Either[String,String]):Either[String,Array[Byte]]", "kind" : "def"}, {"label" : "createFrameDescriptor", "tail" : "(frame: Frame[RX, CX, T])(arg0: ST[T]): Either[String, String]", "member" : "org.saddle.binary.Writer.createFrameDescriptor", "link" : "org\/saddle\/binary\/Writer$.html#createFrameDescriptor[RX,CX,T](frame:org.saddle.Frame[RX,CX,T])(implicitevidence$2:org.saddle.ST[T]):scala.util.Either[String,String]", "kind" : "def"}, {"label" : "createMatDescriptor", "tail" : "(mat: Mat[T])(arg0: ST[T]): Either[String, String]", "member" : "org.saddle.binary.Writer.createMatDescriptor", "link" : "org\/saddle\/binary\/Writer$.html#createMatDescriptor[T](mat:org.saddle.Mat[T])(implicitevidence$1:org.saddle.ST[T]):scala.util.Either[String,String]", "kind" : "def"}, {"label" : "KEY_rowix", "tail" : ": String", "member" : "org.saddle.binary.Writer.KEY_rowix", "link" : "org\/saddle\/binary\/Writer$.html#KEY_rowix:String", "kind" : "val"}, {"label" : "KEY_colix", "tail" : ": String", "member" : "org.saddle.binary.Writer.KEY_colix", "link" : "org\/saddle\/binary\/Writer$.html#KEY_colix:String", "kind" : "val"}, {"label" : "KEY_v", "tail" : ": String", "member" : "org.saddle.binary.Writer.KEY_v", "link" : "org\/saddle\/binary\/Writer$.html#KEY_v:String", "kind" : "val"}, {"label" : "KEY_rowmajor", "tail" : ": String", "member" : "org.saddle.binary.Writer.KEY_rowmajor", "link" : "org\/saddle\/binary\/Writer$.html#KEY_rowmajor:String", "kind" : "val"}, {"label" : "KEY_numrows", "tail" : ": String", "member" : "org.saddle.binary.Writer.KEY_numrows", "link" : "org\/saddle\/binary\/Writer$.html#KEY_numrows:String", "kind" : "val"}, {"label" : "KEY_numcols", "tail" : ": String", "member" : "org.saddle.binary.Writer.KEY_numcols", "link" : "org\/saddle\/binary\/Writer$.html#KEY_numcols:String", "kind" : "val"}, {"label" : "KEY_datatype", "tail" : ": String", "member" : "org.saddle.binary.Writer.KEY_datatype", "link" : "org\/saddle\/binary\/Writer$.html#KEY_datatype:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/binary\/Writer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/binary\/Writer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/binary\/Writer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/binary\/Writer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/binary\/Writer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/binary\/Writer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/binary\/Writer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/binary\/Writer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/binary\/Writer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/binary\/Writer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/binary\/Writer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/binary\/Writer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/binary\/Writer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/binary\/Writer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/binary\/Writer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/binary\/Writer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/binary\/Writer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/binary\/Writer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/binary\/Writer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.saddle.groupby" : [{"name" : "org.saddle.groupby.FrameGrouper", "shortDescription" : "Helper class to do combine or transform after a groupBy", "object" : "org\/saddle\/groupby\/FrameGrouper$.html", "members_class" : [{"label" : "transform", "tail" : "(fn: (Vec[T]) ⇒ Vec[U])(arg0: ST[U]): Frame[X, Y, U]", "member" : "org.saddle.groupby.FrameGrouper.transform", "link" : "org\/saddle\/groupby\/FrameGrouper.html#transform[U](fn:org.saddle.Vec[T]=>org.saddle.Vec[U])(implicitevidence$12:org.saddle.ST[U]):org.saddle.Frame[X,Y,U]", "kind" : "def"}, {"label" : "transform", "tail" : "(fn: (Z, Vec[T]) ⇒ Vec[U])(arg0: ST[U]): Frame[X, Y, U]", "member" : "org.saddle.groupby.FrameGrouper.transform", "link" : "org\/saddle\/groupby\/FrameGrouper.html#transform[U](fn:(Z,org.saddle.Vec[T])=>org.saddle.Vec[U])(implicitevidence$11:org.saddle.ST[U]):org.saddle.Frame[X,Y,U]", "kind" : "def"}, {"label" : "combine", "tail" : "(fn: (Vec[T]) ⇒ U)(arg0: ST[U], arg1: ORD[U]): Frame[Z, Y, U]", "member" : "org.saddle.groupby.FrameGrouper.combine", "link" : "org\/saddle\/groupby\/FrameGrouper.html#combine[U](fn:org.saddle.Vec[T]=>U)(implicitevidence$9:org.saddle.ST[U],implicitevidence$10:org.saddle.ORD[U]):org.saddle.Frame[Z,Y,U]", "kind" : "def"}, {"label" : "combine", "tail" : "(fn: (Z, Vec[T]) ⇒ U)(arg0: ST[U]): Frame[Z, Y, U]", "member" : "org.saddle.groupby.FrameGrouper.combine", "link" : "org\/saddle\/groupby\/FrameGrouper.html#combine[U](fn:(Z,org.saddle.Vec[T])=>U)(implicitevidence$8:org.saddle.ST[U]):org.saddle.Frame[Z,Y,U]", "kind" : "def"}, {"label" : "groups", "tail" : "(): Array[(Z, Array[Int])]", "member" : "org.saddle.groupby.FrameGrouper.groups", "link" : "org\/saddle\/groupby\/FrameGrouper.html#groups:Array[(Z,Array[Int])]", "kind" : "def"}, {"label" : "keys", "tail" : "(): Array[Z]", "member" : "org.saddle.groupby.FrameGrouper.keys", "link" : "org\/saddle\/groupby\/FrameGrouper.html#keys:Array[Z]", "kind" : "def"}, {"member" : "org.saddle.groupby.FrameGrouper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/groupby\/FrameGrouper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/groupby\/FrameGrouper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/groupby\/FrameGrouper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/groupby\/FrameGrouper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/groupby\/FrameGrouper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/groupby\/FrameGrouper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/groupby\/FrameGrouper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/FrameGrouper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/FrameGrouper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/FrameGrouper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/groupby\/FrameGrouper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/groupby\/FrameGrouper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/groupby\/FrameGrouper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/groupby\/FrameGrouper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/groupby\/FrameGrouper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/groupby\/FrameGrouper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/groupby\/FrameGrouper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/groupby\/FrameGrouper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/groupby\/FrameGrouper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(ix: Index[Z], frame: Frame[X, Y, T])(arg0: ST[Z], arg1: ORD[Z], arg2: ST[X], arg3: ORD[X], arg4: ST[Y], arg5: ORD[Y], arg6: ST[T]): FrameGrouper[Z, X, Y, T]", "member" : "org.saddle.groupby.FrameGrouper.apply", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#apply[Z,X,Y,T](ix:org.saddle.Index[Z],frame:org.saddle.Frame[X,Y,T])(implicitevidence$18:org.saddle.ST[Z],implicitevidence$19:org.saddle.ORD[Z],implicitevidence$20:org.saddle.ST[X],implicitevidence$21:org.saddle.ORD[X],implicitevidence$22:org.saddle.ST[Y],implicitevidence$23:org.saddle.ORD[Y],implicitevidence$24:org.saddle.ST[T]):org.saddle.groupby.FrameGrouper[Z,X,Y,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(frame: Frame[Z, Y, T])(arg0: ST[Z], arg1: ORD[Z], arg2: ST[Y], arg3: ORD[Y], arg4: ST[T]): FrameGrouper[Z, Z, Y, T]", "member" : "org.saddle.groupby.FrameGrouper.apply", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#apply[Z,Y,T](frame:org.saddle.Frame[Z,Y,T])(implicitevidence$13:org.saddle.ST[Z],implicitevidence$14:org.saddle.ORD[Z],implicitevidence$15:org.saddle.ST[Y],implicitevidence$16:org.saddle.ORD[Y],implicitevidence$17:org.saddle.ST[T]):org.saddle.groupby.FrameGrouper[Z,Z,Y,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/groupby\/FrameGrouper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/groupby\/FrameGrouper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/groupby\/FrameGrouper.html", "kind" : "class"}, {"name" : "org.saddle.groupby.IndexGrouper", "shortDescription" : "Creates groups for each unique key in an index", "object" : "org\/saddle\/groupby\/IndexGrouper$.html", "members_class" : [{"label" : "groups", "tail" : "(): Array[(Y, Array[Int])]", "member" : "org.saddle.groupby.IndexGrouper.groups", "link" : "org\/saddle\/groupby\/IndexGrouper.html#groups:Array[(Y,Array[Int])]", "kind" : "def"}, {"label" : "keys", "tail" : "(): Array[Y]", "member" : "org.saddle.groupby.IndexGrouper.keys", "link" : "org\/saddle\/groupby\/IndexGrouper.html#keys:Array[Y]", "kind" : "def"}, {"member" : "org.saddle.groupby.IndexGrouper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/groupby\/IndexGrouper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/groupby\/IndexGrouper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/groupby\/IndexGrouper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/groupby\/IndexGrouper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/groupby\/IndexGrouper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/groupby\/IndexGrouper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/groupby\/IndexGrouper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/IndexGrouper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/IndexGrouper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/IndexGrouper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/groupby\/IndexGrouper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/groupby\/IndexGrouper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/groupby\/IndexGrouper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/groupby\/IndexGrouper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/groupby\/IndexGrouper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/groupby\/IndexGrouper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/groupby\/IndexGrouper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/groupby\/IndexGrouper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/groupby\/IndexGrouper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(ix: Index[Y], sorted: Boolean)(arg0: ST[Y], arg1: ORD[Y]): IndexGrouper[Y]", "member" : "org.saddle.groupby.IndexGrouper.apply", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#apply[Y](ix:org.saddle.Index[Y],sorted:Boolean)(implicitevidence$5:org.saddle.ST[Y],implicitevidence$6:org.saddle.ORD[Y]):org.saddle.groupby.IndexGrouper[Y]", "kind" : "def"}, {"label" : "apply", "tail" : "(ix: Index[Y])(arg0: ST[Y], arg1: ORD[Y]): IndexGrouper[Y]", "member" : "org.saddle.groupby.IndexGrouper.apply", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#apply[Y](ix:org.saddle.Index[Y])(implicitevidence$3:org.saddle.ST[Y],implicitevidence$4:org.saddle.ORD[Y]):org.saddle.groupby.IndexGrouper[Y]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/groupby\/IndexGrouper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/groupby\/IndexGrouper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/groupby\/IndexGrouper.html", "kind" : "class"}, {"name" : "org.saddle.groupby.SeriesGrouper", "shortDescription" : "Helper class to do combine or transform after a groupBy", "object" : "org\/saddle\/groupby\/SeriesGrouper$.html", "members_class" : [{"label" : "transform", "tail" : "(fn: (Vec[T]) ⇒ Vec[U])(arg0: ST[U]): Series[X, U]", "member" : "org.saddle.groupby.SeriesGrouper.transform", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#transform[U](fn:org.saddle.Vec[T]=>org.saddle.Vec[U])(implicitevidence$11:org.saddle.ST[U]):org.saddle.Series[X,U]", "kind" : "def"}, {"label" : "transform", "tail" : "(fn: (Y, Vec[T]) ⇒ Vec[U])(arg0: ST[U]): Series[X, U]", "member" : "org.saddle.groupby.SeriesGrouper.transform", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#transform[U](fn:(Y,org.saddle.Vec[T])=>org.saddle.Vec[U])(implicitevidence$10:org.saddle.ST[U]):org.saddle.Series[X,U]", "kind" : "def"}, {"label" : "combine", "tail" : "(fn: (Vec[T]) ⇒ U)(arg0: ST[U], arg1: ORD[U]): Series[Y, U]", "member" : "org.saddle.groupby.SeriesGrouper.combine", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#combine[U](fn:org.saddle.Vec[T]=>U)(implicitevidence$8:org.saddle.ST[U],implicitevidence$9:org.saddle.ORD[U]):org.saddle.Series[Y,U]", "kind" : "def"}, {"label" : "combine", "tail" : "(fn: (Y, Vec[T]) ⇒ U)(arg0: ST[U], arg1: ORD[U]): Series[Y, U]", "member" : "org.saddle.groupby.SeriesGrouper.combine", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#combine[U](fn:(Y,org.saddle.Vec[T])=>U)(implicitevidence$6:org.saddle.ST[U],implicitevidence$7:org.saddle.ORD[U]):org.saddle.Series[Y,U]", "kind" : "def"}, {"member" : "org.saddle.groupby.SeriesGrouper#<init>", "error" : "unsupported entity"}, {"label" : "groups", "tail" : "(): Array[(Y, Array[Int])]", "member" : "org.saddle.groupby.IndexGrouper.groups", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#groups:Array[(Y,Array[Int])]", "kind" : "def"}, {"label" : "keys", "tail" : "(): Array[Y]", "member" : "org.saddle.groupby.IndexGrouper.keys", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#keys:Array[Y]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/groupby\/SeriesGrouper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/groupby\/SeriesGrouper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(series: Series[Y, T])(arg0: ST[Y], arg1: ORD[Y], arg2: ST[T]): SeriesGrouper[Y, Y, T]", "member" : "org.saddle.groupby.SeriesGrouper.apply", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#apply[Y,T](series:org.saddle.Series[Y,T])(implicitevidence$25:org.saddle.ST[Y],implicitevidence$26:org.saddle.ORD[Y],implicitevidence$27:org.saddle.ST[T]):org.saddle.groupby.SeriesGrouper[Y,Y,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(ix: Index[Y], ser: Series[X, T])(arg0: ST[Y], arg1: ORD[Y], arg2: ST[X], arg3: ORD[X], arg4: ST[T]): SeriesGrouper[Y, X, T]", "member" : "org.saddle.groupby.SeriesGrouper.apply", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#apply[Y,X,T](ix:org.saddle.Index[Y],ser:org.saddle.Series[X,T])(implicitevidence$20:org.saddle.ST[Y],implicitevidence$21:org.saddle.ORD[Y],implicitevidence$22:org.saddle.ST[X],implicitevidence$23:org.saddle.ORD[X],implicitevidence$24:org.saddle.ST[T]):org.saddle.groupby.SeriesGrouper[Y,X,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/groupby\/SeriesGrouper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/groupby\/SeriesGrouper.html", "kind" : "class"}], "org.saddle.array" : [{"name" : "org.saddle.array.PermuteInsertionSort", "shortDescription" : "An implementation of insertion sort.", "object" : "org\/saddle\/array\/PermuteInsertionSort$.html", "members_object" : [{"label" : "sort", "tail" : "(data: Array[A], start: Int, end: Int, perm: Array[Int])(o: Order[A]): Unit", "member" : "org.saddle.array.PermuteInsertionSort.sort", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#sort[A](data:Array[A],start:Int,end:Int,perm:Array[Int])(implicito:spire.algebra.Order[A]):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/array\/PermuteInsertionSort$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.array.PermuteMergeSort", "shortDescription" : "In-place merge sort implementation.", "object" : "org\/saddle\/array\/PermuteMergeSort$.html", "members_object" : [{"label" : "mergePerm", "tail" : "(data: Array[A], in: Array[Int], out: Array[Int], start: Int, mid: Int, end: Int)(o: Order[A]): Unit", "member" : "org.saddle.array.PermuteMergeSort.mergePerm", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#mergePerm[A](data:Array[A],in:Array[Int],out:Array[Int],start:Int,mid:Int,end:Int)(implicito:spire.algebra.Order[A]):Unit", "kind" : "final def"}, {"label" : "sort", "tail" : "(data: Array[A], perm: Array[Int])(arg0: Order[A], arg1: ClassTag[A]): Unit", "member" : "org.saddle.array.PermuteMergeSort.sort", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#sort[A](data:Array[A],perm:Array[Int])(implicitevidence$1:spire.algebra.Order[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "final def"}, {"label" : "startStep", "tail" : "(): Int", "member" : "org.saddle.array.PermuteMergeSort.startStep", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#startStep:Int", "kind" : "final def"}, {"label" : "startWidth", "tail" : "(): Int", "member" : "org.saddle.array.PermuteMergeSort.startWidth", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#startWidth:Int", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/array\/PermuteMergeSort$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/array\/PermuteMergeSort$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.array.Sorter", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/array\/Sorter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/array\/Sorter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/array\/Sorter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/array\/Sorter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/array\/Sorter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/array\/Sorter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/array\/Sorter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/array\/Sorter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/array\/Sorter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/array\/Sorter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/array\/Sorter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/array\/Sorter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/array\/Sorter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/array\/Sorter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/array\/Sorter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/array\/Sorter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/array\/Sorter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/array\/Sorter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/array\/Sorter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sorted", "tail" : "(arr: Array[T]): Array[T]", "member" : "org.saddle.array.Sorter.sorted", "link" : "org\/saddle\/array\/Sorter.html#sorted(arr:Array[T]):Array[T]", "kind" : "abstract def"}, {"label" : "argSorted", "tail" : "(arr: Array[T]): Array[Int]", "member" : "org.saddle.array.Sorter.argSorted", "link" : "org\/saddle\/array\/Sorter.html#argSorted(arr:Array[T]):Array[Int]", "kind" : "abstract def"}], "shortDescription" : "Typeclass interface for sorting implementations", "object" : "org\/saddle\/array\/Sorter$.html", "members_object" : [{"label" : "anySorter", "tail" : "(arg0: ORD[T]): Sorter[T]", "member" : "org.saddle.array.Sorter.anySorter", "link" : "org\/saddle\/array\/Sorter$.html#anySorter[T](implicitevidence$1:org.saddle.ORD[T]):org.saddle.array.Sorter[T]", "kind" : "def"}, {"label" : "doubleSorter", "tail" : "", "member" : "org.saddle.array.Sorter.doubleSorter", "link" : "org\/saddle\/array\/Sorter$.html#doubleSorter", "kind" : "object"}, {"label" : "longSorter", "tail" : "", "member" : "org.saddle.array.Sorter.longSorter", "link" : "org\/saddle\/array\/Sorter$.html#longSorter", "kind" : "object"}, {"label" : "floatSorter", "tail" : "", "member" : "org.saddle.array.Sorter.floatSorter", "link" : "org\/saddle\/array\/Sorter$.html#floatSorter", "kind" : "object"}, {"label" : "intSorter", "tail" : "", "member" : "org.saddle.array.Sorter.intSorter", "link" : "org\/saddle\/array\/Sorter$.html#intSorter", "kind" : "object"}, {"label" : "shortSorter", "tail" : "", "member" : "org.saddle.array.Sorter.shortSorter", "link" : "org\/saddle\/array\/Sorter$.html#shortSorter", "kind" : "object"}, {"label" : "charSorter", "tail" : "", "member" : "org.saddle.array.Sorter.charSorter", "link" : "org\/saddle\/array\/Sorter$.html#charSorter", "kind" : "object"}, {"label" : "byteSorter", "tail" : "", "member" : "org.saddle.array.Sorter.byteSorter", "link" : "org\/saddle\/array\/Sorter$.html#byteSorter", "kind" : "object"}, {"label" : "boolSorter", "tail" : "", "member" : "org.saddle.array.Sorter.boolSorter", "link" : "org\/saddle\/array\/Sorter$.html#boolSorter", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/array\/Sorter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/array\/Sorter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/array\/Sorter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/array\/Sorter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/array\/Sorter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/array\/Sorter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/array\/Sorter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/array\/Sorter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/array\/Sorter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/array\/Sorter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/array\/Sorter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/array\/Sorter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/array\/Sorter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/array\/Sorter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/array\/Sorter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/array\/Sorter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/array\/Sorter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/array\/Sorter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/array\/Sorter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/saddle\/array\/Sorter.html", "kind" : "trait"}], "org.saddle.index" : [{"name" : "org.saddle.index.IndexAny", "shortDescription" : "An implementation of org.saddle.Index generic in type T for which there is an Ordering[T]and a ST[T] available in the implicit context.", "members_class" : [{"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.index.IndexAny.equals", "link" : "org\/saddle\/index\/IndexAny.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[T]", "member" : "org.saddle.index.IndexAny.toArray", "link" : "org\/saddle\/index\/IndexAny.html#toArray:Array[T]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ B)(arg0: ST[B], arg1: ORD[B]): Index[B]", "member" : "org.saddle.index.IndexAny.map", "link" : "org\/saddle\/index\/IndexAny.html#map[B](f:T=>B)(implicitevidence$3:org.saddle.ST[B],implicitevidence$4:org.saddle.ORD[B]):org.saddle.Index[B]", "kind" : "def"}, {"label" : "rsearch", "tail" : "(t: T): Int", "member" : "org.saddle.index.IndexAny.rsearch", "link" : "org\/saddle\/index\/IndexAny.html#rsearch(t:T):Int", "kind" : "def"}, {"label" : "lsearch", "tail" : "(t: T): Int", "member" : "org.saddle.index.IndexAny.lsearch", "link" : "org\/saddle\/index\/IndexAny.html#lsearch(t:T):Int", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int, stride: Int): Index[T]", "member" : "org.saddle.index.IndexAny.slice", "link" : "org\/saddle\/index\/IndexAny.html#slice(from:Int,until:Int,stride:Int):org.saddle.Index[T]", "kind" : "def"}, {"label" : "union", "tail" : "(other: Index[T]): ReIndexer[T]", "member" : "org.saddle.index.IndexAny.union", "link" : "org\/saddle\/index\/IndexAny.html#union(other:org.saddle.Index[T]):org.saddle.index.ReIndexer[T]", "kind" : "def"}, {"label" : "intersect", "tail" : "(other: Index[T]): ReIndexer[T]", "member" : "org.saddle.index.IndexAny.intersect", "link" : "org\/saddle\/index\/IndexAny.html#intersect(other:org.saddle.Index[T]):org.saddle.index.ReIndexer[T]", "kind" : "def"}, {"label" : "join", "tail" : "(other: Index[T], how: JoinType): ReIndexer[T]", "member" : "org.saddle.index.IndexAny.join", "link" : "org\/saddle\/index\/IndexAny.html#join(other:org.saddle.Index[T],how:org.saddle.index.JoinType):org.saddle.index.ReIndexer[T]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Index[T]", "member" : "org.saddle.index.IndexAny.reversed", "link" : "org\/saddle\/index\/IndexAny.html#reversed:org.saddle.Index[T]", "kind" : "def"}, {"label" : "argSort", "tail" : "(): Array[Int]", "member" : "org.saddle.index.IndexAny.argSort", "link" : "org\/saddle\/index\/IndexAny.html#argSort:Array[Int]", "kind" : "def"}, {"label" : "isContiguous", "tail" : "(): Boolean", "member" : "org.saddle.index.IndexAny.isContiguous", "link" : "org\/saddle\/index\/IndexAny.html#isContiguous:Boolean", "kind" : "def"}, {"label" : "isMonotonic", "tail" : "(): Boolean", "member" : "org.saddle.index.IndexAny.isMonotonic", "link" : "org\/saddle\/index\/IndexAny.html#isMonotonic:Boolean", "kind" : "def"}, {"label" : "concat", "tail" : "(x: Index[T]): Index[T]", "member" : "org.saddle.index.IndexAny.concat", "link" : "org\/saddle\/index\/IndexAny.html#concat(x:org.saddle.Index[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "without", "tail" : "(locs: Array[Int]): Index[T]", "member" : "org.saddle.index.IndexAny.without", "link" : "org\/saddle\/index\/IndexAny.html#without(locs:Array[Int]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "take", "tail" : "(locs: Array[Int]): Index[T]", "member" : "org.saddle.index.IndexAny.take", "link" : "org\/saddle\/index\/IndexAny.html#take(locs:Array[Int]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "raw", "tail" : "(idx: Int): T", "member" : "org.saddle.index.IndexAny.raw", "link" : "org\/saddle\/index\/IndexAny.html#raw(idx:Int):T", "kind" : "def"}, {"label" : "toVec", "tail" : "(): Vec[T]", "member" : "org.saddle.index.IndexAny.toVec", "link" : "org\/saddle\/index\/IndexAny.html#toVec:org.saddle.Vec[T]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "org.saddle.index.IndexAny.length", "link" : "org\/saddle\/index\/IndexAny.html#length:Int", "kind" : "def"}, {"label" : "locator", "tail" : "(): Locator[T]", "member" : "org.saddle.index.IndexAny.locator", "link" : "org\/saddle\/index\/IndexAny.html#locator:org.saddle.locator.Locator[T]", "kind" : "def"}, {"label" : "scalarTag", "tail" : ": ScalarTag[T]", "member" : "org.saddle.index.IndexAny.scalarTag", "link" : "org\/saddle\/index\/IndexAny.html#scalarTag:org.saddle.scalar.ScalarTag[T]", "kind" : "val"}, {"member" : "org.saddle.index.IndexAny#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.Index.toString", "link" : "org\/saddle\/index\/IndexAny.html#toString():String", "kind" : "def"}, {"label" : "print", "tail" : "(len: Int, stream: OutputStream): Unit", "member" : "org.saddle.Index.print", "link" : "org\/saddle\/index\/IndexAny.html#print(len:Int,stream:java.io.OutputStream):Unit", "kind" : "def"}, {"label" : "stringify", "tail" : "(len: Int): String", "member" : "org.saddle.Index.stringify", "link" : "org\/saddle\/index\/IndexAny.html#stringify(len:Int):String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.Index.hashCode", "link" : "org\/saddle\/index\/IndexAny.html#hashCode():Int", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): IndexedSeq[T]", "member" : "org.saddle.Index.toSeq", "link" : "org\/saddle\/index\/IndexAny.html#toSeq:IndexedSeq[T]", "kind" : "def"}, {"label" : "next", "tail" : "(current: Scalar[T]): Scalar[T]", "member" : "org.saddle.Index.next", "link" : "org\/saddle\/index\/IndexAny.html#next(current:org.saddle.scalar.Scalar[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "prev", "tail" : "(current: Scalar[T]): Scalar[T]", "member" : "org.saddle.Index.prev", "link" : "org\/saddle\/index\/IndexAny.html#prev(current:org.saddle.scalar.Scalar[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: T): Boolean", "member" : "org.saddle.Index.contains", "link" : "org\/saddle\/index\/IndexAny.html#contains(key:T):Boolean", "kind" : "def"}, {"label" : "getIndexer", "tail" : "(other: Index[T]): Option[Array[Int]]", "member" : "org.saddle.Index.getIndexer", "link" : "org\/saddle\/index\/IndexAny.html#getIndexer(other:org.saddle.Index[T]):Option[Array[Int]]", "kind" : "def"}, {"label" : "split", "tail" : "(ev: Splitter[T, O1, O2]): (Index[O1], Index[O2])", "member" : "org.saddle.Index.split", "link" : "org\/saddle\/index\/IndexAny.html#split[O1,O2](implicitev:org.saddle.index.Splitter[T,O1,O2]):(org.saddle.Index[O1],org.saddle.Index[O2])", "kind" : "def"}, {"label" : "stack", "tail" : "(other: Index[U])(ev: Stacker[T, U, V]): Index[V]", "member" : "org.saddle.Index.stack", "link" : "org\/saddle\/index\/IndexAny.html#stack[U,V](other:org.saddle.Index[U])(implicitev:org.saddle.index.Stacker[T,U,V]):org.saddle.Index[V]", "kind" : "def"}, {"label" : "dropLevel", "tail" : "(ev: Splitter[T, U, _]): Index[U]", "member" : "org.saddle.Index.dropLevel", "link" : "org\/saddle\/index\/IndexAny.html#dropLevel[U,_](implicitev:org.saddle.index.Splitter[T,U,_]):org.saddle.Index[U]", "kind" : "def"}, {"label" : "exists", "tail" : "(pred: (T) ⇒ Boolean): Boolean", "member" : "org.saddle.Index.exists", "link" : "org\/saddle\/index\/IndexAny.html#exists(pred:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "findOne", "tail" : "(pred: (T) ⇒ Boolean): Int", "member" : "org.saddle.Index.findOne", "link" : "org\/saddle\/index\/IndexAny.html#findOne(pred:T=>Boolean):Int", "kind" : "def"}, {"label" : "sorted", "tail" : "(): Index[T]", "member" : "org.saddle.Index.sorted", "link" : "org\/saddle\/index\/IndexAny.html#sorted:org.saddle.Index[T]", "kind" : "def"}, {"label" : "last", "tail" : "(): Scalar[T]", "member" : "org.saddle.Index.last", "link" : "org\/saddle\/index\/IndexAny.html#last:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "first", "tail" : "(): Scalar[T]", "member" : "org.saddle.Index.first", "link" : "org\/saddle\/index\/IndexAny.html#first:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "tail", "tail" : "(n: Int): Index[T]", "member" : "org.saddle.Index.tail", "link" : "org\/saddle\/index\/IndexAny.html#tail(n:Int):org.saddle.Index[T]", "kind" : "def"}, {"label" : "head", "tail" : "(n: Int): Index[T]", "member" : "org.saddle.Index.head", "link" : "org\/saddle\/index\/IndexAny.html#head(n:Int):org.saddle.Index[T]", "kind" : "def"}, {"label" : "get", "tail" : "(key: T): Array[Int]", "member" : "org.saddle.Index.get", "link" : "org\/saddle\/index\/IndexAny.html#get(key:T):Array[Int]", "kind" : "def"}, {"label" : "getLast", "tail" : "(key: T): Int", "member" : "org.saddle.Index.getLast", "link" : "org\/saddle\/index\/IndexAny.html#getLast(key:T):Int", "kind" : "def"}, {"label" : "getFirst", "tail" : "(key: T): Int", "member" : "org.saddle.Index.getFirst", "link" : "org\/saddle\/index\/IndexAny.html#getFirst(key:T):Int", "kind" : "def"}, {"label" : "count", "tail" : "(key: T): Int", "member" : "org.saddle.Index.count", "link" : "org\/saddle\/index\/IndexAny.html#count(key:T):Int", "kind" : "def"}, {"label" : "counts", "tail" : "(): Array[Int]", "member" : "org.saddle.Index.counts", "link" : "org\/saddle\/index\/IndexAny.html#counts:Array[Int]", "kind" : "def"}, {"label" : "uniques", "tail" : "(ord: ORD[T], tag: ST[T]): Index[T]", "member" : "org.saddle.Index.uniques", "link" : "org\/saddle\/index\/IndexAny.html#uniques(implicitord:org.saddle.ORD[T],implicittag:org.saddle.ST[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "isUnique", "tail" : "(): Boolean", "member" : "org.saddle.Index.isUnique", "link" : "org\/saddle\/index\/IndexAny.html#isUnique:Boolean", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(rng: Slice[T]): Index[T]", "member" : "org.saddle.Index.sliceBy", "link" : "org\/saddle\/index\/IndexAny.html#sliceBy(rng:org.saddle.index.Slice[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(from: T, to: T, inclusive: Boolean): Index[T]", "member" : "org.saddle.Index.sliceBy", "link" : "org\/saddle\/index\/IndexAny.html#sliceBy(from:T,to:T,inclusive:Boolean):org.saddle.Index[T]", "kind" : "def"}, {"label" : "distinct", "tail" : "(st: ST[T], ord: ORD[T]): Index[T]", "member" : "org.saddle.Index.distinct", "link" : "org\/saddle\/index\/IndexAny.html#distinct(implicitst:org.saddle.ST[T],implicitord:org.saddle.ORD[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: Array[T]): Array[Int]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/index\/IndexAny.html#apply(keys:Array[T]):Array[Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: T*): Array[Int]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/index\/IndexAny.html#apply(keys:T*):Array[Int]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Int*): Index[T]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexAny.html#at(locs:Int*):org.saddle.Index[T]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Array[Int]): Index[T]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexAny.html#at(locs:Array[Int]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "at", "tail" : "(loc: Int): Scalar[T]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexAny.html#at(loc:Int):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Index.nonEmpty", "link" : "org\/saddle\/index\/IndexAny.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Index.isEmpty", "link" : "org\/saddle\/index\/IndexAny.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/IndexAny.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/IndexAny.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/IndexAny.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/IndexAny.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/IndexAny.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/IndexAny.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/IndexAny.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexAny.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexAny.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexAny.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/IndexAny.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/IndexAny.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/IndexAny.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/IndexAny.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/IndexAny.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/IndexAny.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/index\/IndexAny.html", "kind" : "class"}, {"name" : "org.saddle.index.IndexDouble", "shortDescription" : "Index with double keys", "members_class" : [{"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.index.IndexDouble.equals", "link" : "org\/saddle\/index\/IndexDouble.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[Double]", "member" : "org.saddle.index.IndexDouble.toArray", "link" : "org\/saddle\/index\/IndexDouble.html#toArray:Array[Double]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Double) ⇒ B)(arg0: ST[B], arg1: ORD[B]): Index[B]", "member" : "org.saddle.index.IndexDouble.map", "link" : "org\/saddle\/index\/IndexDouble.html#map[B](f:Double=>B)(implicitevidence$1:org.saddle.ST[B],implicitevidence$2:org.saddle.ORD[B]):org.saddle.Index[B]", "kind" : "def"}, {"label" : "rsearch", "tail" : "(t: Double): Int", "member" : "org.saddle.index.IndexDouble.rsearch", "link" : "org\/saddle\/index\/IndexDouble.html#rsearch(t:Double):Int", "kind" : "def"}, {"label" : "lsearch", "tail" : "(t: Double): Int", "member" : "org.saddle.index.IndexDouble.lsearch", "link" : "org\/saddle\/index\/IndexDouble.html#lsearch(t:Double):Int", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int, stride: Int): Index[Double]", "member" : "org.saddle.index.IndexDouble.slice", "link" : "org\/saddle\/index\/IndexDouble.html#slice(from:Int,until:Int,stride:Int):org.saddle.Index[Double]", "kind" : "def"}, {"label" : "union", "tail" : "(other: Index[Double]): ReIndexer[Double]", "member" : "org.saddle.index.IndexDouble.union", "link" : "org\/saddle\/index\/IndexDouble.html#union(other:org.saddle.Index[Double]):org.saddle.index.ReIndexer[Double]", "kind" : "def"}, {"label" : "intersect", "tail" : "(other: Index[Double]): ReIndexer[Double]", "member" : "org.saddle.index.IndexDouble.intersect", "link" : "org\/saddle\/index\/IndexDouble.html#intersect(other:org.saddle.Index[Double]):org.saddle.index.ReIndexer[Double]", "kind" : "def"}, {"label" : "join", "tail" : "(other: Index[Double], how: JoinType): ReIndexer[Double]", "member" : "org.saddle.index.IndexDouble.join", "link" : "org\/saddle\/index\/IndexDouble.html#join(other:org.saddle.Index[Double],how:org.saddle.index.JoinType):org.saddle.index.ReIndexer[Double]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Index[Double]", "member" : "org.saddle.index.IndexDouble.reversed", "link" : "org\/saddle\/index\/IndexDouble.html#reversed:org.saddle.Index[Double]", "kind" : "def"}, {"label" : "argSort", "tail" : "(): Array[Int]", "member" : "org.saddle.index.IndexDouble.argSort", "link" : "org\/saddle\/index\/IndexDouble.html#argSort:Array[Int]", "kind" : "def"}, {"label" : "isContiguous", "tail" : "(): Boolean", "member" : "org.saddle.index.IndexDouble.isContiguous", "link" : "org\/saddle\/index\/IndexDouble.html#isContiguous:Boolean", "kind" : "def"}, {"label" : "isMonotonic", "tail" : "(): Boolean", "member" : "org.saddle.index.IndexDouble.isMonotonic", "link" : "org\/saddle\/index\/IndexDouble.html#isMonotonic:Boolean", "kind" : "def"}, {"label" : "concat", "tail" : "(x: Index[Double]): Index[Double]", "member" : "org.saddle.index.IndexDouble.concat", "link" : "org\/saddle\/index\/IndexDouble.html#concat(x:org.saddle.Index[Double]):org.saddle.Index[Double]", "kind" : "def"}, {"label" : "without", "tail" : "(locs: Array[Int]): Index[Double]", "member" : "org.saddle.index.IndexDouble.without", "link" : "org\/saddle\/index\/IndexDouble.html#without(locs:Array[Int]):org.saddle.Index[Double]", "kind" : "def"}, {"label" : "take", "tail" : "(locs: Array[Int]): Index[Double]", "member" : "org.saddle.index.IndexDouble.take", "link" : "org\/saddle\/index\/IndexDouble.html#take(locs:Array[Int]):org.saddle.Index[Double]", "kind" : "def"}, {"label" : "raw", "tail" : "(idx: Int): Double", "member" : "org.saddle.index.IndexDouble.raw", "link" : "org\/saddle\/index\/IndexDouble.html#raw(idx:Int):Double", "kind" : "def"}, {"label" : "toVec", "tail" : "(): Vec[Double]", "member" : "org.saddle.index.IndexDouble.toVec", "link" : "org\/saddle\/index\/IndexDouble.html#toVec:org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "org.saddle.index.IndexDouble.length", "link" : "org\/saddle\/index\/IndexDouble.html#length:Int", "kind" : "def"}, {"label" : "locator", "tail" : "(): Locator[Double]", "member" : "org.saddle.index.IndexDouble.locator", "link" : "org\/saddle\/index\/IndexDouble.html#locator:org.saddle.locator.Locator[Double]", "kind" : "def"}, {"label" : "scalarTag", "tail" : ": ScalarTagDouble.type", "member" : "org.saddle.index.IndexDouble.scalarTag", "link" : "org\/saddle\/index\/IndexDouble.html#scalarTag:org.saddle.scalar.ScalarTagDouble.type", "kind" : "val"}, {"member" : "org.saddle.index.IndexDouble#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.Index.toString", "link" : "org\/saddle\/index\/IndexDouble.html#toString():String", "kind" : "def"}, {"label" : "print", "tail" : "(len: Int, stream: OutputStream): Unit", "member" : "org.saddle.Index.print", "link" : "org\/saddle\/index\/IndexDouble.html#print(len:Int,stream:java.io.OutputStream):Unit", "kind" : "def"}, {"label" : "stringify", "tail" : "(len: Int): String", "member" : "org.saddle.Index.stringify", "link" : "org\/saddle\/index\/IndexDouble.html#stringify(len:Int):String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.Index.hashCode", "link" : "org\/saddle\/index\/IndexDouble.html#hashCode():Int", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): IndexedSeq[Double]", "member" : "org.saddle.Index.toSeq", "link" : "org\/saddle\/index\/IndexDouble.html#toSeq:IndexedSeq[T]", "kind" : "def"}, {"label" : "next", "tail" : "(current: Scalar[Double]): Scalar[Double]", "member" : "org.saddle.Index.next", "link" : "org\/saddle\/index\/IndexDouble.html#next(current:org.saddle.scalar.Scalar[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "prev", "tail" : "(current: Scalar[Double]): Scalar[Double]", "member" : "org.saddle.Index.prev", "link" : "org\/saddle\/index\/IndexDouble.html#prev(current:org.saddle.scalar.Scalar[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Double): Boolean", "member" : "org.saddle.Index.contains", "link" : "org\/saddle\/index\/IndexDouble.html#contains(key:T):Boolean", "kind" : "def"}, {"label" : "getIndexer", "tail" : "(other: Index[Double]): Option[Array[Int]]", "member" : "org.saddle.Index.getIndexer", "link" : "org\/saddle\/index\/IndexDouble.html#getIndexer(other:org.saddle.Index[T]):Option[Array[Int]]", "kind" : "def"}, {"label" : "split", "tail" : "(ev: Splitter[Double, O1, O2]): (Index[O1], Index[O2])", "member" : "org.saddle.Index.split", "link" : "org\/saddle\/index\/IndexDouble.html#split[O1,O2](implicitev:org.saddle.index.Splitter[T,O1,O2]):(org.saddle.Index[O1],org.saddle.Index[O2])", "kind" : "def"}, {"label" : "stack", "tail" : "(other: Index[U])(ev: Stacker[Double, U, V]): Index[V]", "member" : "org.saddle.Index.stack", "link" : "org\/saddle\/index\/IndexDouble.html#stack[U,V](other:org.saddle.Index[U])(implicitev:org.saddle.index.Stacker[T,U,V]):org.saddle.Index[V]", "kind" : "def"}, {"label" : "dropLevel", "tail" : "(ev: Splitter[Double, U, _]): Index[U]", "member" : "org.saddle.Index.dropLevel", "link" : "org\/saddle\/index\/IndexDouble.html#dropLevel[U,_](implicitev:org.saddle.index.Splitter[T,U,_]):org.saddle.Index[U]", "kind" : "def"}, {"label" : "exists", "tail" : "(pred: (Double) ⇒ Boolean): Boolean", "member" : "org.saddle.Index.exists", "link" : "org\/saddle\/index\/IndexDouble.html#exists(pred:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "findOne", "tail" : "(pred: (Double) ⇒ Boolean): Int", "member" : "org.saddle.Index.findOne", "link" : "org\/saddle\/index\/IndexDouble.html#findOne(pred:T=>Boolean):Int", "kind" : "def"}, {"label" : "sorted", "tail" : "(): Index[Double]", "member" : "org.saddle.Index.sorted", "link" : "org\/saddle\/index\/IndexDouble.html#sorted:org.saddle.Index[T]", "kind" : "def"}, {"label" : "last", "tail" : "(): Scalar[Double]", "member" : "org.saddle.Index.last", "link" : "org\/saddle\/index\/IndexDouble.html#last:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "first", "tail" : "(): Scalar[Double]", "member" : "org.saddle.Index.first", "link" : "org\/saddle\/index\/IndexDouble.html#first:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "tail", "tail" : "(n: Int): Index[Double]", "member" : "org.saddle.Index.tail", "link" : "org\/saddle\/index\/IndexDouble.html#tail(n:Int):org.saddle.Index[T]", "kind" : "def"}, {"label" : "head", "tail" : "(n: Int): Index[Double]", "member" : "org.saddle.Index.head", "link" : "org\/saddle\/index\/IndexDouble.html#head(n:Int):org.saddle.Index[T]", "kind" : "def"}, {"label" : "get", "tail" : "(key: Double): Array[Int]", "member" : "org.saddle.Index.get", "link" : "org\/saddle\/index\/IndexDouble.html#get(key:T):Array[Int]", "kind" : "def"}, {"label" : "getLast", "tail" : "(key: Double): Int", "member" : "org.saddle.Index.getLast", "link" : "org\/saddle\/index\/IndexDouble.html#getLast(key:T):Int", "kind" : "def"}, {"label" : "getFirst", "tail" : "(key: Double): Int", "member" : "org.saddle.Index.getFirst", "link" : "org\/saddle\/index\/IndexDouble.html#getFirst(key:T):Int", "kind" : "def"}, {"label" : "count", "tail" : "(key: Double): Int", "member" : "org.saddle.Index.count", "link" : "org\/saddle\/index\/IndexDouble.html#count(key:T):Int", "kind" : "def"}, {"label" : "counts", "tail" : "(): Array[Int]", "member" : "org.saddle.Index.counts", "link" : "org\/saddle\/index\/IndexDouble.html#counts:Array[Int]", "kind" : "def"}, {"label" : "uniques", "tail" : "(ord: ORD[Double], tag: ST[Double]): Index[Double]", "member" : "org.saddle.Index.uniques", "link" : "org\/saddle\/index\/IndexDouble.html#uniques(implicitord:org.saddle.ORD[T],implicittag:org.saddle.ST[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "isUnique", "tail" : "(): Boolean", "member" : "org.saddle.Index.isUnique", "link" : "org\/saddle\/index\/IndexDouble.html#isUnique:Boolean", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(rng: Slice[Double]): Index[Double]", "member" : "org.saddle.Index.sliceBy", "link" : "org\/saddle\/index\/IndexDouble.html#sliceBy(rng:org.saddle.index.Slice[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(from: Double, to: Double, inclusive: Boolean): Index[Double]", "member" : "org.saddle.Index.sliceBy", "link" : "org\/saddle\/index\/IndexDouble.html#sliceBy(from:T,to:T,inclusive:Boolean):org.saddle.Index[T]", "kind" : "def"}, {"label" : "distinct", "tail" : "(st: ST[Double], ord: ORD[Double]): Index[Double]", "member" : "org.saddle.Index.distinct", "link" : "org\/saddle\/index\/IndexDouble.html#distinct(implicitst:org.saddle.ST[T],implicitord:org.saddle.ORD[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: Array[Double]): Array[Int]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/index\/IndexDouble.html#apply(keys:Array[T]):Array[Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: Double*): Array[Int]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/index\/IndexDouble.html#apply(keys:T*):Array[Int]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Int*): Index[Double]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexDouble.html#at(locs:Int*):org.saddle.Index[T]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Array[Int]): Index[Double]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexDouble.html#at(locs:Array[Int]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "at", "tail" : "(loc: Int): Scalar[Double]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexDouble.html#at(loc:Int):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Index.nonEmpty", "link" : "org\/saddle\/index\/IndexDouble.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Index.isEmpty", "link" : "org\/saddle\/index\/IndexDouble.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/IndexDouble.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/IndexDouble.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/IndexDouble.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/IndexDouble.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/IndexDouble.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/IndexDouble.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/IndexDouble.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexDouble.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexDouble.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexDouble.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/IndexDouble.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/IndexDouble.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/IndexDouble.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/IndexDouble.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/IndexDouble.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/IndexDouble.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/index\/IndexDouble.html", "kind" : "class"}, {"name" : "org.saddle.index.IndexInt", "shortDescription" : "Index with integer keys", "members_class" : [{"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.index.IndexInt.equals", "link" : "org\/saddle\/index\/IndexInt.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[Int]", "member" : "org.saddle.index.IndexInt.toArray", "link" : "org\/saddle\/index\/IndexInt.html#toArray:Array[Int]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Int) ⇒ B)(arg0: ST[B], arg1: ORD[B]): Index[B]", "member" : "org.saddle.index.IndexInt.map", "link" : "org\/saddle\/index\/IndexInt.html#map[B](f:Int=>B)(implicitevidence$1:org.saddle.ST[B],implicitevidence$2:org.saddle.ORD[B]):org.saddle.Index[B]", "kind" : "def"}, {"label" : "rsearch", "tail" : "(t: Int): Int", "member" : "org.saddle.index.IndexInt.rsearch", "link" : "org\/saddle\/index\/IndexInt.html#rsearch(t:Int):Int", "kind" : "def"}, {"label" : "lsearch", "tail" : "(t: Int): Int", "member" : "org.saddle.index.IndexInt.lsearch", "link" : "org\/saddle\/index\/IndexInt.html#lsearch(t:Int):Int", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int, stride: Int): Index[Int]", "member" : "org.saddle.index.IndexInt.slice", "link" : "org\/saddle\/index\/IndexInt.html#slice(from:Int,until:Int,stride:Int):org.saddle.Index[Int]", "kind" : "def"}, {"label" : "union", "tail" : "(other: Index[Int]): ReIndexer[Int]", "member" : "org.saddle.index.IndexInt.union", "link" : "org\/saddle\/index\/IndexInt.html#union(other:org.saddle.Index[Int]):org.saddle.index.ReIndexer[Int]", "kind" : "def"}, {"label" : "intersect", "tail" : "(other: Index[Int]): ReIndexer[Int]", "member" : "org.saddle.index.IndexInt.intersect", "link" : "org\/saddle\/index\/IndexInt.html#intersect(other:org.saddle.Index[Int]):org.saddle.index.ReIndexer[Int]", "kind" : "def"}, {"label" : "join", "tail" : "(other: Index[Int], how: JoinType): ReIndexer[Int]", "member" : "org.saddle.index.IndexInt.join", "link" : "org\/saddle\/index\/IndexInt.html#join(other:org.saddle.Index[Int],how:org.saddle.index.JoinType):org.saddle.index.ReIndexer[Int]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Index[Int]", "member" : "org.saddle.index.IndexInt.reversed", "link" : "org\/saddle\/index\/IndexInt.html#reversed:org.saddle.Index[Int]", "kind" : "def"}, {"label" : "argSort", "tail" : "(): Array[Int]", "member" : "org.saddle.index.IndexInt.argSort", "link" : "org\/saddle\/index\/IndexInt.html#argSort:Array[Int]", "kind" : "def"}, {"label" : "isContiguous", "tail" : "(): Boolean", "member" : "org.saddle.index.IndexInt.isContiguous", "link" : "org\/saddle\/index\/IndexInt.html#isContiguous:Boolean", "kind" : "def"}, {"label" : "isMonotonic", "tail" : "(): Boolean", "member" : "org.saddle.index.IndexInt.isMonotonic", "link" : "org\/saddle\/index\/IndexInt.html#isMonotonic:Boolean", "kind" : "def"}, {"label" : "concat", "tail" : "(x: Index[Int]): Index[Int]", "member" : "org.saddle.index.IndexInt.concat", "link" : "org\/saddle\/index\/IndexInt.html#concat(x:org.saddle.Index[Int]):org.saddle.Index[Int]", "kind" : "def"}, {"label" : "without", "tail" : "(locs: Array[Int]): Index[Int]", "member" : "org.saddle.index.IndexInt.without", "link" : "org\/saddle\/index\/IndexInt.html#without(locs:Array[Int]):org.saddle.Index[Int]", "kind" : "def"}, {"label" : "take", "tail" : "(locs: Array[Int]): Index[Int]", "member" : "org.saddle.index.IndexInt.take", "link" : "org\/saddle\/index\/IndexInt.html#take(locs:Array[Int]):org.saddle.Index[Int]", "kind" : "def"}, {"label" : "raw", "tail" : "(idx: Int): Int", "member" : "org.saddle.index.IndexInt.raw", "link" : "org\/saddle\/index\/IndexInt.html#raw(idx:Int):Int", "kind" : "def"}, {"label" : "toVec", "tail" : "(): Vec[Int]", "member" : "org.saddle.index.IndexInt.toVec", "link" : "org\/saddle\/index\/IndexInt.html#toVec:org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "org.saddle.index.IndexInt.length", "link" : "org\/saddle\/index\/IndexInt.html#length:Int", "kind" : "def"}, {"label" : "locator", "tail" : "(): Locator[Int]", "member" : "org.saddle.index.IndexInt.locator", "link" : "org\/saddle\/index\/IndexInt.html#locator:org.saddle.locator.Locator[Int]", "kind" : "def"}, {"label" : "scalarTag", "tail" : ": ScalarTagInt.type", "member" : "org.saddle.index.IndexInt.scalarTag", "link" : "org\/saddle\/index\/IndexInt.html#scalarTag:org.saddle.scalar.ScalarTagInt.type", "kind" : "val"}, {"member" : "org.saddle.index.IndexInt#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.Index.toString", "link" : "org\/saddle\/index\/IndexInt.html#toString():String", "kind" : "def"}, {"label" : "print", "tail" : "(len: Int, stream: OutputStream): Unit", "member" : "org.saddle.Index.print", "link" : "org\/saddle\/index\/IndexInt.html#print(len:Int,stream:java.io.OutputStream):Unit", "kind" : "def"}, {"label" : "stringify", "tail" : "(len: Int): String", "member" : "org.saddle.Index.stringify", "link" : "org\/saddle\/index\/IndexInt.html#stringify(len:Int):String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.Index.hashCode", "link" : "org\/saddle\/index\/IndexInt.html#hashCode():Int", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): IndexedSeq[Int]", "member" : "org.saddle.Index.toSeq", "link" : "org\/saddle\/index\/IndexInt.html#toSeq:IndexedSeq[T]", "kind" : "def"}, {"label" : "next", "tail" : "(current: Scalar[Int]): Scalar[Int]", "member" : "org.saddle.Index.next", "link" : "org\/saddle\/index\/IndexInt.html#next(current:org.saddle.scalar.Scalar[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "prev", "tail" : "(current: Scalar[Int]): Scalar[Int]", "member" : "org.saddle.Index.prev", "link" : "org\/saddle\/index\/IndexInt.html#prev(current:org.saddle.scalar.Scalar[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Int): Boolean", "member" : "org.saddle.Index.contains", "link" : "org\/saddle\/index\/IndexInt.html#contains(key:T):Boolean", "kind" : "def"}, {"label" : "getIndexer", "tail" : "(other: Index[Int]): Option[Array[Int]]", "member" : "org.saddle.Index.getIndexer", "link" : "org\/saddle\/index\/IndexInt.html#getIndexer(other:org.saddle.Index[T]):Option[Array[Int]]", "kind" : "def"}, {"label" : "split", "tail" : "(ev: Splitter[Int, O1, O2]): (Index[O1], Index[O2])", "member" : "org.saddle.Index.split", "link" : "org\/saddle\/index\/IndexInt.html#split[O1,O2](implicitev:org.saddle.index.Splitter[T,O1,O2]):(org.saddle.Index[O1],org.saddle.Index[O2])", "kind" : "def"}, {"label" : "stack", "tail" : "(other: Index[U])(ev: Stacker[Int, U, V]): Index[V]", "member" : "org.saddle.Index.stack", "link" : "org\/saddle\/index\/IndexInt.html#stack[U,V](other:org.saddle.Index[U])(implicitev:org.saddle.index.Stacker[T,U,V]):org.saddle.Index[V]", "kind" : "def"}, {"label" : "dropLevel", "tail" : "(ev: Splitter[Int, U, _]): Index[U]", "member" : "org.saddle.Index.dropLevel", "link" : "org\/saddle\/index\/IndexInt.html#dropLevel[U,_](implicitev:org.saddle.index.Splitter[T,U,_]):org.saddle.Index[U]", "kind" : "def"}, {"label" : "exists", "tail" : "(pred: (Int) ⇒ Boolean): Boolean", "member" : "org.saddle.Index.exists", "link" : "org\/saddle\/index\/IndexInt.html#exists(pred:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "findOne", "tail" : "(pred: (Int) ⇒ Boolean): Int", "member" : "org.saddle.Index.findOne", "link" : "org\/saddle\/index\/IndexInt.html#findOne(pred:T=>Boolean):Int", "kind" : "def"}, {"label" : "sorted", "tail" : "(): Index[Int]", "member" : "org.saddle.Index.sorted", "link" : "org\/saddle\/index\/IndexInt.html#sorted:org.saddle.Index[T]", "kind" : "def"}, {"label" : "last", "tail" : "(): Scalar[Int]", "member" : "org.saddle.Index.last", "link" : "org\/saddle\/index\/IndexInt.html#last:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "first", "tail" : "(): Scalar[Int]", "member" : "org.saddle.Index.first", "link" : "org\/saddle\/index\/IndexInt.html#first:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "tail", "tail" : "(n: Int): Index[Int]", "member" : "org.saddle.Index.tail", "link" : "org\/saddle\/index\/IndexInt.html#tail(n:Int):org.saddle.Index[T]", "kind" : "def"}, {"label" : "head", "tail" : "(n: Int): Index[Int]", "member" : "org.saddle.Index.head", "link" : "org\/saddle\/index\/IndexInt.html#head(n:Int):org.saddle.Index[T]", "kind" : "def"}, {"label" : "get", "tail" : "(key: Int): Array[Int]", "member" : "org.saddle.Index.get", "link" : "org\/saddle\/index\/IndexInt.html#get(key:T):Array[Int]", "kind" : "def"}, {"label" : "getLast", "tail" : "(key: Int): Int", "member" : "org.saddle.Index.getLast", "link" : "org\/saddle\/index\/IndexInt.html#getLast(key:T):Int", "kind" : "def"}, {"label" : "getFirst", "tail" : "(key: Int): Int", "member" : "org.saddle.Index.getFirst", "link" : "org\/saddle\/index\/IndexInt.html#getFirst(key:T):Int", "kind" : "def"}, {"label" : "count", "tail" : "(key: Int): Int", "member" : "org.saddle.Index.count", "link" : "org\/saddle\/index\/IndexInt.html#count(key:T):Int", "kind" : "def"}, {"label" : "counts", "tail" : "(): Array[Int]", "member" : "org.saddle.Index.counts", "link" : "org\/saddle\/index\/IndexInt.html#counts:Array[Int]", "kind" : "def"}, {"label" : "uniques", "tail" : "(ord: ORD[Int], tag: ST[Int]): Index[Int]", "member" : "org.saddle.Index.uniques", "link" : "org\/saddle\/index\/IndexInt.html#uniques(implicitord:org.saddle.ORD[T],implicittag:org.saddle.ST[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "isUnique", "tail" : "(): Boolean", "member" : "org.saddle.Index.isUnique", "link" : "org\/saddle\/index\/IndexInt.html#isUnique:Boolean", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(rng: Slice[Int]): Index[Int]", "member" : "org.saddle.Index.sliceBy", "link" : "org\/saddle\/index\/IndexInt.html#sliceBy(rng:org.saddle.index.Slice[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(from: Int, to: Int, inclusive: Boolean): Index[Int]", "member" : "org.saddle.Index.sliceBy", "link" : "org\/saddle\/index\/IndexInt.html#sliceBy(from:T,to:T,inclusive:Boolean):org.saddle.Index[T]", "kind" : "def"}, {"label" : "distinct", "tail" : "(st: ST[Int], ord: ORD[Int]): Index[Int]", "member" : "org.saddle.Index.distinct", "link" : "org\/saddle\/index\/IndexInt.html#distinct(implicitst:org.saddle.ST[T],implicitord:org.saddle.ORD[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: Array[Int]): Array[Int]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/index\/IndexInt.html#apply(keys:Array[T]):Array[Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: Int*): Array[Int]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/index\/IndexInt.html#apply(keys:T*):Array[Int]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Int*): Index[Int]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexInt.html#at(locs:Int*):org.saddle.Index[T]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Array[Int]): Index[Int]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexInt.html#at(locs:Array[Int]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "at", "tail" : "(loc: Int): Scalar[Int]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexInt.html#at(loc:Int):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Index.nonEmpty", "link" : "org\/saddle\/index\/IndexInt.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Index.isEmpty", "link" : "org\/saddle\/index\/IndexInt.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/IndexInt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/IndexInt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/IndexInt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/IndexInt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/IndexInt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/IndexInt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/IndexInt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexInt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexInt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexInt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/IndexInt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/IndexInt.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/IndexInt.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/IndexInt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/IndexInt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/IndexInt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/index\/IndexInt.html", "kind" : "class"}, {"name" : "org.saddle.index.IndexIntRange", "shortDescription" : "An implementation of an Index[Int] which implicitly represents a bound of integers,which lazily generates its elements as an array when needed.", "object" : "org\/saddle\/index\/IndexIntRange$.html", "members_class" : [{"label" : "map", "tail" : "(f: (Int) ⇒ B)(arg0: ST[B], arg1: ORD[B]): Index[B]", "member" : "org.saddle.index.IndexIntRange.map", "link" : "org\/saddle\/index\/IndexIntRange.html#map[B](f:Int=>B)(implicitevidence$1:org.saddle.ST[B],implicitevidence$2:org.saddle.ORD[B]):org.saddle.Index[B]", "kind" : "def"}, {"label" : "join", "tail" : "(other: Index[Int], how: JoinType): ReIndexer[Int]", "member" : "org.saddle.index.IndexIntRange.join", "link" : "org\/saddle\/index\/IndexIntRange.html#join(other:org.saddle.Index[Int],how:org.saddle.index.JoinType):org.saddle.index.ReIndexer[Int]", "kind" : "def"}, {"label" : "union", "tail" : "(other: Index[Int]): ReIndexer[Int]", "member" : "org.saddle.index.IndexIntRange.union", "link" : "org\/saddle\/index\/IndexIntRange.html#union(other:org.saddle.Index[Int]):org.saddle.index.ReIndexer[Int]", "kind" : "def"}, {"label" : "intersect", "tail" : "(other: Index[Int]): ReIndexer[Int]", "member" : "org.saddle.index.IndexIntRange.intersect", "link" : "org\/saddle\/index\/IndexIntRange.html#intersect(other:org.saddle.Index[Int]):org.saddle.index.ReIndexer[Int]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Index[Int]", "member" : "org.saddle.index.IndexIntRange.reversed", "link" : "org\/saddle\/index\/IndexIntRange.html#reversed:org.saddle.Index[Int]", "kind" : "def"}, {"label" : "argSort", "tail" : "(): Array[Int]", "member" : "org.saddle.index.IndexIntRange.argSort", "link" : "org\/saddle\/index\/IndexIntRange.html#argSort:Array[Int]", "kind" : "def"}, {"label" : "isContiguous", "tail" : "(): Boolean", "member" : "org.saddle.index.IndexIntRange.isContiguous", "link" : "org\/saddle\/index\/IndexIntRange.html#isContiguous:Boolean", "kind" : "def"}, {"label" : "isMonotonic", "tail" : "(): Boolean", "member" : "org.saddle.index.IndexIntRange.isMonotonic", "link" : "org\/saddle\/index\/IndexIntRange.html#isMonotonic:Boolean", "kind" : "def"}, {"label" : "getAll", "tail" : "(keys: Array[Int]): Array[Int]", "member" : "org.saddle.index.IndexIntRange.getAll", "link" : "org\/saddle\/index\/IndexIntRange.html#getAll(keys:Array[Int]):Array[Int]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int, stride: Int): Index[Int]", "member" : "org.saddle.index.IndexIntRange.slice", "link" : "org\/saddle\/index\/IndexIntRange.html#slice(from:Int,until:Int,stride:Int):org.saddle.Index[Int]", "kind" : "def"}, {"label" : "distinct", "tail" : "(st: ST[Int], ord: ORD[Int]): IndexIntRange", "member" : "org.saddle.index.IndexIntRange.distinct", "link" : "org\/saddle\/index\/IndexIntRange.html#distinct(implicitst:org.saddle.ST[Int],implicitord:org.saddle.ORD[Int]):org.saddle.index.IndexIntRange", "kind" : "def"}, {"label" : "rsearch", "tail" : "(t: Int): Int", "member" : "org.saddle.index.IndexIntRange.rsearch", "link" : "org\/saddle\/index\/IndexIntRange.html#rsearch(t:Int):Int", "kind" : "def"}, {"label" : "lsearch", "tail" : "(t: Int): Int", "member" : "org.saddle.index.IndexIntRange.lsearch", "link" : "org\/saddle\/index\/IndexIntRange.html#lsearch(t:Int):Int", "kind" : "def"}, {"label" : "concat", "tail" : "(x: Index[Int]): Index[Int]", "member" : "org.saddle.index.IndexIntRange.concat", "link" : "org\/saddle\/index\/IndexIntRange.html#concat(x:org.saddle.Index[Int]):org.saddle.Index[Int]", "kind" : "def"}, {"label" : "without", "tail" : "(locs: Array[Int]): Index[Int]", "member" : "org.saddle.index.IndexIntRange.without", "link" : "org\/saddle\/index\/IndexIntRange.html#without(locs:Array[Int]):org.saddle.Index[Int]", "kind" : "def"}, {"label" : "take", "tail" : "(locs: Array[Int]): Index[Int]", "member" : "org.saddle.index.IndexIntRange.take", "link" : "org\/saddle\/index\/IndexIntRange.html#take(locs:Array[Int]):org.saddle.Index[Int]", "kind" : "def"}, {"label" : "toVec", "tail" : "(): Vec[Int]", "member" : "org.saddle.index.IndexIntRange.toVec", "link" : "org\/saddle\/index\/IndexIntRange.html#toVec:org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "raw", "tail" : "(loc: Int): Int", "member" : "org.saddle.index.IndexIntRange.raw", "link" : "org\/saddle\/index\/IndexIntRange.html#raw(loc:Int):Int", "kind" : "def"}, {"label" : "locator", "tail" : "(): Locator[Int] { ... \/* 2 definitions in type refinement *\/ }", "member" : "org.saddle.index.IndexIntRange.locator", "link" : "org\/saddle\/index\/IndexIntRange.html#locator:org.saddle.locator.Locator[Int]{defput(key:Int,value:Int):Nothing;definc(key:Int):Nothing}", "kind" : "def"}, {"label" : "scalarTag", "tail" : ": ScalarTagInt.type", "member" : "org.saddle.index.IndexIntRange.scalarTag", "link" : "org\/saddle\/index\/IndexIntRange.html#scalarTag:org.saddle.scalar.ScalarTagInt.type", "kind" : "lazy val"}, {"member" : "org.saddle.index.IndexIntRange#<init>", "error" : "unsupported entity"}, {"label" : "from", "tail" : ": Int", "member" : "org.saddle.index.IndexIntRange.from", "link" : "org\/saddle\/index\/IndexIntRange.html#from:Int", "kind" : "val"}, {"label" : "length", "tail" : ": Int", "member" : "org.saddle.index.IndexIntRange.length", "link" : "org\/saddle\/index\/IndexIntRange.html#length:Int", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.Index.toString", "link" : "org\/saddle\/index\/IndexIntRange.html#toString():String", "kind" : "def"}, {"label" : "print", "tail" : "(len: Int, stream: OutputStream): Unit", "member" : "org.saddle.Index.print", "link" : "org\/saddle\/index\/IndexIntRange.html#print(len:Int,stream:java.io.OutputStream):Unit", "kind" : "def"}, {"label" : "stringify", "tail" : "(len: Int): String", "member" : "org.saddle.Index.stringify", "link" : "org\/saddle\/index\/IndexIntRange.html#stringify(len:Int):String", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.Index.equals", "link" : "org\/saddle\/index\/IndexIntRange.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.Index.hashCode", "link" : "org\/saddle\/index\/IndexIntRange.html#hashCode():Int", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): IndexedSeq[Int]", "member" : "org.saddle.Index.toSeq", "link" : "org\/saddle\/index\/IndexIntRange.html#toSeq:IndexedSeq[T]", "kind" : "def"}, {"label" : "next", "tail" : "(current: Scalar[Int]): Scalar[Int]", "member" : "org.saddle.Index.next", "link" : "org\/saddle\/index\/IndexIntRange.html#next(current:org.saddle.scalar.Scalar[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "prev", "tail" : "(current: Scalar[Int]): Scalar[Int]", "member" : "org.saddle.Index.prev", "link" : "org\/saddle\/index\/IndexIntRange.html#prev(current:org.saddle.scalar.Scalar[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Int): Boolean", "member" : "org.saddle.Index.contains", "link" : "org\/saddle\/index\/IndexIntRange.html#contains(key:T):Boolean", "kind" : "def"}, {"label" : "getIndexer", "tail" : "(other: Index[Int]): Option[Array[Int]]", "member" : "org.saddle.Index.getIndexer", "link" : "org\/saddle\/index\/IndexIntRange.html#getIndexer(other:org.saddle.Index[T]):Option[Array[Int]]", "kind" : "def"}, {"label" : "split", "tail" : "(ev: Splitter[Int, O1, O2]): (Index[O1], Index[O2])", "member" : "org.saddle.Index.split", "link" : "org\/saddle\/index\/IndexIntRange.html#split[O1,O2](implicitev:org.saddle.index.Splitter[T,O1,O2]):(org.saddle.Index[O1],org.saddle.Index[O2])", "kind" : "def"}, {"label" : "stack", "tail" : "(other: Index[U])(ev: Stacker[Int, U, V]): Index[V]", "member" : "org.saddle.Index.stack", "link" : "org\/saddle\/index\/IndexIntRange.html#stack[U,V](other:org.saddle.Index[U])(implicitev:org.saddle.index.Stacker[T,U,V]):org.saddle.Index[V]", "kind" : "def"}, {"label" : "dropLevel", "tail" : "(ev: Splitter[Int, U, _]): Index[U]", "member" : "org.saddle.Index.dropLevel", "link" : "org\/saddle\/index\/IndexIntRange.html#dropLevel[U,_](implicitev:org.saddle.index.Splitter[T,U,_]):org.saddle.Index[U]", "kind" : "def"}, {"label" : "exists", "tail" : "(pred: (Int) ⇒ Boolean): Boolean", "member" : "org.saddle.Index.exists", "link" : "org\/saddle\/index\/IndexIntRange.html#exists(pred:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "findOne", "tail" : "(pred: (Int) ⇒ Boolean): Int", "member" : "org.saddle.Index.findOne", "link" : "org\/saddle\/index\/IndexIntRange.html#findOne(pred:T=>Boolean):Int", "kind" : "def"}, {"label" : "sorted", "tail" : "(): Index[Int]", "member" : "org.saddle.Index.sorted", "link" : "org\/saddle\/index\/IndexIntRange.html#sorted:org.saddle.Index[T]", "kind" : "def"}, {"label" : "last", "tail" : "(): Scalar[Int]", "member" : "org.saddle.Index.last", "link" : "org\/saddle\/index\/IndexIntRange.html#last:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "first", "tail" : "(): Scalar[Int]", "member" : "org.saddle.Index.first", "link" : "org\/saddle\/index\/IndexIntRange.html#first:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "tail", "tail" : "(n: Int): Index[Int]", "member" : "org.saddle.Index.tail", "link" : "org\/saddle\/index\/IndexIntRange.html#tail(n:Int):org.saddle.Index[T]", "kind" : "def"}, {"label" : "head", "tail" : "(n: Int): Index[Int]", "member" : "org.saddle.Index.head", "link" : "org\/saddle\/index\/IndexIntRange.html#head(n:Int):org.saddle.Index[T]", "kind" : "def"}, {"label" : "get", "tail" : "(key: Int): Array[Int]", "member" : "org.saddle.Index.get", "link" : "org\/saddle\/index\/IndexIntRange.html#get(key:T):Array[Int]", "kind" : "def"}, {"label" : "getLast", "tail" : "(key: Int): Int", "member" : "org.saddle.Index.getLast", "link" : "org\/saddle\/index\/IndexIntRange.html#getLast(key:T):Int", "kind" : "def"}, {"label" : "getFirst", "tail" : "(key: Int): Int", "member" : "org.saddle.Index.getFirst", "link" : "org\/saddle\/index\/IndexIntRange.html#getFirst(key:T):Int", "kind" : "def"}, {"label" : "count", "tail" : "(key: Int): Int", "member" : "org.saddle.Index.count", "link" : "org\/saddle\/index\/IndexIntRange.html#count(key:T):Int", "kind" : "def"}, {"label" : "counts", "tail" : "(): Array[Int]", "member" : "org.saddle.Index.counts", "link" : "org\/saddle\/index\/IndexIntRange.html#counts:Array[Int]", "kind" : "def"}, {"label" : "uniques", "tail" : "(ord: ORD[Int], tag: ST[Int]): Index[Int]", "member" : "org.saddle.Index.uniques", "link" : "org\/saddle\/index\/IndexIntRange.html#uniques(implicitord:org.saddle.ORD[T],implicittag:org.saddle.ST[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "isUnique", "tail" : "(): Boolean", "member" : "org.saddle.Index.isUnique", "link" : "org\/saddle\/index\/IndexIntRange.html#isUnique:Boolean", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(rng: Slice[Int]): Index[Int]", "member" : "org.saddle.Index.sliceBy", "link" : "org\/saddle\/index\/IndexIntRange.html#sliceBy(rng:org.saddle.index.Slice[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(from: Int, to: Int, inclusive: Boolean): Index[Int]", "member" : "org.saddle.Index.sliceBy", "link" : "org\/saddle\/index\/IndexIntRange.html#sliceBy(from:T,to:T,inclusive:Boolean):org.saddle.Index[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: Array[Int]): Array[Int]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/index\/IndexIntRange.html#apply(keys:Array[T]):Array[Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: Int*): Array[Int]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/index\/IndexIntRange.html#apply(keys:T*):Array[Int]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Int*): Index[Int]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexIntRange.html#at(locs:Int*):org.saddle.Index[T]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Array[Int]): Index[Int]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexIntRange.html#at(locs:Array[Int]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "at", "tail" : "(loc: Int): Scalar[Int]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexIntRange.html#at(loc:Int):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Index.nonEmpty", "link" : "org\/saddle\/index\/IndexIntRange.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Index.isEmpty", "link" : "org\/saddle\/index\/IndexIntRange.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/IndexIntRange.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/IndexIntRange.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/IndexIntRange.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/IndexIntRange.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/IndexIntRange.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/IndexIntRange.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/IndexIntRange.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexIntRange.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexIntRange.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexIntRange.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/IndexIntRange.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/IndexIntRange.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/IndexIntRange.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/IndexIntRange.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/IndexIntRange.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/IndexIntRange.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(length: Int, from: Int): IndexIntRange", "member" : "org.saddle.index.IndexIntRange.apply", "link" : "org\/saddle\/index\/IndexIntRange$.html#apply(length:Int,from:Int):org.saddle.index.IndexIntRange", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/IndexIntRange$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/IndexIntRange$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/IndexIntRange$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/IndexIntRange$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/IndexIntRange$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/IndexIntRange$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/IndexIntRange$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexIntRange$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexIntRange$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexIntRange$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/IndexIntRange$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/IndexIntRange$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/IndexIntRange$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/IndexIntRange$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/IndexIntRange$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/IndexIntRange$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/IndexIntRange$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/IndexIntRange$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/IndexIntRange$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/index\/IndexIntRange.html", "kind" : "class"}, {"name" : "org.saddle.index.IndexLong", "shortDescription" : "Index with long keys", "members_class" : [{"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.index.IndexLong.equals", "link" : "org\/saddle\/index\/IndexLong.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[Long]", "member" : "org.saddle.index.IndexLong.toArray", "link" : "org\/saddle\/index\/IndexLong.html#toArray:Array[Long]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Long) ⇒ B)(arg0: ST[B], arg1: ORD[B]): Index[B]", "member" : "org.saddle.index.IndexLong.map", "link" : "org\/saddle\/index\/IndexLong.html#map[B](f:Long=>B)(implicitevidence$1:org.saddle.ST[B],implicitevidence$2:org.saddle.ORD[B]):org.saddle.Index[B]", "kind" : "def"}, {"label" : "rsearch", "tail" : "(t: Long): Int", "member" : "org.saddle.index.IndexLong.rsearch", "link" : "org\/saddle\/index\/IndexLong.html#rsearch(t:Long):Int", "kind" : "def"}, {"label" : "lsearch", "tail" : "(t: Long): Int", "member" : "org.saddle.index.IndexLong.lsearch", "link" : "org\/saddle\/index\/IndexLong.html#lsearch(t:Long):Int", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int, stride: Int): Index[Long]", "member" : "org.saddle.index.IndexLong.slice", "link" : "org\/saddle\/index\/IndexLong.html#slice(from:Int,until:Int,stride:Int):org.saddle.Index[Long]", "kind" : "def"}, {"label" : "union", "tail" : "(other: Index[Long]): ReIndexer[Long]", "member" : "org.saddle.index.IndexLong.union", "link" : "org\/saddle\/index\/IndexLong.html#union(other:org.saddle.Index[Long]):org.saddle.index.ReIndexer[Long]", "kind" : "def"}, {"label" : "intersect", "tail" : "(other: Index[Long]): ReIndexer[Long]", "member" : "org.saddle.index.IndexLong.intersect", "link" : "org\/saddle\/index\/IndexLong.html#intersect(other:org.saddle.Index[Long]):org.saddle.index.ReIndexer[Long]", "kind" : "def"}, {"label" : "join", "tail" : "(other: Index[Long], how: JoinType): ReIndexer[Long]", "member" : "org.saddle.index.IndexLong.join", "link" : "org\/saddle\/index\/IndexLong.html#join(other:org.saddle.Index[Long],how:org.saddle.index.JoinType):org.saddle.index.ReIndexer[Long]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Index[Long]", "member" : "org.saddle.index.IndexLong.reversed", "link" : "org\/saddle\/index\/IndexLong.html#reversed:org.saddle.Index[Long]", "kind" : "def"}, {"label" : "argSort", "tail" : "(): Array[Int]", "member" : "org.saddle.index.IndexLong.argSort", "link" : "org\/saddle\/index\/IndexLong.html#argSort:Array[Int]", "kind" : "def"}, {"label" : "isContiguous", "tail" : "(): Boolean", "member" : "org.saddle.index.IndexLong.isContiguous", "link" : "org\/saddle\/index\/IndexLong.html#isContiguous:Boolean", "kind" : "def"}, {"label" : "isMonotonic", "tail" : "(): Boolean", "member" : "org.saddle.index.IndexLong.isMonotonic", "link" : "org\/saddle\/index\/IndexLong.html#isMonotonic:Boolean", "kind" : "def"}, {"label" : "concat", "tail" : "(x: Index[Long]): Index[Long]", "member" : "org.saddle.index.IndexLong.concat", "link" : "org\/saddle\/index\/IndexLong.html#concat(x:org.saddle.Index[Long]):org.saddle.Index[Long]", "kind" : "def"}, {"label" : "without", "tail" : "(locs: Array[Int]): Index[Long]", "member" : "org.saddle.index.IndexLong.without", "link" : "org\/saddle\/index\/IndexLong.html#without(locs:Array[Int]):org.saddle.Index[Long]", "kind" : "def"}, {"label" : "take", "tail" : "(locs: Array[Int]): Index[Long]", "member" : "org.saddle.index.IndexLong.take", "link" : "org\/saddle\/index\/IndexLong.html#take(locs:Array[Int]):org.saddle.Index[Long]", "kind" : "def"}, {"label" : "raw", "tail" : "(idx: Int): Long", "member" : "org.saddle.index.IndexLong.raw", "link" : "org\/saddle\/index\/IndexLong.html#raw(idx:Int):Long", "kind" : "def"}, {"label" : "toVec", "tail" : "(): Vec[Long]", "member" : "org.saddle.index.IndexLong.toVec", "link" : "org\/saddle\/index\/IndexLong.html#toVec:org.saddle.Vec[Long]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "org.saddle.index.IndexLong.length", "link" : "org\/saddle\/index\/IndexLong.html#length:Int", "kind" : "def"}, {"label" : "locator", "tail" : "(): Locator[Long]", "member" : "org.saddle.index.IndexLong.locator", "link" : "org\/saddle\/index\/IndexLong.html#locator:org.saddle.locator.Locator[Long]", "kind" : "def"}, {"label" : "scalarTag", "tail" : ": ScalarTagLong.type", "member" : "org.saddle.index.IndexLong.scalarTag", "link" : "org\/saddle\/index\/IndexLong.html#scalarTag:org.saddle.scalar.ScalarTagLong.type", "kind" : "val"}, {"member" : "org.saddle.index.IndexLong#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.Index.toString", "link" : "org\/saddle\/index\/IndexLong.html#toString():String", "kind" : "def"}, {"label" : "print", "tail" : "(len: Int, stream: OutputStream): Unit", "member" : "org.saddle.Index.print", "link" : "org\/saddle\/index\/IndexLong.html#print(len:Int,stream:java.io.OutputStream):Unit", "kind" : "def"}, {"label" : "stringify", "tail" : "(len: Int): String", "member" : "org.saddle.Index.stringify", "link" : "org\/saddle\/index\/IndexLong.html#stringify(len:Int):String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.Index.hashCode", "link" : "org\/saddle\/index\/IndexLong.html#hashCode():Int", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): IndexedSeq[Long]", "member" : "org.saddle.Index.toSeq", "link" : "org\/saddle\/index\/IndexLong.html#toSeq:IndexedSeq[T]", "kind" : "def"}, {"label" : "next", "tail" : "(current: Scalar[Long]): Scalar[Long]", "member" : "org.saddle.Index.next", "link" : "org\/saddle\/index\/IndexLong.html#next(current:org.saddle.scalar.Scalar[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "prev", "tail" : "(current: Scalar[Long]): Scalar[Long]", "member" : "org.saddle.Index.prev", "link" : "org\/saddle\/index\/IndexLong.html#prev(current:org.saddle.scalar.Scalar[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Long): Boolean", "member" : "org.saddle.Index.contains", "link" : "org\/saddle\/index\/IndexLong.html#contains(key:T):Boolean", "kind" : "def"}, {"label" : "getIndexer", "tail" : "(other: Index[Long]): Option[Array[Int]]", "member" : "org.saddle.Index.getIndexer", "link" : "org\/saddle\/index\/IndexLong.html#getIndexer(other:org.saddle.Index[T]):Option[Array[Int]]", "kind" : "def"}, {"label" : "split", "tail" : "(ev: Splitter[Long, O1, O2]): (Index[O1], Index[O2])", "member" : "org.saddle.Index.split", "link" : "org\/saddle\/index\/IndexLong.html#split[O1,O2](implicitev:org.saddle.index.Splitter[T,O1,O2]):(org.saddle.Index[O1],org.saddle.Index[O2])", "kind" : "def"}, {"label" : "stack", "tail" : "(other: Index[U])(ev: Stacker[Long, U, V]): Index[V]", "member" : "org.saddle.Index.stack", "link" : "org\/saddle\/index\/IndexLong.html#stack[U,V](other:org.saddle.Index[U])(implicitev:org.saddle.index.Stacker[T,U,V]):org.saddle.Index[V]", "kind" : "def"}, {"label" : "dropLevel", "tail" : "(ev: Splitter[Long, U, _]): Index[U]", "member" : "org.saddle.Index.dropLevel", "link" : "org\/saddle\/index\/IndexLong.html#dropLevel[U,_](implicitev:org.saddle.index.Splitter[T,U,_]):org.saddle.Index[U]", "kind" : "def"}, {"label" : "exists", "tail" : "(pred: (Long) ⇒ Boolean): Boolean", "member" : "org.saddle.Index.exists", "link" : "org\/saddle\/index\/IndexLong.html#exists(pred:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "findOne", "tail" : "(pred: (Long) ⇒ Boolean): Int", "member" : "org.saddle.Index.findOne", "link" : "org\/saddle\/index\/IndexLong.html#findOne(pred:T=>Boolean):Int", "kind" : "def"}, {"label" : "sorted", "tail" : "(): Index[Long]", "member" : "org.saddle.Index.sorted", "link" : "org\/saddle\/index\/IndexLong.html#sorted:org.saddle.Index[T]", "kind" : "def"}, {"label" : "last", "tail" : "(): Scalar[Long]", "member" : "org.saddle.Index.last", "link" : "org\/saddle\/index\/IndexLong.html#last:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "first", "tail" : "(): Scalar[Long]", "member" : "org.saddle.Index.first", "link" : "org\/saddle\/index\/IndexLong.html#first:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "tail", "tail" : "(n: Int): Index[Long]", "member" : "org.saddle.Index.tail", "link" : "org\/saddle\/index\/IndexLong.html#tail(n:Int):org.saddle.Index[T]", "kind" : "def"}, {"label" : "head", "tail" : "(n: Int): Index[Long]", "member" : "org.saddle.Index.head", "link" : "org\/saddle\/index\/IndexLong.html#head(n:Int):org.saddle.Index[T]", "kind" : "def"}, {"label" : "get", "tail" : "(key: Long): Array[Int]", "member" : "org.saddle.Index.get", "link" : "org\/saddle\/index\/IndexLong.html#get(key:T):Array[Int]", "kind" : "def"}, {"label" : "getLast", "tail" : "(key: Long): Int", "member" : "org.saddle.Index.getLast", "link" : "org\/saddle\/index\/IndexLong.html#getLast(key:T):Int", "kind" : "def"}, {"label" : "getFirst", "tail" : "(key: Long): Int", "member" : "org.saddle.Index.getFirst", "link" : "org\/saddle\/index\/IndexLong.html#getFirst(key:T):Int", "kind" : "def"}, {"label" : "count", "tail" : "(key: Long): Int", "member" : "org.saddle.Index.count", "link" : "org\/saddle\/index\/IndexLong.html#count(key:T):Int", "kind" : "def"}, {"label" : "counts", "tail" : "(): Array[Int]", "member" : "org.saddle.Index.counts", "link" : "org\/saddle\/index\/IndexLong.html#counts:Array[Int]", "kind" : "def"}, {"label" : "uniques", "tail" : "(ord: ORD[Long], tag: ST[Long]): Index[Long]", "member" : "org.saddle.Index.uniques", "link" : "org\/saddle\/index\/IndexLong.html#uniques(implicitord:org.saddle.ORD[T],implicittag:org.saddle.ST[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "isUnique", "tail" : "(): Boolean", "member" : "org.saddle.Index.isUnique", "link" : "org\/saddle\/index\/IndexLong.html#isUnique:Boolean", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(rng: Slice[Long]): Index[Long]", "member" : "org.saddle.Index.sliceBy", "link" : "org\/saddle\/index\/IndexLong.html#sliceBy(rng:org.saddle.index.Slice[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(from: Long, to: Long, inclusive: Boolean): Index[Long]", "member" : "org.saddle.Index.sliceBy", "link" : "org\/saddle\/index\/IndexLong.html#sliceBy(from:T,to:T,inclusive:Boolean):org.saddle.Index[T]", "kind" : "def"}, {"label" : "distinct", "tail" : "(st: ST[Long], ord: ORD[Long]): Index[Long]", "member" : "org.saddle.Index.distinct", "link" : "org\/saddle\/index\/IndexLong.html#distinct(implicitst:org.saddle.ST[T],implicitord:org.saddle.ORD[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: Array[Long]): Array[Int]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/index\/IndexLong.html#apply(keys:Array[T]):Array[Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: Long*): Array[Int]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/index\/IndexLong.html#apply(keys:T*):Array[Int]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Int*): Index[Long]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexLong.html#at(locs:Int*):org.saddle.Index[T]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Array[Int]): Index[Long]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexLong.html#at(locs:Array[Int]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "at", "tail" : "(loc: Int): Scalar[Long]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexLong.html#at(loc:Int):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Index.nonEmpty", "link" : "org\/saddle\/index\/IndexLong.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Index.isEmpty", "link" : "org\/saddle\/index\/IndexLong.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/IndexLong.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/IndexLong.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/IndexLong.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/IndexLong.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/IndexLong.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/IndexLong.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/IndexLong.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexLong.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexLong.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexLong.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/IndexLong.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/IndexLong.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/IndexLong.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/IndexLong.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/IndexLong.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/IndexLong.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/index\/IndexLong.html", "kind" : "class"}, {"name" : "org.saddle.index.IndexMaker", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/IndexMaker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/IndexMaker.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/IndexMaker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/IndexMaker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/IndexMaker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/IndexMaker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/IndexMaker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexMaker.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexMaker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexMaker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/IndexMaker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/IndexMaker.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/IndexMaker.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/IndexMaker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/IndexMaker.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/IndexMaker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/IndexMaker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/IndexMaker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/IndexMaker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(in: I): Index[O]", "member" : "org.saddle.index.IndexMaker.apply", "link" : "org\/saddle\/index\/IndexMaker.html#apply(in:I):org.saddle.Index[O]", "kind" : "abstract def"}], "shortDescription" : "An IndexMaker takes some input of type I and returns an Index whoseelements are of type O.", "object" : "org\/saddle\/index\/IndexMaker$.html", "members_object" : [{"label" : "make5V", "tail" : "(arg0: ST[I1], arg1: ORD[I1], arg2: ST[I2], arg3: ORD[I2], arg4: ST[I3], arg5: ORD[I3], arg6: ST[I4], arg7: ORD[I4], arg8: ST[I5], arg9: ORD[I5]): IndexMaker[(T[I1], T[I2], T[I3], T[I4], T[I5]), (I1, I2, I3, I4, I5)]", "member" : "org.saddle.index.IndexMaker.make5V", "link" : "org\/saddle\/index\/IndexMaker$.html#make5V[T[K]<:IndexedSeq[K],I1,I2,I3,I4,I5](implicitevidence$23:org.saddle.ST[I1],implicitevidence$24:org.saddle.ORD[I1],implicitevidence$25:org.saddle.ST[I2],implicitevidence$26:org.saddle.ORD[I2],implicitevidence$27:org.saddle.ST[I3],implicitevidence$28:org.saddle.ORD[I3],implicitevidence$29:org.saddle.ST[I4],implicitevidence$30:org.saddle.ORD[I4],implicitevidence$31:org.saddle.ST[I5],implicitevidence$32:org.saddle.ORD[I5]):org.saddle.index.IndexMaker[(T[I1],T[I2],T[I3],T[I4],T[I5]),(I1,I2,I3,I4,I5)]", "kind" : "implicit def"}, {"label" : "make4V", "tail" : "(arg0: ST[I1], arg1: ORD[I1], arg2: ST[I2], arg3: ORD[I2], arg4: ST[I3], arg5: ORD[I3], arg6: ST[I4], arg7: ORD[I4]): IndexMaker[(T[I1], T[I2], T[I3], T[I4]), (I1, I2, I3, I4)]", "member" : "org.saddle.index.IndexMaker.make4V", "link" : "org\/saddle\/index\/IndexMaker$.html#make4V[T[K]<:IndexedSeq[K],I1,I2,I3,I4](implicitevidence$15:org.saddle.ST[I1],implicitevidence$16:org.saddle.ORD[I1],implicitevidence$17:org.saddle.ST[I2],implicitevidence$18:org.saddle.ORD[I2],implicitevidence$19:org.saddle.ST[I3],implicitevidence$20:org.saddle.ORD[I3],implicitevidence$21:org.saddle.ST[I4],implicitevidence$22:org.saddle.ORD[I4]):org.saddle.index.IndexMaker[(T[I1],T[I2],T[I3],T[I4]),(I1,I2,I3,I4)]", "kind" : "implicit def"}, {"label" : "make3V", "tail" : "(arg0: ST[I1], arg1: ORD[I1], arg2: ST[I2], arg3: ORD[I2], arg4: ST[I3], arg5: ORD[I3]): IndexMaker[(T[I1], T[I2], T[I3]), (I1, I2, I3)]", "member" : "org.saddle.index.IndexMaker.make3V", "link" : "org\/saddle\/index\/IndexMaker$.html#make3V[T[K]<:IndexedSeq[K],I1,I2,I3](implicitevidence$9:org.saddle.ST[I1],implicitevidence$10:org.saddle.ORD[I1],implicitevidence$11:org.saddle.ST[I2],implicitevidence$12:org.saddle.ORD[I2],implicitevidence$13:org.saddle.ST[I3],implicitevidence$14:org.saddle.ORD[I3]):org.saddle.index.IndexMaker[(T[I1],T[I2],T[I3]),(I1,I2,I3)]", "kind" : "implicit def"}, {"label" : "make2Vec", "tail" : "(arg0: ST[I1], arg1: ORD[I1], arg2: ST[I2], arg3: ORD[I2]): IndexMaker[(Vec[I1], Vec[I2]), (I1, I2)]", "member" : "org.saddle.index.IndexMaker.make2Vec", "link" : "org\/saddle\/index\/IndexMaker$.html#make2Vec[I1,I2](implicitevidence$5:org.saddle.ST[I1],implicitevidence$6:org.saddle.ORD[I1],implicitevidence$7:org.saddle.ST[I2],implicitevidence$8:org.saddle.ORD[I2]):org.saddle.index.IndexMaker[(org.saddle.Vec[I1],org.saddle.Vec[I2]),(I1,I2)]", "kind" : "implicit def"}, {"label" : "make2V", "tail" : "(arg0: ST[I1], arg1: ORD[I1], arg2: ST[I2], arg3: ORD[I2]): IndexMaker[(T[I1], T[I2]), (I1, I2)]", "member" : "org.saddle.index.IndexMaker.make2V", "link" : "org\/saddle\/index\/IndexMaker$.html#make2V[T[K]<:IndexedSeq[K],I1,I2](implicitevidence$1:org.saddle.ST[I1],implicitevidence$2:org.saddle.ORD[I1],implicitevidence$3:org.saddle.ST[I2],implicitevidence$4:org.saddle.ORD[I2]):org.saddle.index.IndexMaker[(T[I1],T[I2]),(I1,I2)]", "kind" : "implicit def"}, {"label" : "make1V", "tail" : "(st: ST[A], org: ORD[A]): IndexMaker[T[A], A]", "member" : "org.saddle.index.IndexMakerLowPriority.make1V", "link" : "org\/saddle\/index\/IndexMaker$.html#make1V[T[K]<:IndexedSeq[K],A](implicitst:org.saddle.ST[A],implicitorg:org.saddle.ORD[A]):org.saddle.index.IndexMaker[T[A],A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/IndexMaker$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/IndexMaker$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/IndexMaker$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/IndexMaker$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/IndexMaker$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/IndexMaker$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/IndexMaker$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexMaker$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexMaker$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexMaker$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/IndexMaker$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/IndexMaker$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/IndexMaker$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/IndexMaker$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/IndexMaker$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/IndexMaker$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/IndexMaker$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/IndexMaker$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/IndexMaker$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/saddle\/index\/IndexMaker.html", "kind" : "trait"}, {"name" : "org.saddle.index.IndexMakerLowPriority", "members_trait" : [{"label" : "make1V", "tail" : "(st: ST[A], org: ORD[A]): IndexMaker[T[A], A]", "member" : "org.saddle.index.IndexMakerLowPriority.make1V", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#make1V[T[K]<:IndexedSeq[K],A](implicitst:org.saddle.ST[A],implicitorg:org.saddle.ORD[A]):org.saddle.index.IndexMaker[T[A],A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/IndexMakerLowPriority.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "org\/saddle\/index\/IndexMakerLowPriority.html", "kind" : "trait"}, {"name" : "org.saddle.index.IndexTime", "shortDescription" : "A compact native int representation of posix times at millisecond resolution whichconforms to and extends the interface of Index[DateTime]", "object" : "org\/saddle\/index\/IndexTime$.html", "members_class" : [{"label" : "map", "tail" : "(f: (DateTime) ⇒ B)(arg0: ST[B], arg1: ORD[B]): Index[B]", "member" : "org.saddle.index.IndexTime.map", "link" : "org\/saddle\/index\/IndexTime.html#map[B](f:org.joda.time.DateTime=>B)(implicitevidence$1:org.saddle.ST[B],implicitevidence$2:org.saddle.ORD[B]):org.saddle.Index[B]", "kind" : "def"}, {"label" : "getIndexer", "tail" : "(other: Index[DateTime]): Option[Array[Int]]", "member" : "org.saddle.index.IndexTime.getIndexer", "link" : "org\/saddle\/index\/IndexTime.html#getIndexer(other:org.saddle.Index[org.joda.time.DateTime]):Option[Array[Int]]", "kind" : "def"}, {"label" : "join", "tail" : "(other: Index[DateTime], how: JoinType): ReIndexer[DateTime]", "member" : "org.saddle.index.IndexTime.join", "link" : "org\/saddle\/index\/IndexTime.html#join(other:org.saddle.Index[org.joda.time.DateTime],how:org.saddle.index.JoinType):org.saddle.index.ReIndexer[org.joda.time.DateTime]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): IndexTime", "member" : "org.saddle.index.IndexTime.reversed", "link" : "org\/saddle\/index\/IndexTime.html#reversed:org.saddle.index.IndexTime", "kind" : "def"}, {"label" : "argSort", "tail" : "(): Array[Int]", "member" : "org.saddle.index.IndexTime.argSort", "link" : "org\/saddle\/index\/IndexTime.html#argSort:Array[Int]", "kind" : "def"}, {"label" : "isContiguous", "tail" : "(): Boolean", "member" : "org.saddle.index.IndexTime.isContiguous", "link" : "org\/saddle\/index\/IndexTime.html#isContiguous:Boolean", "kind" : "def"}, {"label" : "isMonotonic", "tail" : "(): Boolean", "member" : "org.saddle.index.IndexTime.isMonotonic", "link" : "org\/saddle\/index\/IndexTime.html#isMonotonic:Boolean", "kind" : "def"}, {"label" : "union", "tail" : "(other: Index[DateTime]): ReIndexer[DateTime]", "member" : "org.saddle.index.IndexTime.union", "link" : "org\/saddle\/index\/IndexTime.html#union(other:org.saddle.Index[org.joda.time.DateTime]):org.saddle.index.ReIndexer[org.joda.time.DateTime]", "kind" : "def"}, {"label" : "intersect", "tail" : "(other: Index[DateTime]): ReIndexer[DateTime]", "member" : "org.saddle.index.IndexTime.intersect", "link" : "org\/saddle\/index\/IndexTime.html#intersect(other:org.saddle.Index[org.joda.time.DateTime]):org.saddle.index.ReIndexer[org.joda.time.DateTime]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int, stride: Int): IndexTime", "member" : "org.saddle.index.IndexTime.slice", "link" : "org\/saddle\/index\/IndexTime.html#slice(from:Int,until:Int,stride:Int):org.saddle.index.IndexTime", "kind" : "def"}, {"label" : "rsearch", "tail" : "(t: DateTime): Int", "member" : "org.saddle.index.IndexTime.rsearch", "link" : "org\/saddle\/index\/IndexTime.html#rsearch(t:org.joda.time.DateTime):Int", "kind" : "def"}, {"label" : "lsearch", "tail" : "(t: DateTime): Int", "member" : "org.saddle.index.IndexTime.lsearch", "link" : "org\/saddle\/index\/IndexTime.html#lsearch(t:org.joda.time.DateTime):Int", "kind" : "def"}, {"label" : "concat", "tail" : "(x: Index[DateTime]): Index[DateTime]", "member" : "org.saddle.index.IndexTime.concat", "link" : "org\/saddle\/index\/IndexTime.html#concat(x:org.saddle.Index[org.joda.time.DateTime]):org.saddle.Index[org.joda.time.DateTime]", "kind" : "def"}, {"label" : "concat", "tail" : "(x: IndexTime): IndexTime", "member" : "org.saddle.index.IndexTime.concat", "link" : "org\/saddle\/index\/IndexTime.html#concat(x:org.saddle.index.IndexTime):org.saddle.index.IndexTime", "kind" : "def"}, {"label" : "without", "tail" : "(locs: Array[Int]): IndexTime", "member" : "org.saddle.index.IndexTime.without", "link" : "org\/saddle\/index\/IndexTime.html#without(locs:Array[Int]):org.saddle.index.IndexTime", "kind" : "def"}, {"label" : "take", "tail" : "(locs: Array[Int]): IndexTime", "member" : "org.saddle.index.IndexTime.take", "link" : "org\/saddle\/index\/IndexTime.html#take(locs:Array[Int]):org.saddle.index.IndexTime", "kind" : "def"}, {"label" : "raw", "tail" : "(loc: Int): DateTime", "member" : "org.saddle.index.IndexTime.raw", "link" : "org\/saddle\/index\/IndexTime.html#raw(loc:Int):org.joda.time.DateTime", "kind" : "def"}, {"label" : "toVec", "tail" : "(): VecTime", "member" : "org.saddle.index.IndexTime.toVec", "link" : "org\/saddle\/index\/IndexTime.html#toVec:org.saddle.vec.VecTime", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "org.saddle.index.IndexTime.length", "link" : "org\/saddle\/index\/IndexTime.html#length:Int", "kind" : "def"}, {"label" : "withZone", "tail" : "(tzone: DateTimeZone): IndexTime", "member" : "org.saddle.index.IndexTime.withZone", "link" : "org\/saddle\/index\/IndexTime.html#withZone(tzone:org.joda.time.DateTimeZone):org.saddle.index.IndexTime", "kind" : "def"}, {"label" : "locator", "tail" : "(): Locator[DateTime] { ... \/* 2 definitions in type refinement *\/ }", "member" : "org.saddle.index.IndexTime.locator", "link" : "org\/saddle\/index\/IndexTime.html#locator:org.saddle.locator.Locator[org.joda.time.DateTime]{lazyval_keys:org.saddle.Index[org.joda.time.DateTime];definc(key:org.joda.time.DateTime):Nothing}", "kind" : "def"}, {"label" : "chrono", "tail" : ": Chronology", "member" : "org.saddle.index.IndexTime.chrono", "link" : "org\/saddle\/index\/IndexTime.html#chrono:org.joda.time.Chronology", "kind" : "lazy val"}, {"label" : "scalarTag", "tail" : ": ScalarTagTime.type", "member" : "org.saddle.index.IndexTime.scalarTag", "link" : "org\/saddle\/index\/IndexTime.html#scalarTag:org.saddle.scalar.ScalarTagTime.type", "kind" : "lazy val"}, {"member" : "org.saddle.index.IndexTime#<init>", "error" : "unsupported entity"}, {"label" : "tzone", "tail" : ": DateTimeZone", "member" : "org.saddle.index.IndexTime.tzone", "link" : "org\/saddle\/index\/IndexTime.html#tzone:org.joda.time.DateTimeZone", "kind" : "val"}, {"label" : "times", "tail" : ": Index[Long]", "member" : "org.saddle.index.IndexTime.times", "link" : "org\/saddle\/index\/IndexTime.html#times:org.saddle.Index[Long]", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.Index.toString", "link" : "org\/saddle\/index\/IndexTime.html#toString():String", "kind" : "def"}, {"label" : "print", "tail" : "(len: Int, stream: OutputStream): Unit", "member" : "org.saddle.Index.print", "link" : "org\/saddle\/index\/IndexTime.html#print(len:Int,stream:java.io.OutputStream):Unit", "kind" : "def"}, {"label" : "stringify", "tail" : "(len: Int): String", "member" : "org.saddle.Index.stringify", "link" : "org\/saddle\/index\/IndexTime.html#stringify(len:Int):String", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.Index.equals", "link" : "org\/saddle\/index\/IndexTime.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.Index.hashCode", "link" : "org\/saddle\/index\/IndexTime.html#hashCode():Int", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): IndexedSeq[DateTime]", "member" : "org.saddle.Index.toSeq", "link" : "org\/saddle\/index\/IndexTime.html#toSeq:IndexedSeq[T]", "kind" : "def"}, {"label" : "next", "tail" : "(current: Scalar[DateTime]): Scalar[DateTime]", "member" : "org.saddle.Index.next", "link" : "org\/saddle\/index\/IndexTime.html#next(current:org.saddle.scalar.Scalar[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "prev", "tail" : "(current: Scalar[DateTime]): Scalar[DateTime]", "member" : "org.saddle.Index.prev", "link" : "org\/saddle\/index\/IndexTime.html#prev(current:org.saddle.scalar.Scalar[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: DateTime): Boolean", "member" : "org.saddle.Index.contains", "link" : "org\/saddle\/index\/IndexTime.html#contains(key:T):Boolean", "kind" : "def"}, {"label" : "split", "tail" : "(ev: Splitter[DateTime, O1, O2]): (Index[O1], Index[O2])", "member" : "org.saddle.Index.split", "link" : "org\/saddle\/index\/IndexTime.html#split[O1,O2](implicitev:org.saddle.index.Splitter[T,O1,O2]):(org.saddle.Index[O1],org.saddle.Index[O2])", "kind" : "def"}, {"label" : "stack", "tail" : "(other: Index[U])(ev: Stacker[DateTime, U, V]): Index[V]", "member" : "org.saddle.Index.stack", "link" : "org\/saddle\/index\/IndexTime.html#stack[U,V](other:org.saddle.Index[U])(implicitev:org.saddle.index.Stacker[T,U,V]):org.saddle.Index[V]", "kind" : "def"}, {"label" : "dropLevel", "tail" : "(ev: Splitter[DateTime, U, _]): Index[U]", "member" : "org.saddle.Index.dropLevel", "link" : "org\/saddle\/index\/IndexTime.html#dropLevel[U,_](implicitev:org.saddle.index.Splitter[T,U,_]):org.saddle.Index[U]", "kind" : "def"}, {"label" : "exists", "tail" : "(pred: (DateTime) ⇒ Boolean): Boolean", "member" : "org.saddle.Index.exists", "link" : "org\/saddle\/index\/IndexTime.html#exists(pred:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "findOne", "tail" : "(pred: (DateTime) ⇒ Boolean): Int", "member" : "org.saddle.Index.findOne", "link" : "org\/saddle\/index\/IndexTime.html#findOne(pred:T=>Boolean):Int", "kind" : "def"}, {"label" : "sorted", "tail" : "(): Index[DateTime]", "member" : "org.saddle.Index.sorted", "link" : "org\/saddle\/index\/IndexTime.html#sorted:org.saddle.Index[T]", "kind" : "def"}, {"label" : "last", "tail" : "(): Scalar[DateTime]", "member" : "org.saddle.Index.last", "link" : "org\/saddle\/index\/IndexTime.html#last:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "first", "tail" : "(): Scalar[DateTime]", "member" : "org.saddle.Index.first", "link" : "org\/saddle\/index\/IndexTime.html#first:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "tail", "tail" : "(n: Int): Index[DateTime]", "member" : "org.saddle.Index.tail", "link" : "org\/saddle\/index\/IndexTime.html#tail(n:Int):org.saddle.Index[T]", "kind" : "def"}, {"label" : "head", "tail" : "(n: Int): Index[DateTime]", "member" : "org.saddle.Index.head", "link" : "org\/saddle\/index\/IndexTime.html#head(n:Int):org.saddle.Index[T]", "kind" : "def"}, {"label" : "get", "tail" : "(key: DateTime): Array[Int]", "member" : "org.saddle.Index.get", "link" : "org\/saddle\/index\/IndexTime.html#get(key:T):Array[Int]", "kind" : "def"}, {"label" : "getLast", "tail" : "(key: DateTime): Int", "member" : "org.saddle.Index.getLast", "link" : "org\/saddle\/index\/IndexTime.html#getLast(key:T):Int", "kind" : "def"}, {"label" : "getFirst", "tail" : "(key: DateTime): Int", "member" : "org.saddle.Index.getFirst", "link" : "org\/saddle\/index\/IndexTime.html#getFirst(key:T):Int", "kind" : "def"}, {"label" : "count", "tail" : "(key: DateTime): Int", "member" : "org.saddle.Index.count", "link" : "org\/saddle\/index\/IndexTime.html#count(key:T):Int", "kind" : "def"}, {"label" : "counts", "tail" : "(): Array[Int]", "member" : "org.saddle.Index.counts", "link" : "org\/saddle\/index\/IndexTime.html#counts:Array[Int]", "kind" : "def"}, {"label" : "uniques", "tail" : "(ord: ORD[DateTime], tag: ST[DateTime]): Index[DateTime]", "member" : "org.saddle.Index.uniques", "link" : "org\/saddle\/index\/IndexTime.html#uniques(implicitord:org.saddle.ORD[T],implicittag:org.saddle.ST[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "isUnique", "tail" : "(): Boolean", "member" : "org.saddle.Index.isUnique", "link" : "org\/saddle\/index\/IndexTime.html#isUnique:Boolean", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(rng: Slice[DateTime]): Index[DateTime]", "member" : "org.saddle.Index.sliceBy", "link" : "org\/saddle\/index\/IndexTime.html#sliceBy(rng:org.saddle.index.Slice[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(from: DateTime, to: DateTime, inclusive: Boolean): Index[DateTime]", "member" : "org.saddle.Index.sliceBy", "link" : "org\/saddle\/index\/IndexTime.html#sliceBy(from:T,to:T,inclusive:Boolean):org.saddle.Index[T]", "kind" : "def"}, {"label" : "distinct", "tail" : "(st: ST[DateTime], ord: ORD[DateTime]): Index[DateTime]", "member" : "org.saddle.Index.distinct", "link" : "org\/saddle\/index\/IndexTime.html#distinct(implicitst:org.saddle.ST[T],implicitord:org.saddle.ORD[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: Array[DateTime]): Array[Int]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/index\/IndexTime.html#apply(keys:Array[T]):Array[Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: DateTime*): Array[Int]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/index\/IndexTime.html#apply(keys:T*):Array[Int]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Int*): Index[DateTime]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexTime.html#at(locs:Int*):org.saddle.Index[T]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Array[Int]): Index[DateTime]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexTime.html#at(locs:Array[Int]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "at", "tail" : "(loc: Int): Scalar[DateTime]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/index\/IndexTime.html#at(loc:Int):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Index.nonEmpty", "link" : "org\/saddle\/index\/IndexTime.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Index.isEmpty", "link" : "org\/saddle\/index\/IndexTime.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/IndexTime.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/IndexTime.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/IndexTime.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/IndexTime.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/IndexTime.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/IndexTime.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/IndexTime.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexTime.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexTime.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexTime.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/IndexTime.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/IndexTime.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/IndexTime.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/IndexTime.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/IndexTime.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/IndexTime.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(times: Vec[DateTime], tzone: DateTimeZone): IndexTime", "member" : "org.saddle.index.IndexTime.apply", "link" : "org\/saddle\/index\/IndexTime$.html#apply(times:org.saddle.Vec[org.joda.time.DateTime],tzone:org.joda.time.DateTimeZone):org.saddle.index.IndexTime", "kind" : "def"}, {"label" : "apply", "tail" : "(times: DateTime*): IndexTime", "member" : "org.saddle.index.IndexTime.apply", "link" : "org\/saddle\/index\/IndexTime$.html#apply(times:org.joda.time.DateTime*):org.saddle.index.IndexTime", "kind" : "def"}, {"label" : "make", "tail" : "(rrule: RRule, start: DateTime, end: DateTime): Index[DateTime]", "member" : "org.saddle.index.IndexTime.make", "link" : "org\/saddle\/index\/IndexTime$.html#make(rrule:org.saddle.time.RRule,start:org.joda.time.DateTime,end:org.joda.time.DateTime):org.saddle.Index[org.joda.time.DateTime]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/IndexTime$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/IndexTime$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/IndexTime$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/IndexTime$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/IndexTime$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/IndexTime$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/IndexTime$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexTime$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexTime$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/IndexTime$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/IndexTime$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/IndexTime$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/IndexTime$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/IndexTime$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/IndexTime$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/IndexTime$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/IndexTime$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/IndexTime$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/IndexTime$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/index\/IndexTime.html", "kind" : "class"}, {"name" : "org.saddle.index.InnerJoin", "shortDescription" : "", "object" : "org\/saddle\/index\/InnerJoin$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/InnerJoin$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/InnerJoin$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/InnerJoin$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/InnerJoin$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/InnerJoin$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/InnerJoin$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/InnerJoin$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/InnerJoin$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/InnerJoin$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/InnerJoin$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/InnerJoin$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/InnerJoin$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/InnerJoin$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/InnerJoin$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/InnerJoin$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/InnerJoin$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/InnerJoin$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/InnerJoin$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/InnerJoin$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.index.JoinerImpl", "shortDescription" : "Concrete implementation of Joiner instance which is specialized on basictypes.", "members_class" : [{"label" : "leftJoinMonotonic", "tail" : "(left: Index[T], right: Index[T]): ReIndexer[T]", "member" : "org.saddle.index.JoinerImpl.leftJoinMonotonic", "link" : "org\/saddle\/index\/JoinerImpl.html#leftJoinMonotonic(left:org.saddle.Index[T],right:org.saddle.Index[T]):org.saddle.index.ReIndexer[T]", "kind" : "def"}, {"label" : "leftJoinMonotonicUnique", "tail" : "(left: Index[T], right: Index[T]): ReIndexer[T]", "member" : "org.saddle.index.JoinerImpl.leftJoinMonotonicUnique", "link" : "org\/saddle\/index\/JoinerImpl.html#leftJoinMonotonicUnique(left:org.saddle.Index[T],right:org.saddle.Index[T]):org.saddle.index.ReIndexer[T]", "kind" : "def"}, {"label" : "outerJoinUnique", "tail" : "(left: Index[T], right: Index[T]): ReIndexer[T]", "member" : "org.saddle.index.JoinerImpl.outerJoinUnique", "link" : "org\/saddle\/index\/JoinerImpl.html#outerJoinUnique(left:org.saddle.Index[T],right:org.saddle.Index[T]):org.saddle.index.ReIndexer[T]", "kind" : "def"}, {"label" : "outerJoinMonotonic", "tail" : "(left: Index[T], right: Index[T]): ReIndexer[T]", "member" : "org.saddle.index.JoinerImpl.outerJoinMonotonic", "link" : "org\/saddle\/index\/JoinerImpl.html#outerJoinMonotonic(left:org.saddle.Index[T],right:org.saddle.Index[T]):org.saddle.index.ReIndexer[T]", "kind" : "def"}, {"label" : "outerJoinMonotonicUnique", "tail" : "(left: Index[T], right: Index[T]): ReIndexer[T]", "member" : "org.saddle.index.JoinerImpl.outerJoinMonotonicUnique", "link" : "org\/saddle\/index\/JoinerImpl.html#outerJoinMonotonicUnique(left:org.saddle.Index[T],right:org.saddle.Index[T]):org.saddle.index.ReIndexer[T]", "kind" : "def"}, {"label" : "innerJoinUnique", "tail" : "(left: Index[T], right: Index[T]): ReIndexer[T]", "member" : "org.saddle.index.JoinerImpl.innerJoinUnique", "link" : "org\/saddle\/index\/JoinerImpl.html#innerJoinUnique(left:org.saddle.Index[T],right:org.saddle.Index[T]):org.saddle.index.ReIndexer[T]", "kind" : "def"}, {"label" : "innerJoinMonotonic", "tail" : "(left: Index[T], right: Index[T]): ReIndexer[T]", "member" : "org.saddle.index.JoinerImpl.innerJoinMonotonic", "link" : "org\/saddle\/index\/JoinerImpl.html#innerJoinMonotonic(left:org.saddle.Index[T],right:org.saddle.Index[T]):org.saddle.index.ReIndexer[T]", "kind" : "def"}, {"label" : "innerJoinMonotonicUnique", "tail" : "(left: Index[T], right: Index[T]): ReIndexer[T]", "member" : "org.saddle.index.JoinerImpl.innerJoinMonotonicUnique", "link" : "org\/saddle\/index\/JoinerImpl.html#innerJoinMonotonicUnique(left:org.saddle.Index[T],right:org.saddle.Index[T]):org.saddle.index.ReIndexer[T]", "kind" : "def"}, {"label" : "join", "tail" : "(left: Index[T], right: Index[T], how: JoinType): ReIndexer[T]", "member" : "org.saddle.index.JoinerImpl.join", "link" : "org\/saddle\/index\/JoinerImpl.html#join(left:org.saddle.Index[T],right:org.saddle.Index[T],how:org.saddle.index.JoinType):org.saddle.index.ReIndexer[T]", "kind" : "def"}, {"member" : "org.saddle.index.JoinerImpl#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/JoinerImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/JoinerImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/JoinerImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/JoinerImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/JoinerImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/JoinerImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/JoinerImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/JoinerImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/JoinerImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/JoinerImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/JoinerImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/JoinerImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/JoinerImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/JoinerImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/JoinerImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/JoinerImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/JoinerImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/JoinerImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/JoinerImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/index\/JoinerImpl.html", "kind" : "class"}, {"name" : "org.saddle.index.JoinType", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/JoinType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/JoinType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/JoinType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/JoinType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/JoinType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/JoinType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/JoinType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/JoinType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/JoinType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/JoinType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/JoinType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/JoinType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/JoinType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/JoinType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/JoinType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/JoinType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/JoinType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/JoinType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/JoinType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "There are four basic joins which may be performed betweentwo indexed Saddle objects such as org.saddle.Seriesor org.saddle.Frame.", "trait" : "org\/saddle\/index\/JoinType.html", "kind" : "trait"}, {"name" : "org.saddle.index.LeftJoin", "shortDescription" : "", "object" : "org\/saddle\/index\/LeftJoin$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/LeftJoin$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/LeftJoin$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/LeftJoin$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/LeftJoin$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/LeftJoin$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/LeftJoin$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/LeftJoin$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/LeftJoin$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/LeftJoin$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/LeftJoin$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/LeftJoin$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/LeftJoin$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/LeftJoin$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/LeftJoin$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/LeftJoin$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/LeftJoin$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/LeftJoin$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/LeftJoin$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/LeftJoin$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.index.Melter", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/Melter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/Melter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/Melter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/Melter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/Melter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/Melter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/Melter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Melter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Melter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Melter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/Melter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/Melter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/Melter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/Melter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/Melter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/Melter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/Melter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/Melter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/Melter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "ord", "tail" : "(): ORD[C]", "member" : "org.saddle.index.Melter.ord", "link" : "org\/saddle\/index\/Melter.html#ord:org.saddle.ORD[C]", "kind" : "abstract def"}, {"label" : "tag", "tail" : "(): ST[C]", "member" : "org.saddle.index.Melter.tag", "link" : "org\/saddle\/index\/Melter.html#tag:org.saddle.ST[C]", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(a: A, b: B): C", "member" : "org.saddle.index.Melter.apply", "link" : "org\/saddle\/index\/Melter.html#apply(a:A,b:B):C", "kind" : "abstract def"}], "shortDescription" : "A Melter operates on a TupleN and a TupleM and produces a TupleN+M which iscomposed of the corresponding tuple elements.", "object" : "org\/saddle\/index\/Melter$.html", "members_object" : [{"label" : "melt7_2", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H], arg16: ST[I], arg17: ORD[I]): Melter[(A, B, C, D, E, F, G), (H, I), (A, B, C, D, E, F, G, H, I)]", "member" : "org.saddle.index.Melter.melt7_2", "link" : "org\/saddle\/index\/Melter$.html#melt7_2[A,B,C,D,E,F,G,H,I](implicitevidence$467:org.saddle.ST[A],implicitevidence$468:org.saddle.ORD[A],implicitevidence$469:org.saddle.ST[B],implicitevidence$470:org.saddle.ORD[B],implicitevidence$471:org.saddle.ST[C],implicitevidence$472:org.saddle.ORD[C],implicitevidence$473:org.saddle.ST[D],implicitevidence$474:org.saddle.ORD[D],implicitevidence$475:org.saddle.ST[E],implicitevidence$476:org.saddle.ORD[E],implicitevidence$477:org.saddle.ST[F],implicitevidence$478:org.saddle.ORD[F],implicitevidence$479:org.saddle.ST[G],implicitevidence$480:org.saddle.ORD[G],implicitevidence$481:org.saddle.ST[H],implicitevidence$482:org.saddle.ORD[H],implicitevidence$483:org.saddle.ST[I],implicitevidence$484:org.saddle.ORD[I]):org.saddle.index.Melter[(A,B,C,D,E,F,G),(H,I),(A,B,C,D,E,F,G,H,I)]", "kind" : "implicit def"}, {"label" : "melt6_3", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H], arg16: ST[I], arg17: ORD[I]): Melter[(A, B, C, D, E, F), (G, H, I), (A, B, C, D, E, F, G, H, I)]", "member" : "org.saddle.index.Melter.melt6_3", "link" : "org\/saddle\/index\/Melter$.html#melt6_3[A,B,C,D,E,F,G,H,I](implicitevidence$449:org.saddle.ST[A],implicitevidence$450:org.saddle.ORD[A],implicitevidence$451:org.saddle.ST[B],implicitevidence$452:org.saddle.ORD[B],implicitevidence$453:org.saddle.ST[C],implicitevidence$454:org.saddle.ORD[C],implicitevidence$455:org.saddle.ST[D],implicitevidence$456:org.saddle.ORD[D],implicitevidence$457:org.saddle.ST[E],implicitevidence$458:org.saddle.ORD[E],implicitevidence$459:org.saddle.ST[F],implicitevidence$460:org.saddle.ORD[F],implicitevidence$461:org.saddle.ST[G],implicitevidence$462:org.saddle.ORD[G],implicitevidence$463:org.saddle.ST[H],implicitevidence$464:org.saddle.ORD[H],implicitevidence$465:org.saddle.ST[I],implicitevidence$466:org.saddle.ORD[I]):org.saddle.index.Melter[(A,B,C,D,E,F),(G,H,I),(A,B,C,D,E,F,G,H,I)]", "kind" : "implicit def"}, {"label" : "melt5_4", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H], arg16: ST[I], arg17: ORD[I]): Melter[(A, B, C, D, E), (F, G, H, I), (A, B, C, D, E, F, G, H, I)]", "member" : "org.saddle.index.Melter.melt5_4", "link" : "org\/saddle\/index\/Melter$.html#melt5_4[A,B,C,D,E,F,G,H,I](implicitevidence$431:org.saddle.ST[A],implicitevidence$432:org.saddle.ORD[A],implicitevidence$433:org.saddle.ST[B],implicitevidence$434:org.saddle.ORD[B],implicitevidence$435:org.saddle.ST[C],implicitevidence$436:org.saddle.ORD[C],implicitevidence$437:org.saddle.ST[D],implicitevidence$438:org.saddle.ORD[D],implicitevidence$439:org.saddle.ST[E],implicitevidence$440:org.saddle.ORD[E],implicitevidence$441:org.saddle.ST[F],implicitevidence$442:org.saddle.ORD[F],implicitevidence$443:org.saddle.ST[G],implicitevidence$444:org.saddle.ORD[G],implicitevidence$445:org.saddle.ST[H],implicitevidence$446:org.saddle.ORD[H],implicitevidence$447:org.saddle.ST[I],implicitevidence$448:org.saddle.ORD[I]):org.saddle.index.Melter[(A,B,C,D,E),(F,G,H,I),(A,B,C,D,E,F,G,H,I)]", "kind" : "implicit def"}, {"label" : "melt4_5", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H], arg16: ST[I], arg17: ORD[I]): Melter[(A, B, C, D), (E, F, G, H, I), (A, B, C, D, E, F, G, H, I)]", "member" : "org.saddle.index.Melter.melt4_5", "link" : "org\/saddle\/index\/Melter$.html#melt4_5[A,B,C,D,E,F,G,H,I](implicitevidence$413:org.saddle.ST[A],implicitevidence$414:org.saddle.ORD[A],implicitevidence$415:org.saddle.ST[B],implicitevidence$416:org.saddle.ORD[B],implicitevidence$417:org.saddle.ST[C],implicitevidence$418:org.saddle.ORD[C],implicitevidence$419:org.saddle.ST[D],implicitevidence$420:org.saddle.ORD[D],implicitevidence$421:org.saddle.ST[E],implicitevidence$422:org.saddle.ORD[E],implicitevidence$423:org.saddle.ST[F],implicitevidence$424:org.saddle.ORD[F],implicitevidence$425:org.saddle.ST[G],implicitevidence$426:org.saddle.ORD[G],implicitevidence$427:org.saddle.ST[H],implicitevidence$428:org.saddle.ORD[H],implicitevidence$429:org.saddle.ST[I],implicitevidence$430:org.saddle.ORD[I]):org.saddle.index.Melter[(A,B,C,D),(E,F,G,H,I),(A,B,C,D,E,F,G,H,I)]", "kind" : "implicit def"}, {"label" : "melt3_6", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H], arg16: ST[I], arg17: ORD[I]): Melter[(A, B, C), (D, E, F, G, H, I), (A, B, C, D, E, F, G, H, I)]", "member" : "org.saddle.index.Melter.melt3_6", "link" : "org\/saddle\/index\/Melter$.html#melt3_6[A,B,C,D,E,F,G,H,I](implicitevidence$395:org.saddle.ST[A],implicitevidence$396:org.saddle.ORD[A],implicitevidence$397:org.saddle.ST[B],implicitevidence$398:org.saddle.ORD[B],implicitevidence$399:org.saddle.ST[C],implicitevidence$400:org.saddle.ORD[C],implicitevidence$401:org.saddle.ST[D],implicitevidence$402:org.saddle.ORD[D],implicitevidence$403:org.saddle.ST[E],implicitevidence$404:org.saddle.ORD[E],implicitevidence$405:org.saddle.ST[F],implicitevidence$406:org.saddle.ORD[F],implicitevidence$407:org.saddle.ST[G],implicitevidence$408:org.saddle.ORD[G],implicitevidence$409:org.saddle.ST[H],implicitevidence$410:org.saddle.ORD[H],implicitevidence$411:org.saddle.ST[I],implicitevidence$412:org.saddle.ORD[I]):org.saddle.index.Melter[(A,B,C),(D,E,F,G,H,I),(A,B,C,D,E,F,G,H,I)]", "kind" : "implicit def"}, {"label" : "melt2_7", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H], arg16: ST[I], arg17: ORD[I]): Melter[(A, B), (C, D, E, F, G, H, I), (A, B, C, D, E, F, G, H, I)]", "member" : "org.saddle.index.Melter.melt2_7", "link" : "org\/saddle\/index\/Melter$.html#melt2_7[A,B,C,D,E,F,G,H,I](implicitevidence$377:org.saddle.ST[A],implicitevidence$378:org.saddle.ORD[A],implicitevidence$379:org.saddle.ST[B],implicitevidence$380:org.saddle.ORD[B],implicitevidence$381:org.saddle.ST[C],implicitevidence$382:org.saddle.ORD[C],implicitevidence$383:org.saddle.ST[D],implicitevidence$384:org.saddle.ORD[D],implicitevidence$385:org.saddle.ST[E],implicitevidence$386:org.saddle.ORD[E],implicitevidence$387:org.saddle.ST[F],implicitevidence$388:org.saddle.ORD[F],implicitevidence$389:org.saddle.ST[G],implicitevidence$390:org.saddle.ORD[G],implicitevidence$391:org.saddle.ST[H],implicitevidence$392:org.saddle.ORD[H],implicitevidence$393:org.saddle.ST[I],implicitevidence$394:org.saddle.ORD[I]):org.saddle.index.Melter[(A,B),(C,D,E,F,G,H,I),(A,B,C,D,E,F,G,H,I)]", "kind" : "implicit def"}, {"label" : "melt6_2", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H]): Melter[(A, B, C, D, E, F), (G, H), (A, B, C, D, E, F, G, H)]", "member" : "org.saddle.index.Melter.melt6_2", "link" : "org\/saddle\/index\/Melter$.html#melt6_2[A,B,C,D,E,F,G,H](implicitevidence$361:org.saddle.ST[A],implicitevidence$362:org.saddle.ORD[A],implicitevidence$363:org.saddle.ST[B],implicitevidence$364:org.saddle.ORD[B],implicitevidence$365:org.saddle.ST[C],implicitevidence$366:org.saddle.ORD[C],implicitevidence$367:org.saddle.ST[D],implicitevidence$368:org.saddle.ORD[D],implicitevidence$369:org.saddle.ST[E],implicitevidence$370:org.saddle.ORD[E],implicitevidence$371:org.saddle.ST[F],implicitevidence$372:org.saddle.ORD[F],implicitevidence$373:org.saddle.ST[G],implicitevidence$374:org.saddle.ORD[G],implicitevidence$375:org.saddle.ST[H],implicitevidence$376:org.saddle.ORD[H]):org.saddle.index.Melter[(A,B,C,D,E,F),(G,H),(A,B,C,D,E,F,G,H)]", "kind" : "implicit def"}, {"label" : "melt5_3", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H]): Melter[(A, B, C, D, E), (F, G, H), (A, B, C, D, E, F, G, H)]", "member" : "org.saddle.index.Melter.melt5_3", "link" : "org\/saddle\/index\/Melter$.html#melt5_3[A,B,C,D,E,F,G,H](implicitevidence$345:org.saddle.ST[A],implicitevidence$346:org.saddle.ORD[A],implicitevidence$347:org.saddle.ST[B],implicitevidence$348:org.saddle.ORD[B],implicitevidence$349:org.saddle.ST[C],implicitevidence$350:org.saddle.ORD[C],implicitevidence$351:org.saddle.ST[D],implicitevidence$352:org.saddle.ORD[D],implicitevidence$353:org.saddle.ST[E],implicitevidence$354:org.saddle.ORD[E],implicitevidence$355:org.saddle.ST[F],implicitevidence$356:org.saddle.ORD[F],implicitevidence$357:org.saddle.ST[G],implicitevidence$358:org.saddle.ORD[G],implicitevidence$359:org.saddle.ST[H],implicitevidence$360:org.saddle.ORD[H]):org.saddle.index.Melter[(A,B,C,D,E),(F,G,H),(A,B,C,D,E,F,G,H)]", "kind" : "implicit def"}, {"label" : "melt4_4", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H]): Melter[(A, B, C, D), (E, F, G, H), (A, B, C, D, E, F, G, H)]", "member" : "org.saddle.index.Melter.melt4_4", "link" : "org\/saddle\/index\/Melter$.html#melt4_4[A,B,C,D,E,F,G,H](implicitevidence$329:org.saddle.ST[A],implicitevidence$330:org.saddle.ORD[A],implicitevidence$331:org.saddle.ST[B],implicitevidence$332:org.saddle.ORD[B],implicitevidence$333:org.saddle.ST[C],implicitevidence$334:org.saddle.ORD[C],implicitevidence$335:org.saddle.ST[D],implicitevidence$336:org.saddle.ORD[D],implicitevidence$337:org.saddle.ST[E],implicitevidence$338:org.saddle.ORD[E],implicitevidence$339:org.saddle.ST[F],implicitevidence$340:org.saddle.ORD[F],implicitevidence$341:org.saddle.ST[G],implicitevidence$342:org.saddle.ORD[G],implicitevidence$343:org.saddle.ST[H],implicitevidence$344:org.saddle.ORD[H]):org.saddle.index.Melter[(A,B,C,D),(E,F,G,H),(A,B,C,D,E,F,G,H)]", "kind" : "implicit def"}, {"label" : "melt3_5", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H]): Melter[(A, B, C), (D, E, F, G, H), (A, B, C, D, E, F, G, H)]", "member" : "org.saddle.index.Melter.melt3_5", "link" : "org\/saddle\/index\/Melter$.html#melt3_5[A,B,C,D,E,F,G,H](implicitevidence$313:org.saddle.ST[A],implicitevidence$314:org.saddle.ORD[A],implicitevidence$315:org.saddle.ST[B],implicitevidence$316:org.saddle.ORD[B],implicitevidence$317:org.saddle.ST[C],implicitevidence$318:org.saddle.ORD[C],implicitevidence$319:org.saddle.ST[D],implicitevidence$320:org.saddle.ORD[D],implicitevidence$321:org.saddle.ST[E],implicitevidence$322:org.saddle.ORD[E],implicitevidence$323:org.saddle.ST[F],implicitevidence$324:org.saddle.ORD[F],implicitevidence$325:org.saddle.ST[G],implicitevidence$326:org.saddle.ORD[G],implicitevidence$327:org.saddle.ST[H],implicitevidence$328:org.saddle.ORD[H]):org.saddle.index.Melter[(A,B,C),(D,E,F,G,H),(A,B,C,D,E,F,G,H)]", "kind" : "implicit def"}, {"label" : "melt2_6", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H]): Melter[(A, B), (C, D, E, F, G, H), (A, B, C, D, E, F, G, H)]", "member" : "org.saddle.index.Melter.melt2_6", "link" : "org\/saddle\/index\/Melter$.html#melt2_6[A,B,C,D,E,F,G,H](implicitevidence$297:org.saddle.ST[A],implicitevidence$298:org.saddle.ORD[A],implicitevidence$299:org.saddle.ST[B],implicitevidence$300:org.saddle.ORD[B],implicitevidence$301:org.saddle.ST[C],implicitevidence$302:org.saddle.ORD[C],implicitevidence$303:org.saddle.ST[D],implicitevidence$304:org.saddle.ORD[D],implicitevidence$305:org.saddle.ST[E],implicitevidence$306:org.saddle.ORD[E],implicitevidence$307:org.saddle.ST[F],implicitevidence$308:org.saddle.ORD[F],implicitevidence$309:org.saddle.ST[G],implicitevidence$310:org.saddle.ORD[G],implicitevidence$311:org.saddle.ST[H],implicitevidence$312:org.saddle.ORD[H]):org.saddle.index.Melter[(A,B),(C,D,E,F,G,H),(A,B,C,D,E,F,G,H)]", "kind" : "implicit def"}, {"label" : "melt5_2", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G]): Melter[(A, B, C, D, E), (F, G), (A, B, C, D, E, F, G)]", "member" : "org.saddle.index.Melter.melt5_2", "link" : "org\/saddle\/index\/Melter$.html#melt5_2[A,B,C,D,E,F,G](implicitevidence$283:org.saddle.ST[A],implicitevidence$284:org.saddle.ORD[A],implicitevidence$285:org.saddle.ST[B],implicitevidence$286:org.saddle.ORD[B],implicitevidence$287:org.saddle.ST[C],implicitevidence$288:org.saddle.ORD[C],implicitevidence$289:org.saddle.ST[D],implicitevidence$290:org.saddle.ORD[D],implicitevidence$291:org.saddle.ST[E],implicitevidence$292:org.saddle.ORD[E],implicitevidence$293:org.saddle.ST[F],implicitevidence$294:org.saddle.ORD[F],implicitevidence$295:org.saddle.ST[G],implicitevidence$296:org.saddle.ORD[G]):org.saddle.index.Melter[(A,B,C,D,E),(F,G),(A,B,C,D,E,F,G)]", "kind" : "implicit def"}, {"label" : "melt4_3", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G]): Melter[(A, B, C, D), (E, F, G), (A, B, C, D, E, F, G)]", "member" : "org.saddle.index.Melter.melt4_3", "link" : "org\/saddle\/index\/Melter$.html#melt4_3[A,B,C,D,E,F,G](implicitevidence$269:org.saddle.ST[A],implicitevidence$270:org.saddle.ORD[A],implicitevidence$271:org.saddle.ST[B],implicitevidence$272:org.saddle.ORD[B],implicitevidence$273:org.saddle.ST[C],implicitevidence$274:org.saddle.ORD[C],implicitevidence$275:org.saddle.ST[D],implicitevidence$276:org.saddle.ORD[D],implicitevidence$277:org.saddle.ST[E],implicitevidence$278:org.saddle.ORD[E],implicitevidence$279:org.saddle.ST[F],implicitevidence$280:org.saddle.ORD[F],implicitevidence$281:org.saddle.ST[G],implicitevidence$282:org.saddle.ORD[G]):org.saddle.index.Melter[(A,B,C,D),(E,F,G),(A,B,C,D,E,F,G)]", "kind" : "implicit def"}, {"label" : "melt3_4", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G]): Melter[(A, B, C), (D, E, F, G), (A, B, C, D, E, F, G)]", "member" : "org.saddle.index.Melter.melt3_4", "link" : "org\/saddle\/index\/Melter$.html#melt3_4[A,B,C,D,E,F,G](implicitevidence$255:org.saddle.ST[A],implicitevidence$256:org.saddle.ORD[A],implicitevidence$257:org.saddle.ST[B],implicitevidence$258:org.saddle.ORD[B],implicitevidence$259:org.saddle.ST[C],implicitevidence$260:org.saddle.ORD[C],implicitevidence$261:org.saddle.ST[D],implicitevidence$262:org.saddle.ORD[D],implicitevidence$263:org.saddle.ST[E],implicitevidence$264:org.saddle.ORD[E],implicitevidence$265:org.saddle.ST[F],implicitevidence$266:org.saddle.ORD[F],implicitevidence$267:org.saddle.ST[G],implicitevidence$268:org.saddle.ORD[G]):org.saddle.index.Melter[(A,B,C),(D,E,F,G),(A,B,C,D,E,F,G)]", "kind" : "implicit def"}, {"label" : "melt2_5", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G]): Melter[(A, B), (C, D, E, F, G), (A, B, C, D, E, F, G)]", "member" : "org.saddle.index.Melter.melt2_5", "link" : "org\/saddle\/index\/Melter$.html#melt2_5[A,B,C,D,E,F,G](implicitevidence$241:org.saddle.ST[A],implicitevidence$242:org.saddle.ORD[A],implicitevidence$243:org.saddle.ST[B],implicitevidence$244:org.saddle.ORD[B],implicitevidence$245:org.saddle.ST[C],implicitevidence$246:org.saddle.ORD[C],implicitevidence$247:org.saddle.ST[D],implicitevidence$248:org.saddle.ORD[D],implicitevidence$249:org.saddle.ST[E],implicitevidence$250:org.saddle.ORD[E],implicitevidence$251:org.saddle.ST[F],implicitevidence$252:org.saddle.ORD[F],implicitevidence$253:org.saddle.ST[G],implicitevidence$254:org.saddle.ORD[G]):org.saddle.index.Melter[(A,B),(C,D,E,F,G),(A,B,C,D,E,F,G)]", "kind" : "implicit def"}, {"label" : "melt4_2", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F]): Melter[(A, B, C, D), (E, F), (A, B, C, D, E, F)]", "member" : "org.saddle.index.Melter.melt4_2", "link" : "org\/saddle\/index\/Melter$.html#melt4_2[A,B,C,D,E,F](implicitevidence$229:org.saddle.ST[A],implicitevidence$230:org.saddle.ORD[A],implicitevidence$231:org.saddle.ST[B],implicitevidence$232:org.saddle.ORD[B],implicitevidence$233:org.saddle.ST[C],implicitevidence$234:org.saddle.ORD[C],implicitevidence$235:org.saddle.ST[D],implicitevidence$236:org.saddle.ORD[D],implicitevidence$237:org.saddle.ST[E],implicitevidence$238:org.saddle.ORD[E],implicitevidence$239:org.saddle.ST[F],implicitevidence$240:org.saddle.ORD[F]):org.saddle.index.Melter[(A,B,C,D),(E,F),(A,B,C,D,E,F)]", "kind" : "implicit def"}, {"label" : "melt3_3", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F]): Melter[(A, B, C), (D, E, F), (A, B, C, D, E, F)]", "member" : "org.saddle.index.Melter.melt3_3", "link" : "org\/saddle\/index\/Melter$.html#melt3_3[A,B,C,D,E,F](implicitevidence$217:org.saddle.ST[A],implicitevidence$218:org.saddle.ORD[A],implicitevidence$219:org.saddle.ST[B],implicitevidence$220:org.saddle.ORD[B],implicitevidence$221:org.saddle.ST[C],implicitevidence$222:org.saddle.ORD[C],implicitevidence$223:org.saddle.ST[D],implicitevidence$224:org.saddle.ORD[D],implicitevidence$225:org.saddle.ST[E],implicitevidence$226:org.saddle.ORD[E],implicitevidence$227:org.saddle.ST[F],implicitevidence$228:org.saddle.ORD[F]):org.saddle.index.Melter[(A,B,C),(D,E,F),(A,B,C,D,E,F)]", "kind" : "implicit def"}, {"label" : "melt2_4", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F]): Melter[(A, B), (C, D, E, F), (A, B, C, D, E, F)]", "member" : "org.saddle.index.Melter.melt2_4", "link" : "org\/saddle\/index\/Melter$.html#melt2_4[A,B,C,D,E,F](implicitevidence$205:org.saddle.ST[A],implicitevidence$206:org.saddle.ORD[A],implicitevidence$207:org.saddle.ST[B],implicitevidence$208:org.saddle.ORD[B],implicitevidence$209:org.saddle.ST[C],implicitevidence$210:org.saddle.ORD[C],implicitevidence$211:org.saddle.ST[D],implicitevidence$212:org.saddle.ORD[D],implicitevidence$213:org.saddle.ST[E],implicitevidence$214:org.saddle.ORD[E],implicitevidence$215:org.saddle.ST[F],implicitevidence$216:org.saddle.ORD[F]):org.saddle.index.Melter[(A,B),(C,D,E,F),(A,B,C,D,E,F)]", "kind" : "implicit def"}, {"label" : "melt3_2", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E]): Melter[(A, B, C), (C, D), (A, B, C, C, D)]", "member" : "org.saddle.index.Melter.melt3_2", "link" : "org\/saddle\/index\/Melter$.html#melt3_2[A,B,C,D,E](implicitevidence$195:org.saddle.ST[A],implicitevidence$196:org.saddle.ORD[A],implicitevidence$197:org.saddle.ST[B],implicitevidence$198:org.saddle.ORD[B],implicitevidence$199:org.saddle.ST[C],implicitevidence$200:org.saddle.ORD[C],implicitevidence$201:org.saddle.ST[D],implicitevidence$202:org.saddle.ORD[D],implicitevidence$203:org.saddle.ST[E],implicitevidence$204:org.saddle.ORD[E]):org.saddle.index.Melter[(A,B,C),(C,D),(A,B,C,C,D)]", "kind" : "implicit def"}, {"label" : "melt2_3", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E]): Melter[(A, B), (C, D, E), (A, B, C, D, E)]", "member" : "org.saddle.index.Melter.melt2_3", "link" : "org\/saddle\/index\/Melter$.html#melt2_3[A,B,C,D,E](implicitevidence$185:org.saddle.ST[A],implicitevidence$186:org.saddle.ORD[A],implicitevidence$187:org.saddle.ST[B],implicitevidence$188:org.saddle.ORD[B],implicitevidence$189:org.saddle.ST[C],implicitevidence$190:org.saddle.ORD[C],implicitevidence$191:org.saddle.ST[D],implicitevidence$192:org.saddle.ORD[D],implicitevidence$193:org.saddle.ST[E],implicitevidence$194:org.saddle.ORD[E]):org.saddle.index.Melter[(A,B),(C,D,E),(A,B,C,D,E)]", "kind" : "implicit def"}, {"label" : "melt2_2", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D]): Melter[(A, B), (C, D), (A, B, C, D)]", "member" : "org.saddle.index.Melter.melt2_2", "link" : "org\/saddle\/index\/Melter$.html#melt2_2[A,B,C,D](implicitevidence$177:org.saddle.ST[A],implicitevidence$178:org.saddle.ORD[A],implicitevidence$179:org.saddle.ST[B],implicitevidence$180:org.saddle.ORD[B],implicitevidence$181:org.saddle.ST[C],implicitevidence$182:org.saddle.ORD[C],implicitevidence$183:org.saddle.ST[D],implicitevidence$184:org.saddle.ORD[D]):org.saddle.index.Melter[(A,B),(C,D),(A,B,C,D)]", "kind" : "implicit def"}, {"label" : "melt8_1", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H], arg16: ST[I], arg17: ORD[I]): Melter[(A, B, C, D, E, F, G, H), I, (A, B, C, D, E, F, G, H, I)]", "member" : "org.saddle.index.MelterLowPriority.melt8_1", "link" : "org\/saddle\/index\/Melter$.html#melt8_1[A,B,C,D,E,F,G,H,I](implicitevidence$159:org.saddle.ST[A],implicitevidence$160:org.saddle.ORD[A],implicitevidence$161:org.saddle.ST[B],implicitevidence$162:org.saddle.ORD[B],implicitevidence$163:org.saddle.ST[C],implicitevidence$164:org.saddle.ORD[C],implicitevidence$165:org.saddle.ST[D],implicitevidence$166:org.saddle.ORD[D],implicitevidence$167:org.saddle.ST[E],implicitevidence$168:org.saddle.ORD[E],implicitevidence$169:org.saddle.ST[F],implicitevidence$170:org.saddle.ORD[F],implicitevidence$171:org.saddle.ST[G],implicitevidence$172:org.saddle.ORD[G],implicitevidence$173:org.saddle.ST[H],implicitevidence$174:org.saddle.ORD[H],implicitevidence$175:org.saddle.ST[I],implicitevidence$176:org.saddle.ORD[I]):org.saddle.index.Melter[(A,B,C,D,E,F,G,H),I,(A,B,C,D,E,F,G,H,I)]", "kind" : "implicit def"}, {"label" : "melt7_1", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H]): Melter[(A, B, C, D, E, F, G), H, (A, B, C, D, E, F, G, H)]", "member" : "org.saddle.index.MelterLowPriority.melt7_1", "link" : "org\/saddle\/index\/Melter$.html#melt7_1[A,B,C,D,E,F,G,H](implicitevidence$143:org.saddle.ST[A],implicitevidence$144:org.saddle.ORD[A],implicitevidence$145:org.saddle.ST[B],implicitevidence$146:org.saddle.ORD[B],implicitevidence$147:org.saddle.ST[C],implicitevidence$148:org.saddle.ORD[C],implicitevidence$149:org.saddle.ST[D],implicitevidence$150:org.saddle.ORD[D],implicitevidence$151:org.saddle.ST[E],implicitevidence$152:org.saddle.ORD[E],implicitevidence$153:org.saddle.ST[F],implicitevidence$154:org.saddle.ORD[F],implicitevidence$155:org.saddle.ST[G],implicitevidence$156:org.saddle.ORD[G],implicitevidence$157:org.saddle.ST[H],implicitevidence$158:org.saddle.ORD[H]):org.saddle.index.Melter[(A,B,C,D,E,F,G),H,(A,B,C,D,E,F,G,H)]", "kind" : "implicit def"}, {"label" : "melt6_1", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G]): Melter[(A, B, C, D, E, F), G, (A, B, C, D, E, F, G)]", "member" : "org.saddle.index.MelterLowPriority.melt6_1", "link" : "org\/saddle\/index\/Melter$.html#melt6_1[A,B,C,D,E,F,G](implicitevidence$129:org.saddle.ST[A],implicitevidence$130:org.saddle.ORD[A],implicitevidence$131:org.saddle.ST[B],implicitevidence$132:org.saddle.ORD[B],implicitevidence$133:org.saddle.ST[C],implicitevidence$134:org.saddle.ORD[C],implicitevidence$135:org.saddle.ST[D],implicitevidence$136:org.saddle.ORD[D],implicitevidence$137:org.saddle.ST[E],implicitevidence$138:org.saddle.ORD[E],implicitevidence$139:org.saddle.ST[F],implicitevidence$140:org.saddle.ORD[F],implicitevidence$141:org.saddle.ST[G],implicitevidence$142:org.saddle.ORD[G]):org.saddle.index.Melter[(A,B,C,D,E,F),G,(A,B,C,D,E,F,G)]", "kind" : "implicit def"}, {"label" : "melt5_1", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F]): Melter[(A, B, C, D, E), F, (A, B, C, D, E, F)]", "member" : "org.saddle.index.MelterLowPriority.melt5_1", "link" : "org\/saddle\/index\/Melter$.html#melt5_1[A,B,C,D,E,F](implicitevidence$117:org.saddle.ST[A],implicitevidence$118:org.saddle.ORD[A],implicitevidence$119:org.saddle.ST[B],implicitevidence$120:org.saddle.ORD[B],implicitevidence$121:org.saddle.ST[C],implicitevidence$122:org.saddle.ORD[C],implicitevidence$123:org.saddle.ST[D],implicitevidence$124:org.saddle.ORD[D],implicitevidence$125:org.saddle.ST[E],implicitevidence$126:org.saddle.ORD[E],implicitevidence$127:org.saddle.ST[F],implicitevidence$128:org.saddle.ORD[F]):org.saddle.index.Melter[(A,B,C,D,E),F,(A,B,C,D,E,F)]", "kind" : "implicit def"}, {"label" : "melt4_1", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E]): Melter[(A, B, C, D), E, (A, B, C, D, E)]", "member" : "org.saddle.index.MelterLowPriority.melt4_1", "link" : "org\/saddle\/index\/Melter$.html#melt4_1[A,B,C,D,E](implicitevidence$107:org.saddle.ST[A],implicitevidence$108:org.saddle.ORD[A],implicitevidence$109:org.saddle.ST[B],implicitevidence$110:org.saddle.ORD[B],implicitevidence$111:org.saddle.ST[C],implicitevidence$112:org.saddle.ORD[C],implicitevidence$113:org.saddle.ST[D],implicitevidence$114:org.saddle.ORD[D],implicitevidence$115:org.saddle.ST[E],implicitevidence$116:org.saddle.ORD[E]):org.saddle.index.Melter[(A,B,C,D),E,(A,B,C,D,E)]", "kind" : "implicit def"}, {"label" : "melt3_1", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D]): Melter[(A, B, C), D, (A, B, C, D)]", "member" : "org.saddle.index.MelterLowPriority.melt3_1", "link" : "org\/saddle\/index\/Melter$.html#melt3_1[A,B,C,D](implicitevidence$99:org.saddle.ST[A],implicitevidence$100:org.saddle.ORD[A],implicitevidence$101:org.saddle.ST[B],implicitevidence$102:org.saddle.ORD[B],implicitevidence$103:org.saddle.ST[C],implicitevidence$104:org.saddle.ORD[C],implicitevidence$105:org.saddle.ST[D],implicitevidence$106:org.saddle.ORD[D]):org.saddle.index.Melter[(A,B,C),D,(A,B,C,D)]", "kind" : "implicit def"}, {"label" : "melt2_1", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C]): Melter[(A, B), C, (A, B, C)]", "member" : "org.saddle.index.MelterLowPriority.melt2_1", "link" : "org\/saddle\/index\/Melter$.html#melt2_1[A,B,C](implicitevidence$93:org.saddle.ST[A],implicitevidence$94:org.saddle.ORD[A],implicitevidence$95:org.saddle.ST[B],implicitevidence$96:org.saddle.ORD[B],implicitevidence$97:org.saddle.ST[C],implicitevidence$98:org.saddle.ORD[C]):org.saddle.index.Melter[(A,B),C,(A,B,C)]", "kind" : "implicit def"}, {"label" : "melt1_8", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H], arg16: ST[I], arg17: ORD[I]): Melter[A, (B, C, D, E, F, G, H, I), (A, B, C, D, E, F, G, H, I)]", "member" : "org.saddle.index.MelterLowPriority.melt1_8", "link" : "org\/saddle\/index\/Melter$.html#melt1_8[A,B,C,D,E,F,G,H,I](implicitevidence$75:org.saddle.ST[A],implicitevidence$76:org.saddle.ORD[A],implicitevidence$77:org.saddle.ST[B],implicitevidence$78:org.saddle.ORD[B],implicitevidence$79:org.saddle.ST[C],implicitevidence$80:org.saddle.ORD[C],implicitevidence$81:org.saddle.ST[D],implicitevidence$82:org.saddle.ORD[D],implicitevidence$83:org.saddle.ST[E],implicitevidence$84:org.saddle.ORD[E],implicitevidence$85:org.saddle.ST[F],implicitevidence$86:org.saddle.ORD[F],implicitevidence$87:org.saddle.ST[G],implicitevidence$88:org.saddle.ORD[G],implicitevidence$89:org.saddle.ST[H],implicitevidence$90:org.saddle.ORD[H],implicitevidence$91:org.saddle.ST[I],implicitevidence$92:org.saddle.ORD[I]):org.saddle.index.Melter[A,(B,C,D,E,F,G,H,I),(A,B,C,D,E,F,G,H,I)]", "kind" : "implicit def"}, {"label" : "melt1_7", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H]): Melter[A, (B, C, D, E, F, G, H), (A, B, C, D, E, F, G, H)]", "member" : "org.saddle.index.MelterLowPriority.melt1_7", "link" : "org\/saddle\/index\/Melter$.html#melt1_7[A,B,C,D,E,F,G,H](implicitevidence$59:org.saddle.ST[A],implicitevidence$60:org.saddle.ORD[A],implicitevidence$61:org.saddle.ST[B],implicitevidence$62:org.saddle.ORD[B],implicitevidence$63:org.saddle.ST[C],implicitevidence$64:org.saddle.ORD[C],implicitevidence$65:org.saddle.ST[D],implicitevidence$66:org.saddle.ORD[D],implicitevidence$67:org.saddle.ST[E],implicitevidence$68:org.saddle.ORD[E],implicitevidence$69:org.saddle.ST[F],implicitevidence$70:org.saddle.ORD[F],implicitevidence$71:org.saddle.ST[G],implicitevidence$72:org.saddle.ORD[G],implicitevidence$73:org.saddle.ST[H],implicitevidence$74:org.saddle.ORD[H]):org.saddle.index.Melter[A,(B,C,D,E,F,G,H),(A,B,C,D,E,F,G,H)]", "kind" : "implicit def"}, {"label" : "melt1_6", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G]): Melter[A, (B, C, D, E, F, G), (A, B, C, D, E, F, G)]", "member" : "org.saddle.index.MelterLowPriority.melt1_6", "link" : "org\/saddle\/index\/Melter$.html#melt1_6[A,B,C,D,E,F,G](implicitevidence$45:org.saddle.ST[A],implicitevidence$46:org.saddle.ORD[A],implicitevidence$47:org.saddle.ST[B],implicitevidence$48:org.saddle.ORD[B],implicitevidence$49:org.saddle.ST[C],implicitevidence$50:org.saddle.ORD[C],implicitevidence$51:org.saddle.ST[D],implicitevidence$52:org.saddle.ORD[D],implicitevidence$53:org.saddle.ST[E],implicitevidence$54:org.saddle.ORD[E],implicitevidence$55:org.saddle.ST[F],implicitevidence$56:org.saddle.ORD[F],implicitevidence$57:org.saddle.ST[G],implicitevidence$58:org.saddle.ORD[G]):org.saddle.index.Melter[A,(B,C,D,E,F,G),(A,B,C,D,E,F,G)]", "kind" : "implicit def"}, {"label" : "melt1_5", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F]): Melter[A, (B, C, D, E, F), (A, B, C, D, E, F)]", "member" : "org.saddle.index.MelterLowPriority.melt1_5", "link" : "org\/saddle\/index\/Melter$.html#melt1_5[A,B,C,D,E,F](implicitevidence$33:org.saddle.ST[A],implicitevidence$34:org.saddle.ORD[A],implicitevidence$35:org.saddle.ST[B],implicitevidence$36:org.saddle.ORD[B],implicitevidence$37:org.saddle.ST[C],implicitevidence$38:org.saddle.ORD[C],implicitevidence$39:org.saddle.ST[D],implicitevidence$40:org.saddle.ORD[D],implicitevidence$41:org.saddle.ST[E],implicitevidence$42:org.saddle.ORD[E],implicitevidence$43:org.saddle.ST[F],implicitevidence$44:org.saddle.ORD[F]):org.saddle.index.Melter[A,(B,C,D,E,F),(A,B,C,D,E,F)]", "kind" : "implicit def"}, {"label" : "melt1_4", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E]): Melter[A, (B, C, D, E), (A, B, C, D, E)]", "member" : "org.saddle.index.MelterLowPriority.melt1_4", "link" : "org\/saddle\/index\/Melter$.html#melt1_4[A,B,C,D,E](implicitevidence$23:org.saddle.ST[A],implicitevidence$24:org.saddle.ORD[A],implicitevidence$25:org.saddle.ST[B],implicitevidence$26:org.saddle.ORD[B],implicitevidence$27:org.saddle.ST[C],implicitevidence$28:org.saddle.ORD[C],implicitevidence$29:org.saddle.ST[D],implicitevidence$30:org.saddle.ORD[D],implicitevidence$31:org.saddle.ST[E],implicitevidence$32:org.saddle.ORD[E]):org.saddle.index.Melter[A,(B,C,D,E),(A,B,C,D,E)]", "kind" : "implicit def"}, {"label" : "melt1_3", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D]): Melter[A, (B, C, D), (A, B, C, D)]", "member" : "org.saddle.index.MelterLowPriority.melt1_3", "link" : "org\/saddle\/index\/Melter$.html#melt1_3[A,B,C,D](implicitevidence$15:org.saddle.ST[A],implicitevidence$16:org.saddle.ORD[A],implicitevidence$17:org.saddle.ST[B],implicitevidence$18:org.saddle.ORD[B],implicitevidence$19:org.saddle.ST[C],implicitevidence$20:org.saddle.ORD[C],implicitevidence$21:org.saddle.ST[D],implicitevidence$22:org.saddle.ORD[D]):org.saddle.index.Melter[A,(B,C,D),(A,B,C,D)]", "kind" : "implicit def"}, {"label" : "melt1_2", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C]): Melter[A, (B, C), (A, B, C)]", "member" : "org.saddle.index.MelterLowPriority.melt1_2", "link" : "org\/saddle\/index\/Melter$.html#melt1_2[A,B,C](implicitevidence$9:org.saddle.ST[A],implicitevidence$10:org.saddle.ORD[A],implicitevidence$11:org.saddle.ST[B],implicitevidence$12:org.saddle.ORD[B],implicitevidence$13:org.saddle.ST[C],implicitevidence$14:org.saddle.ORD[C]):org.saddle.index.Melter[A,(B,C),(A,B,C)]", "kind" : "implicit def"}, {"label" : "melt", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B]): Melter[A, B, (A, B)]", "member" : "org.saddle.index.MelterLowerPriority.melt", "link" : "org\/saddle\/index\/Melter$.html#melt[A,B](implicitevidence$5:org.saddle.ST[A],implicitevidence$6:org.saddle.ORD[A],implicitevidence$7:org.saddle.ST[B],implicitevidence$8:org.saddle.ORD[B]):org.saddle.index.Melter[A,B,(A,B)]", "kind" : "implicit def"}, {"label" : "makeMelter", "tail" : "(fn: (A, B) ⇒ C)(arg0: ST[A], arg1: ST[B], arg2: ST[C], arg3: ORD[C]): Melter[A, B, C]", "member" : "org.saddle.index.MelterLowerPriority.makeMelter", "link" : "org\/saddle\/index\/Melter$.html#makeMelter[A,B,C](fn:(A,B)=>C)(implicitevidence$1:org.saddle.ST[A],implicitevidence$2:org.saddle.ST[B],implicitevidence$3:org.saddle.ST[C],implicitevidence$4:org.saddle.ORD[C]):org.saddle.index.Melter[A,B,C]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/Melter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/Melter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/Melter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/Melter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/Melter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/Melter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/Melter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Melter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Melter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Melter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/Melter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/Melter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/Melter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/Melter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/Melter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/Melter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/Melter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/Melter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/Melter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/saddle\/index\/Melter.html", "kind" : "trait"}, {"name" : "org.saddle.index.MelterLowerPriority", "members_trait" : [{"label" : "melt", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B]): Melter[A, B, (A, B)]", "member" : "org.saddle.index.MelterLowerPriority.melt", "link" : "org\/saddle\/index\/MelterLowerPriority.html#melt[A,B](implicitevidence$5:org.saddle.ST[A],implicitevidence$6:org.saddle.ORD[A],implicitevidence$7:org.saddle.ST[B],implicitevidence$8:org.saddle.ORD[B]):org.saddle.index.Melter[A,B,(A,B)]", "kind" : "implicit def"}, {"label" : "makeMelter", "tail" : "(fn: (A, B) ⇒ C)(arg0: ST[A], arg1: ST[B], arg2: ST[C], arg3: ORD[C]): Melter[A, B, C]", "member" : "org.saddle.index.MelterLowerPriority.makeMelter", "link" : "org\/saddle\/index\/MelterLowerPriority.html#makeMelter[A,B,C](fn:(A,B)=>C)(implicitevidence$1:org.saddle.ST[A],implicitevidence$2:org.saddle.ST[B],implicitevidence$3:org.saddle.ST[C],implicitevidence$4:org.saddle.ORD[C]):org.saddle.index.Melter[A,B,C]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/MelterLowerPriority.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/MelterLowerPriority.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/MelterLowerPriority.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/MelterLowerPriority.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/MelterLowerPriority.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/MelterLowerPriority.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/MelterLowerPriority.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/MelterLowerPriority.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/MelterLowerPriority.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/MelterLowerPriority.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/MelterLowerPriority.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/MelterLowerPriority.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/MelterLowerPriority.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/MelterLowerPriority.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/MelterLowerPriority.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/MelterLowerPriority.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/MelterLowerPriority.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/MelterLowerPriority.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/MelterLowerPriority.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Lowest priority melter implicit instance takes two arbitrary types and produces a Tuple2", "trait" : "org\/saddle\/index\/MelterLowerPriority.html", "kind" : "trait"}, {"name" : "org.saddle.index.MelterLowPriority", "members_trait" : [{"label" : "melt8_1", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H], arg16: ST[I], arg17: ORD[I]): Melter[(A, B, C, D, E, F, G, H), I, (A, B, C, D, E, F, G, H, I)]", "member" : "org.saddle.index.MelterLowPriority.melt8_1", "link" : "org\/saddle\/index\/MelterLowPriority.html#melt8_1[A,B,C,D,E,F,G,H,I](implicitevidence$159:org.saddle.ST[A],implicitevidence$160:org.saddle.ORD[A],implicitevidence$161:org.saddle.ST[B],implicitevidence$162:org.saddle.ORD[B],implicitevidence$163:org.saddle.ST[C],implicitevidence$164:org.saddle.ORD[C],implicitevidence$165:org.saddle.ST[D],implicitevidence$166:org.saddle.ORD[D],implicitevidence$167:org.saddle.ST[E],implicitevidence$168:org.saddle.ORD[E],implicitevidence$169:org.saddle.ST[F],implicitevidence$170:org.saddle.ORD[F],implicitevidence$171:org.saddle.ST[G],implicitevidence$172:org.saddle.ORD[G],implicitevidence$173:org.saddle.ST[H],implicitevidence$174:org.saddle.ORD[H],implicitevidence$175:org.saddle.ST[I],implicitevidence$176:org.saddle.ORD[I]):org.saddle.index.Melter[(A,B,C,D,E,F,G,H),I,(A,B,C,D,E,F,G,H,I)]", "kind" : "implicit def"}, {"label" : "melt7_1", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H]): Melter[(A, B, C, D, E, F, G), H, (A, B, C, D, E, F, G, H)]", "member" : "org.saddle.index.MelterLowPriority.melt7_1", "link" : "org\/saddle\/index\/MelterLowPriority.html#melt7_1[A,B,C,D,E,F,G,H](implicitevidence$143:org.saddle.ST[A],implicitevidence$144:org.saddle.ORD[A],implicitevidence$145:org.saddle.ST[B],implicitevidence$146:org.saddle.ORD[B],implicitevidence$147:org.saddle.ST[C],implicitevidence$148:org.saddle.ORD[C],implicitevidence$149:org.saddle.ST[D],implicitevidence$150:org.saddle.ORD[D],implicitevidence$151:org.saddle.ST[E],implicitevidence$152:org.saddle.ORD[E],implicitevidence$153:org.saddle.ST[F],implicitevidence$154:org.saddle.ORD[F],implicitevidence$155:org.saddle.ST[G],implicitevidence$156:org.saddle.ORD[G],implicitevidence$157:org.saddle.ST[H],implicitevidence$158:org.saddle.ORD[H]):org.saddle.index.Melter[(A,B,C,D,E,F,G),H,(A,B,C,D,E,F,G,H)]", "kind" : "implicit def"}, {"label" : "melt6_1", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G]): Melter[(A, B, C, D, E, F), G, (A, B, C, D, E, F, G)]", "member" : "org.saddle.index.MelterLowPriority.melt6_1", "link" : "org\/saddle\/index\/MelterLowPriority.html#melt6_1[A,B,C,D,E,F,G](implicitevidence$129:org.saddle.ST[A],implicitevidence$130:org.saddle.ORD[A],implicitevidence$131:org.saddle.ST[B],implicitevidence$132:org.saddle.ORD[B],implicitevidence$133:org.saddle.ST[C],implicitevidence$134:org.saddle.ORD[C],implicitevidence$135:org.saddle.ST[D],implicitevidence$136:org.saddle.ORD[D],implicitevidence$137:org.saddle.ST[E],implicitevidence$138:org.saddle.ORD[E],implicitevidence$139:org.saddle.ST[F],implicitevidence$140:org.saddle.ORD[F],implicitevidence$141:org.saddle.ST[G],implicitevidence$142:org.saddle.ORD[G]):org.saddle.index.Melter[(A,B,C,D,E,F),G,(A,B,C,D,E,F,G)]", "kind" : "implicit def"}, {"label" : "melt5_1", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F]): Melter[(A, B, C, D, E), F, (A, B, C, D, E, F)]", "member" : "org.saddle.index.MelterLowPriority.melt5_1", "link" : "org\/saddle\/index\/MelterLowPriority.html#melt5_1[A,B,C,D,E,F](implicitevidence$117:org.saddle.ST[A],implicitevidence$118:org.saddle.ORD[A],implicitevidence$119:org.saddle.ST[B],implicitevidence$120:org.saddle.ORD[B],implicitevidence$121:org.saddle.ST[C],implicitevidence$122:org.saddle.ORD[C],implicitevidence$123:org.saddle.ST[D],implicitevidence$124:org.saddle.ORD[D],implicitevidence$125:org.saddle.ST[E],implicitevidence$126:org.saddle.ORD[E],implicitevidence$127:org.saddle.ST[F],implicitevidence$128:org.saddle.ORD[F]):org.saddle.index.Melter[(A,B,C,D,E),F,(A,B,C,D,E,F)]", "kind" : "implicit def"}, {"label" : "melt4_1", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E]): Melter[(A, B, C, D), E, (A, B, C, D, E)]", "member" : "org.saddle.index.MelterLowPriority.melt4_1", "link" : "org\/saddle\/index\/MelterLowPriority.html#melt4_1[A,B,C,D,E](implicitevidence$107:org.saddle.ST[A],implicitevidence$108:org.saddle.ORD[A],implicitevidence$109:org.saddle.ST[B],implicitevidence$110:org.saddle.ORD[B],implicitevidence$111:org.saddle.ST[C],implicitevidence$112:org.saddle.ORD[C],implicitevidence$113:org.saddle.ST[D],implicitevidence$114:org.saddle.ORD[D],implicitevidence$115:org.saddle.ST[E],implicitevidence$116:org.saddle.ORD[E]):org.saddle.index.Melter[(A,B,C,D),E,(A,B,C,D,E)]", "kind" : "implicit def"}, {"label" : "melt3_1", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D]): Melter[(A, B, C), D, (A, B, C, D)]", "member" : "org.saddle.index.MelterLowPriority.melt3_1", "link" : "org\/saddle\/index\/MelterLowPriority.html#melt3_1[A,B,C,D](implicitevidence$99:org.saddle.ST[A],implicitevidence$100:org.saddle.ORD[A],implicitevidence$101:org.saddle.ST[B],implicitevidence$102:org.saddle.ORD[B],implicitevidence$103:org.saddle.ST[C],implicitevidence$104:org.saddle.ORD[C],implicitevidence$105:org.saddle.ST[D],implicitevidence$106:org.saddle.ORD[D]):org.saddle.index.Melter[(A,B,C),D,(A,B,C,D)]", "kind" : "implicit def"}, {"label" : "melt2_1", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C]): Melter[(A, B), C, (A, B, C)]", "member" : "org.saddle.index.MelterLowPriority.melt2_1", "link" : "org\/saddle\/index\/MelterLowPriority.html#melt2_1[A,B,C](implicitevidence$93:org.saddle.ST[A],implicitevidence$94:org.saddle.ORD[A],implicitevidence$95:org.saddle.ST[B],implicitevidence$96:org.saddle.ORD[B],implicitevidence$97:org.saddle.ST[C],implicitevidence$98:org.saddle.ORD[C]):org.saddle.index.Melter[(A,B),C,(A,B,C)]", "kind" : "implicit def"}, {"label" : "melt1_8", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H], arg16: ST[I], arg17: ORD[I]): Melter[A, (B, C, D, E, F, G, H, I), (A, B, C, D, E, F, G, H, I)]", "member" : "org.saddle.index.MelterLowPriority.melt1_8", "link" : "org\/saddle\/index\/MelterLowPriority.html#melt1_8[A,B,C,D,E,F,G,H,I](implicitevidence$75:org.saddle.ST[A],implicitevidence$76:org.saddle.ORD[A],implicitevidence$77:org.saddle.ST[B],implicitevidence$78:org.saddle.ORD[B],implicitevidence$79:org.saddle.ST[C],implicitevidence$80:org.saddle.ORD[C],implicitevidence$81:org.saddle.ST[D],implicitevidence$82:org.saddle.ORD[D],implicitevidence$83:org.saddle.ST[E],implicitevidence$84:org.saddle.ORD[E],implicitevidence$85:org.saddle.ST[F],implicitevidence$86:org.saddle.ORD[F],implicitevidence$87:org.saddle.ST[G],implicitevidence$88:org.saddle.ORD[G],implicitevidence$89:org.saddle.ST[H],implicitevidence$90:org.saddle.ORD[H],implicitevidence$91:org.saddle.ST[I],implicitevidence$92:org.saddle.ORD[I]):org.saddle.index.Melter[A,(B,C,D,E,F,G,H,I),(A,B,C,D,E,F,G,H,I)]", "kind" : "implicit def"}, {"label" : "melt1_7", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G], arg14: ST[H], arg15: ORD[H]): Melter[A, (B, C, D, E, F, G, H), (A, B, C, D, E, F, G, H)]", "member" : "org.saddle.index.MelterLowPriority.melt1_7", "link" : "org\/saddle\/index\/MelterLowPriority.html#melt1_7[A,B,C,D,E,F,G,H](implicitevidence$59:org.saddle.ST[A],implicitevidence$60:org.saddle.ORD[A],implicitevidence$61:org.saddle.ST[B],implicitevidence$62:org.saddle.ORD[B],implicitevidence$63:org.saddle.ST[C],implicitevidence$64:org.saddle.ORD[C],implicitevidence$65:org.saddle.ST[D],implicitevidence$66:org.saddle.ORD[D],implicitevidence$67:org.saddle.ST[E],implicitevidence$68:org.saddle.ORD[E],implicitevidence$69:org.saddle.ST[F],implicitevidence$70:org.saddle.ORD[F],implicitevidence$71:org.saddle.ST[G],implicitevidence$72:org.saddle.ORD[G],implicitevidence$73:org.saddle.ST[H],implicitevidence$74:org.saddle.ORD[H]):org.saddle.index.Melter[A,(B,C,D,E,F,G,H),(A,B,C,D,E,F,G,H)]", "kind" : "implicit def"}, {"label" : "melt1_6", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F], arg12: ST[G], arg13: ORD[G]): Melter[A, (B, C, D, E, F, G), (A, B, C, D, E, F, G)]", "member" : "org.saddle.index.MelterLowPriority.melt1_6", "link" : "org\/saddle\/index\/MelterLowPriority.html#melt1_6[A,B,C,D,E,F,G](implicitevidence$45:org.saddle.ST[A],implicitevidence$46:org.saddle.ORD[A],implicitevidence$47:org.saddle.ST[B],implicitevidence$48:org.saddle.ORD[B],implicitevidence$49:org.saddle.ST[C],implicitevidence$50:org.saddle.ORD[C],implicitevidence$51:org.saddle.ST[D],implicitevidence$52:org.saddle.ORD[D],implicitevidence$53:org.saddle.ST[E],implicitevidence$54:org.saddle.ORD[E],implicitevidence$55:org.saddle.ST[F],implicitevidence$56:org.saddle.ORD[F],implicitevidence$57:org.saddle.ST[G],implicitevidence$58:org.saddle.ORD[G]):org.saddle.index.Melter[A,(B,C,D,E,F,G),(A,B,C,D,E,F,G)]", "kind" : "implicit def"}, {"label" : "melt1_5", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E], arg10: ST[F], arg11: ORD[F]): Melter[A, (B, C, D, E, F), (A, B, C, D, E, F)]", "member" : "org.saddle.index.MelterLowPriority.melt1_5", "link" : "org\/saddle\/index\/MelterLowPriority.html#melt1_5[A,B,C,D,E,F](implicitevidence$33:org.saddle.ST[A],implicitevidence$34:org.saddle.ORD[A],implicitevidence$35:org.saddle.ST[B],implicitevidence$36:org.saddle.ORD[B],implicitevidence$37:org.saddle.ST[C],implicitevidence$38:org.saddle.ORD[C],implicitevidence$39:org.saddle.ST[D],implicitevidence$40:org.saddle.ORD[D],implicitevidence$41:org.saddle.ST[E],implicitevidence$42:org.saddle.ORD[E],implicitevidence$43:org.saddle.ST[F],implicitevidence$44:org.saddle.ORD[F]):org.saddle.index.Melter[A,(B,C,D,E,F),(A,B,C,D,E,F)]", "kind" : "implicit def"}, {"label" : "melt1_4", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D], arg8: ST[E], arg9: ORD[E]): Melter[A, (B, C, D, E), (A, B, C, D, E)]", "member" : "org.saddle.index.MelterLowPriority.melt1_4", "link" : "org\/saddle\/index\/MelterLowPriority.html#melt1_4[A,B,C,D,E](implicitevidence$23:org.saddle.ST[A],implicitevidence$24:org.saddle.ORD[A],implicitevidence$25:org.saddle.ST[B],implicitevidence$26:org.saddle.ORD[B],implicitevidence$27:org.saddle.ST[C],implicitevidence$28:org.saddle.ORD[C],implicitevidence$29:org.saddle.ST[D],implicitevidence$30:org.saddle.ORD[D],implicitevidence$31:org.saddle.ST[E],implicitevidence$32:org.saddle.ORD[E]):org.saddle.index.Melter[A,(B,C,D,E),(A,B,C,D,E)]", "kind" : "implicit def"}, {"label" : "melt1_3", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C], arg6: ST[D], arg7: ORD[D]): Melter[A, (B, C, D), (A, B, C, D)]", "member" : "org.saddle.index.MelterLowPriority.melt1_3", "link" : "org\/saddle\/index\/MelterLowPriority.html#melt1_3[A,B,C,D](implicitevidence$15:org.saddle.ST[A],implicitevidence$16:org.saddle.ORD[A],implicitevidence$17:org.saddle.ST[B],implicitevidence$18:org.saddle.ORD[B],implicitevidence$19:org.saddle.ST[C],implicitevidence$20:org.saddle.ORD[C],implicitevidence$21:org.saddle.ST[D],implicitevidence$22:org.saddle.ORD[D]):org.saddle.index.Melter[A,(B,C,D),(A,B,C,D)]", "kind" : "implicit def"}, {"label" : "melt1_2", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B], arg4: ST[C], arg5: ORD[C]): Melter[A, (B, C), (A, B, C)]", "member" : "org.saddle.index.MelterLowPriority.melt1_2", "link" : "org\/saddle\/index\/MelterLowPriority.html#melt1_2[A,B,C](implicitevidence$9:org.saddle.ST[A],implicitevidence$10:org.saddle.ORD[A],implicitevidence$11:org.saddle.ST[B],implicitevidence$12:org.saddle.ORD[B],implicitevidence$13:org.saddle.ST[C],implicitevidence$14:org.saddle.ORD[C]):org.saddle.index.Melter[A,(B,C),(A,B,C)]", "kind" : "implicit def"}, {"label" : "melt", "tail" : "(arg0: ST[A], arg1: ORD[A], arg2: ST[B], arg3: ORD[B]): Melter[A, B, (A, B)]", "member" : "org.saddle.index.MelterLowerPriority.melt", "link" : "org\/saddle\/index\/MelterLowPriority.html#melt[A,B](implicitevidence$5:org.saddle.ST[A],implicitevidence$6:org.saddle.ORD[A],implicitevidence$7:org.saddle.ST[B],implicitevidence$8:org.saddle.ORD[B]):org.saddle.index.Melter[A,B,(A,B)]", "kind" : "implicit def"}, {"label" : "makeMelter", "tail" : "(fn: (A, B) ⇒ C)(arg0: ST[A], arg1: ST[B], arg2: ST[C], arg3: ORD[C]): Melter[A, B, C]", "member" : "org.saddle.index.MelterLowerPriority.makeMelter", "link" : "org\/saddle\/index\/MelterLowPriority.html#makeMelter[A,B,C](fn:(A,B)=>C)(implicitevidence$1:org.saddle.ST[A],implicitevidence$2:org.saddle.ST[B],implicitevidence$3:org.saddle.ST[C],implicitevidence$4:org.saddle.ORD[C]):org.saddle.index.Melter[A,B,C]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/MelterLowPriority.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/MelterLowPriority.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/MelterLowPriority.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/MelterLowPriority.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/MelterLowPriority.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/MelterLowPriority.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/MelterLowPriority.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/MelterLowPriority.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/MelterLowPriority.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/MelterLowPriority.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/MelterLowPriority.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/MelterLowPriority.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/MelterLowPriority.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/MelterLowPriority.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/MelterLowPriority.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/MelterLowPriority.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/MelterLowPriority.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/MelterLowPriority.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/MelterLowPriority.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Next lowest priority melter implicit instances; takes one arbitrary types and a TupleN and produces a TupleN+1", "trait" : "org\/saddle\/index\/MelterLowPriority.html", "kind" : "trait"}, {"name" : "org.saddle.index.OuterJoin", "shortDescription" : "", "object" : "org\/saddle\/index\/OuterJoin$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/OuterJoin$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/OuterJoin$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/OuterJoin$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/OuterJoin$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/OuterJoin$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/OuterJoin$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/OuterJoin$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/OuterJoin$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/OuterJoin$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/OuterJoin$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/OuterJoin$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/OuterJoin$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/OuterJoin$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/OuterJoin$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/OuterJoin$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/OuterJoin$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/OuterJoin$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/OuterJoin$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/OuterJoin$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.index.ReIndexer", "members_trait" : [{"label" : "swap", "tail" : "(): ReIndexer[T]", "member" : "org.saddle.index.ReIndexer.swap", "link" : "org\/saddle\/index\/ReIndexer.html#swap:org.saddle.index.ReIndexer[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/ReIndexer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/ReIndexer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/ReIndexer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/ReIndexer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/ReIndexer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/ReIndexer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/ReIndexer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/ReIndexer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/ReIndexer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/ReIndexer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/ReIndexer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/ReIndexer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/ReIndexer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/ReIndexer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/ReIndexer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/ReIndexer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/ReIndexer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/ReIndexer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/ReIndexer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "index", "tail" : "(): Index[T]", "member" : "org.saddle.index.ReIndexer.index", "link" : "org\/saddle\/index\/ReIndexer.html#index:org.saddle.Index[T]", "kind" : "abstract def"}, {"label" : "rTake", "tail" : "(): Option[Array[Int]]", "member" : "org.saddle.index.ReIndexer.rTake", "link" : "org\/saddle\/index\/ReIndexer.html#rTake:Option[Array[Int]]", "kind" : "abstract def"}, {"label" : "lTake", "tail" : "(): Option[Array[Int]]", "member" : "org.saddle.index.ReIndexer.lTake", "link" : "org\/saddle\/index\/ReIndexer.html#lTake:Option[Array[Int]]", "kind" : "abstract def"}], "shortDescription" : "We often need to \"reindex\" one array\/vec\/series\/frame so as to produce a newone.", "object" : "org\/saddle\/index\/ReIndexer$.html", "members_object" : [{"label" : "apply", "tail" : "(lft: Option[Array[Int]], rgt: Option[Array[Int]], ix: Index[T]): ReIndexer[T]", "member" : "org.saddle.index.ReIndexer.apply", "link" : "org\/saddle\/index\/ReIndexer$.html#apply[T](lft:Option[Array[Int]],rgt:Option[Array[Int]],ix:org.saddle.Index[T]):org.saddle.index.ReIndexer[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/ReIndexer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/ReIndexer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/ReIndexer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/ReIndexer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/ReIndexer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/ReIndexer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/ReIndexer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/ReIndexer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/ReIndexer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/ReIndexer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/ReIndexer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/ReIndexer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/ReIndexer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/ReIndexer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/ReIndexer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/ReIndexer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/ReIndexer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/ReIndexer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/ReIndexer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/saddle\/index\/ReIndexer.html", "kind" : "trait"}, {"name" : "org.saddle.index.RightJoin", "shortDescription" : "", "object" : "org\/saddle\/index\/RightJoin$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/RightJoin$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/RightJoin$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/RightJoin$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/RightJoin$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/RightJoin$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/RightJoin$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/RightJoin$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/RightJoin$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/RightJoin$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/RightJoin$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/RightJoin$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/RightJoin$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/RightJoin$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/RightJoin$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/RightJoin$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/RightJoin$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/RightJoin$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/RightJoin$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/RightJoin$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.index.Slice", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/Slice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/Slice.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/Slice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/Slice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/Slice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/Slice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/Slice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Slice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Slice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Slice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/Slice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/Slice.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/Slice.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/Slice.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/Slice.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/Slice.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/Slice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/Slice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/Slice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(idx: Index[U]): (Int, Int)", "member" : "org.saddle.index.Slice.apply", "link" : "org\/saddle\/index\/Slice.html#apply[U>:T](idx:org.saddle.Index[U]):(Int,Int)", "kind" : "abstract def"}], "shortDescription" : "Slice provides a methodology so that when it is applied to an index,it produces an lower (inclusive) and upper (exclusive) integer offset at which to slice.", "object" : "org\/saddle\/index\/Slice$.html", "members_object" : [{"label" : "apply", "tail" : "(k1: T, k2: T): SliceDefault[T]", "member" : "org.saddle.index.Slice.apply", "link" : "org\/saddle\/index\/Slice$.html#apply[T](k1:T,k2:T):org.saddle.index.SliceDefault[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/Slice$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/Slice$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/Slice$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/Slice$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/Slice$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/Slice$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/Slice$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Slice$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Slice$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Slice$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/Slice$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/Slice$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/Slice$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/Slice$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/Slice$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/Slice$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/Slice$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/Slice$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/Slice$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/saddle\/index\/Slice.html", "kind" : "trait"}, {"name" : "org.saddle.index.SliceAll", "shortDescription" : "Represent a slice over the entire index", "object" : "org\/saddle\/index\/SliceAll$.html", "members_class" : [{"label" : "apply", "tail" : "(idx: Index[U]): (Int, Int)", "member" : "org.saddle.index.SliceAll.apply", "link" : "org\/saddle\/index\/SliceAll.html#apply[U](idx:org.saddle.Index[U]):(Int,Int)", "kind" : "def"}, {"member" : "org.saddle.index.SliceAll#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/SliceAll.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/SliceAll.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/SliceAll.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/SliceAll.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/SliceAll.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/SliceAll.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/SliceAll.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceAll.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceAll.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceAll.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/SliceAll.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/SliceAll.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/SliceAll.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/SliceAll.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/SliceAll.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/SliceAll.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/SliceAll.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/SliceAll.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/SliceAll.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(): SliceAll", "member" : "org.saddle.index.SliceAll.apply", "link" : "org\/saddle\/index\/SliceAll$.html#apply[T]():org.saddle.index.SliceAll", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/SliceAll$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/SliceAll$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/SliceAll$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/SliceAll$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/SliceAll$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/SliceAll$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/SliceAll$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceAll$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceAll$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceAll$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/SliceAll$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/SliceAll$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/SliceAll$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/SliceAll$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/SliceAll$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/SliceAll$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/SliceAll$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/SliceAll$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/SliceAll$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/index\/SliceAll.html", "kind" : "class"}, {"name" : "org.saddle.index.SliceDefault", "shortDescription" : "Represent a slice from one key to another, inclusive.", "members_class" : [{"label" : "apply", "tail" : "(idx: Index[U]): (Int, Int)", "member" : "org.saddle.index.SliceDefault.apply", "link" : "org\/saddle\/index\/SliceDefault.html#apply[U>:T](idx:org.saddle.Index[U]):(Int,Int)", "kind" : "def"}, {"member" : "org.saddle.index.SliceDefault#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/SliceDefault.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/SliceDefault.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/SliceDefault.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/SliceDefault.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/SliceDefault.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/SliceDefault.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/SliceDefault.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceDefault.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceDefault.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceDefault.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/SliceDefault.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/SliceDefault.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/SliceDefault.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/SliceDefault.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/SliceDefault.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/SliceDefault.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/SliceDefault.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/SliceDefault.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/SliceDefault.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/index\/SliceDefault.html", "kind" : "class"}, {"name" : "org.saddle.index.SliceFrom", "shortDescription" : "Represent a slice from key to end of index", "object" : "org\/saddle\/index\/SliceFrom$.html", "members_class" : [{"label" : "apply", "tail" : "(idx: Index[U]): (Int, Int)", "member" : "org.saddle.index.SliceFrom.apply", "link" : "org\/saddle\/index\/SliceFrom.html#apply[U>:T](idx:org.saddle.Index[U]):(Int,Int)", "kind" : "def"}, {"member" : "org.saddle.index.SliceFrom#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/SliceFrom.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/SliceFrom.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/SliceFrom.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/SliceFrom.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/SliceFrom.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/SliceFrom.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/SliceFrom.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceFrom.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceFrom.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceFrom.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/SliceFrom.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/SliceFrom.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/SliceFrom.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/SliceFrom.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/SliceFrom.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/SliceFrom.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/SliceFrom.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/SliceFrom.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/SliceFrom.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(k: T): SliceFrom[T]", "member" : "org.saddle.index.SliceFrom.apply", "link" : "org\/saddle\/index\/SliceFrom$.html#apply[T](k:T):org.saddle.index.SliceFrom[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/SliceFrom$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/SliceFrom$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/SliceFrom$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/SliceFrom$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/SliceFrom$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/SliceFrom$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/SliceFrom$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceFrom$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceFrom$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceFrom$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/SliceFrom$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/SliceFrom$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/SliceFrom$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/SliceFrom$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/SliceFrom$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/SliceFrom$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/SliceFrom$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/SliceFrom$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/SliceFrom$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/index\/SliceFrom.html", "kind" : "class"}, {"name" : "org.saddle.index.SliceTo", "shortDescription" : "Represent a slice from zero to a key.", "object" : "org\/saddle\/index\/SliceTo$.html", "members_class" : [{"label" : "apply", "tail" : "(idx: Index[U]): (Int, Int)", "member" : "org.saddle.index.SliceTo.apply", "link" : "org\/saddle\/index\/SliceTo.html#apply[U>:T](idx:org.saddle.Index[U]):(Int,Int)", "kind" : "def"}, {"member" : "org.saddle.index.SliceTo#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/SliceTo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/SliceTo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/SliceTo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/SliceTo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/SliceTo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/SliceTo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/SliceTo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceTo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceTo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceTo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/SliceTo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/SliceTo.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/SliceTo.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/SliceTo.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/SliceTo.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/SliceTo.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/SliceTo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/SliceTo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/SliceTo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(k: T): SliceTo[T]", "member" : "org.saddle.index.SliceTo.apply", "link" : "org\/saddle\/index\/SliceTo$.html#apply[T](k:T):org.saddle.index.SliceTo[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/SliceTo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/SliceTo$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/SliceTo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/SliceTo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/SliceTo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/SliceTo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/SliceTo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceTo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceTo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/SliceTo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/SliceTo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/SliceTo$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/SliceTo$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/SliceTo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/SliceTo$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/SliceTo$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/SliceTo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/SliceTo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/SliceTo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/index\/SliceTo.html", "kind" : "class"}, {"name" : "org.saddle.index.Splitter", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/Splitter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/Splitter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/Splitter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/Splitter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/Splitter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/Splitter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/Splitter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Splitter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Splitter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Splitter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/Splitter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/Splitter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/Splitter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/Splitter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/Splitter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/Splitter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/Splitter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/Splitter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/Splitter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(i: Index[I]): (Index[OL], Index[OR])", "member" : "org.saddle.index.Splitter.apply", "link" : "org\/saddle\/index\/Splitter.html#apply(i:org.saddle.Index[I]):(org.saddle.Index[OL],org.saddle.Index[OR])", "kind" : "abstract def"}], "shortDescription" : "A Splitter operates on an input index whose elements have arity N, and yields the followingpair of output indexes: the left has elements whose arity is N-1, where each element has thefirst N-1 constituents of the original tuple; and the right is an index whose elements werethose in the Nth position of the original tuple.", "object" : "org\/saddle\/index\/Splitter$.html", "members_object" : [{"label" : "split9th", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2], arg4: ST[T3], arg5: ORD[T3], arg6: ST[T4], arg7: ORD[T4], arg8: ST[T5], arg9: ORD[T5], arg10: ST[T6], arg11: ORD[T6], arg12: ST[T7], arg13: ORD[T7], arg14: ST[T8], arg15: ORD[T8], arg16: ST[T9], arg17: ORD[T9]): Splitter[(T1, T2, T3, T4, T5, T6, T7, T8, T9), (T1, T2, T3, T4, T5, T6, T7, T8), T9]", "member" : "org.saddle.index.Splitter.split9th", "link" : "org\/saddle\/index\/Splitter$.html#split9th[T1,T2,T3,T4,T5,T6,T7,T8,T9](implicitevidence$71:org.saddle.ST[T1],implicitevidence$72:org.saddle.ORD[T1],implicitevidence$73:org.saddle.ST[T2],implicitevidence$74:org.saddle.ORD[T2],implicitevidence$75:org.saddle.ST[T3],implicitevidence$76:org.saddle.ORD[T3],implicitevidence$77:org.saddle.ST[T4],implicitevidence$78:org.saddle.ORD[T4],implicitevidence$79:org.saddle.ST[T5],implicitevidence$80:org.saddle.ORD[T5],implicitevidence$81:org.saddle.ST[T6],implicitevidence$82:org.saddle.ORD[T6],implicitevidence$83:org.saddle.ST[T7],implicitevidence$84:org.saddle.ORD[T7],implicitevidence$85:org.saddle.ST[T8],implicitevidence$86:org.saddle.ORD[T8],implicitevidence$87:org.saddle.ST[T9],implicitevidence$88:org.saddle.ORD[T9]):org.saddle.index.Splitter[(T1,T2,T3,T4,T5,T6,T7,T8,T9),(T1,T2,T3,T4,T5,T6,T7,T8),T9]", "kind" : "implicit def"}, {"label" : "split8th", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2], arg4: ST[T3], arg5: ORD[T3], arg6: ST[T4], arg7: ORD[T4], arg8: ST[T5], arg9: ORD[T5], arg10: ST[T6], arg11: ORD[T6], arg12: ST[T7], arg13: ORD[T7], arg14: ST[T8], arg15: ORD[T8]): Splitter[(T1, T2, T3, T4, T5, T6, T7, T8), (T1, T2, T3, T4, T5, T6, T7), T8]", "member" : "org.saddle.index.Splitter.split8th", "link" : "org\/saddle\/index\/Splitter$.html#split8th[T1,T2,T3,T4,T5,T6,T7,T8](implicitevidence$55:org.saddle.ST[T1],implicitevidence$56:org.saddle.ORD[T1],implicitevidence$57:org.saddle.ST[T2],implicitevidence$58:org.saddle.ORD[T2],implicitevidence$59:org.saddle.ST[T3],implicitevidence$60:org.saddle.ORD[T3],implicitevidence$61:org.saddle.ST[T4],implicitevidence$62:org.saddle.ORD[T4],implicitevidence$63:org.saddle.ST[T5],implicitevidence$64:org.saddle.ORD[T5],implicitevidence$65:org.saddle.ST[T6],implicitevidence$66:org.saddle.ORD[T6],implicitevidence$67:org.saddle.ST[T7],implicitevidence$68:org.saddle.ORD[T7],implicitevidence$69:org.saddle.ST[T8],implicitevidence$70:org.saddle.ORD[T8]):org.saddle.index.Splitter[(T1,T2,T3,T4,T5,T6,T7,T8),(T1,T2,T3,T4,T5,T6,T7),T8]", "kind" : "implicit def"}, {"label" : "split7th", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2], arg4: ST[T3], arg5: ORD[T3], arg6: ST[T4], arg7: ORD[T4], arg8: ST[T5], arg9: ORD[T5], arg10: ST[T6], arg11: ORD[T6], arg12: ST[T7], arg13: ORD[T7]): Splitter[(T1, T2, T3, T4, T5, T6, T7), (T1, T2, T3, T4, T5, T6), T7]", "member" : "org.saddle.index.Splitter.split7th", "link" : "org\/saddle\/index\/Splitter$.html#split7th[T1,T2,T3,T4,T5,T6,T7](implicitevidence$41:org.saddle.ST[T1],implicitevidence$42:org.saddle.ORD[T1],implicitevidence$43:org.saddle.ST[T2],implicitevidence$44:org.saddle.ORD[T2],implicitevidence$45:org.saddle.ST[T3],implicitevidence$46:org.saddle.ORD[T3],implicitevidence$47:org.saddle.ST[T4],implicitevidence$48:org.saddle.ORD[T4],implicitevidence$49:org.saddle.ST[T5],implicitevidence$50:org.saddle.ORD[T5],implicitevidence$51:org.saddle.ST[T6],implicitevidence$52:org.saddle.ORD[T6],implicitevidence$53:org.saddle.ST[T7],implicitevidence$54:org.saddle.ORD[T7]):org.saddle.index.Splitter[(T1,T2,T3,T4,T5,T6,T7),(T1,T2,T3,T4,T5,T6),T7]", "kind" : "implicit def"}, {"label" : "split6th", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2], arg4: ST[T3], arg5: ORD[T3], arg6: ST[T4], arg7: ORD[T4], arg8: ST[T5], arg9: ORD[T5], arg10: ST[T6], arg11: ORD[T6]): Splitter[(T1, T2, T3, T4, T5, T6), (T1, T2, T3, T4, T5), T6]", "member" : "org.saddle.index.Splitter.split6th", "link" : "org\/saddle\/index\/Splitter$.html#split6th[T1,T2,T3,T4,T5,T6](implicitevidence$29:org.saddle.ST[T1],implicitevidence$30:org.saddle.ORD[T1],implicitevidence$31:org.saddle.ST[T2],implicitevidence$32:org.saddle.ORD[T2],implicitevidence$33:org.saddle.ST[T3],implicitevidence$34:org.saddle.ORD[T3],implicitevidence$35:org.saddle.ST[T4],implicitevidence$36:org.saddle.ORD[T4],implicitevidence$37:org.saddle.ST[T5],implicitevidence$38:org.saddle.ORD[T5],implicitevidence$39:org.saddle.ST[T6],implicitevidence$40:org.saddle.ORD[T6]):org.saddle.index.Splitter[(T1,T2,T3,T4,T5,T6),(T1,T2,T3,T4,T5),T6]", "kind" : "implicit def"}, {"label" : "split5th", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2], arg4: ST[T3], arg5: ORD[T3], arg6: ST[T4], arg7: ORD[T4], arg8: ST[T5], arg9: ORD[T5]): Splitter[(T1, T2, T3, T4, T5), (T1, T2, T3, T4), T5]", "member" : "org.saddle.index.Splitter.split5th", "link" : "org\/saddle\/index\/Splitter$.html#split5th[T1,T2,T3,T4,T5](implicitevidence$19:org.saddle.ST[T1],implicitevidence$20:org.saddle.ORD[T1],implicitevidence$21:org.saddle.ST[T2],implicitevidence$22:org.saddle.ORD[T2],implicitevidence$23:org.saddle.ST[T3],implicitevidence$24:org.saddle.ORD[T3],implicitevidence$25:org.saddle.ST[T4],implicitevidence$26:org.saddle.ORD[T4],implicitevidence$27:org.saddle.ST[T5],implicitevidence$28:org.saddle.ORD[T5]):org.saddle.index.Splitter[(T1,T2,T3,T4,T5),(T1,T2,T3,T4),T5]", "kind" : "implicit def"}, {"label" : "split4th", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2], arg4: ST[T3], arg5: ORD[T3], arg6: ST[T4], arg7: ORD[T4]): Splitter[(T1, T2, T3, T4), (T1, T2, T3), T4]", "member" : "org.saddle.index.Splitter.split4th", "link" : "org\/saddle\/index\/Splitter$.html#split4th[T1,T2,T3,T4](implicitevidence$11:org.saddle.ST[T1],implicitevidence$12:org.saddle.ORD[T1],implicitevidence$13:org.saddle.ST[T2],implicitevidence$14:org.saddle.ORD[T2],implicitevidence$15:org.saddle.ST[T3],implicitevidence$16:org.saddle.ORD[T3],implicitevidence$17:org.saddle.ST[T4],implicitevidence$18:org.saddle.ORD[T4]):org.saddle.index.Splitter[(T1,T2,T3,T4),(T1,T2,T3),T4]", "kind" : "implicit def"}, {"label" : "split3rd", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2], arg4: ST[T3], arg5: ORD[T3]): Splitter[(T1, T2, T3), (T1, T2), T3]", "member" : "org.saddle.index.Splitter.split3rd", "link" : "org\/saddle\/index\/Splitter$.html#split3rd[T1,T2,T3](implicitevidence$5:org.saddle.ST[T1],implicitevidence$6:org.saddle.ORD[T1],implicitevidence$7:org.saddle.ST[T2],implicitevidence$8:org.saddle.ORD[T2],implicitevidence$9:org.saddle.ST[T3],implicitevidence$10:org.saddle.ORD[T3]):org.saddle.index.Splitter[(T1,T2,T3),(T1,T2),T3]", "kind" : "implicit def"}, {"label" : "split2nd", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2]): Splitter[(T1, T2), T1, T2]", "member" : "org.saddle.index.Splitter.split2nd", "link" : "org\/saddle\/index\/Splitter$.html#split2nd[T1,T2](implicitevidence$1:org.saddle.ST[T1],implicitevidence$2:org.saddle.ORD[T1],implicitevidence$3:org.saddle.ST[T2],implicitevidence$4:org.saddle.ORD[T2]):org.saddle.index.Splitter[(T1,T2),T1,T2]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/Splitter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/Splitter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/Splitter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/Splitter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/Splitter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/Splitter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/Splitter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Splitter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Splitter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Splitter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/Splitter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/Splitter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/Splitter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/Splitter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/Splitter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/Splitter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/Splitter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/Splitter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/Splitter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/saddle\/index\/Splitter.html", "kind" : "trait"}, {"name" : "org.saddle.index.Stacker", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/Stacker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/Stacker.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/Stacker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/Stacker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/Stacker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/Stacker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/Stacker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Stacker.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Stacker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Stacker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/Stacker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/Stacker.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/Stacker.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/Stacker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/Stacker.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/Stacker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/Stacker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/Stacker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/Stacker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "tag", "tail" : "(): ST[O]", "member" : "org.saddle.index.Stacker.tag", "link" : "org\/saddle\/index\/Stacker.html#tag:org.saddle.ST[O]", "kind" : "abstract def"}, {"label" : "ord", "tail" : "(): ORD[O]", "member" : "org.saddle.index.Stacker.ord", "link" : "org\/saddle\/index\/Stacker.html#ord:org.saddle.ORD[O]", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(ix1: Index[I], ix2: Index[J]): Index[O]", "member" : "org.saddle.index.Stacker.apply", "link" : "org\/saddle\/index\/Stacker.html#apply(ix1:org.saddle.Index[I],ix2:org.saddle.Index[J]):org.saddle.Index[O]", "kind" : "abstract def"}], "shortDescription" : "A Stacker operates on two input Index instances and produces a new output Indexwhose entries are drawn from the Cartesian product of the elements of the originalindexes, and whose ordering is likewise specified by the original orderings.", "object" : "org\/saddle\/index\/Stacker$.html", "members_object" : [{"label" : "stack9th", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2], arg4: ST[T3], arg5: ORD[T3], arg6: ST[T4], arg7: ORD[T4], arg8: ST[T5], arg9: ORD[T5], arg10: ST[T6], arg11: ORD[T6], arg12: ST[T7], arg13: ORD[T7], arg14: ST[T8], arg15: ORD[T8], arg16: ST[T9], arg17: ORD[T9]): Stacker[(T1, T2, T3, T4, T5, T6, T7, T8), T9, (T1, T2, T3, T4, T5, T6, T7, T8, T9)]", "member" : "org.saddle.index.Stacker.stack9th", "link" : "org\/saddle\/index\/Stacker$.html#stack9th[T1,T2,T3,T4,T5,T6,T7,T8,T9](implicitevidence$67:org.saddle.ST[T1],implicitevidence$68:org.saddle.ORD[T1],implicitevidence$69:org.saddle.ST[T2],implicitevidence$70:org.saddle.ORD[T2],implicitevidence$71:org.saddle.ST[T3],implicitevidence$72:org.saddle.ORD[T3],implicitevidence$73:org.saddle.ST[T4],implicitevidence$74:org.saddle.ORD[T4],implicitevidence$75:org.saddle.ST[T5],implicitevidence$76:org.saddle.ORD[T5],implicitevidence$77:org.saddle.ST[T6],implicitevidence$78:org.saddle.ORD[T6],implicitevidence$79:org.saddle.ST[T7],implicitevidence$80:org.saddle.ORD[T7],implicitevidence$81:org.saddle.ST[T8],implicitevidence$82:org.saddle.ORD[T8],implicitevidence$83:org.saddle.ST[T9],implicitevidence$84:org.saddle.ORD[T9]):org.saddle.index.Stacker[(T1,T2,T3,T4,T5,T6,T7,T8),T9,(T1,T2,T3,T4,T5,T6,T7,T8,T9)]", "kind" : "implicit def"}, {"label" : "stack8th", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2], arg4: ST[T3], arg5: ORD[T3], arg6: ST[T4], arg7: ORD[T4], arg8: ST[T5], arg9: ORD[T5], arg10: ST[T6], arg11: ORD[T6], arg12: ST[T7], arg13: ORD[T7], arg14: ST[T8], arg15: ORD[T8]): Stacker[(T1, T2, T3, T4, T5, T6, T7), T8, (T1, T2, T3, T4, T5, T6, T7, T8)]", "member" : "org.saddle.index.Stacker.stack8th", "link" : "org\/saddle\/index\/Stacker$.html#stack8th[T1,T2,T3,T4,T5,T6,T7,T8](implicitevidence$51:org.saddle.ST[T1],implicitevidence$52:org.saddle.ORD[T1],implicitevidence$53:org.saddle.ST[T2],implicitevidence$54:org.saddle.ORD[T2],implicitevidence$55:org.saddle.ST[T3],implicitevidence$56:org.saddle.ORD[T3],implicitevidence$57:org.saddle.ST[T4],implicitevidence$58:org.saddle.ORD[T4],implicitevidence$59:org.saddle.ST[T5],implicitevidence$60:org.saddle.ORD[T5],implicitevidence$61:org.saddle.ST[T6],implicitevidence$62:org.saddle.ORD[T6],implicitevidence$63:org.saddle.ST[T7],implicitevidence$64:org.saddle.ORD[T7],implicitevidence$65:org.saddle.ST[T8],implicitevidence$66:org.saddle.ORD[T8]):org.saddle.index.Stacker[(T1,T2,T3,T4,T5,T6,T7),T8,(T1,T2,T3,T4,T5,T6,T7,T8)]", "kind" : "implicit def"}, {"label" : "stack7th", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2], arg4: ST[T3], arg5: ORD[T3], arg6: ST[T4], arg7: ORD[T4], arg8: ST[T5], arg9: ORD[T5], arg10: ST[T6], arg11: ORD[T6], arg12: ST[T7], arg13: ORD[T7]): Stacker[(T1, T2, T3, T4, T5, T6), T7, (T1, T2, T3, T4, T5, T6, T7)]", "member" : "org.saddle.index.Stacker.stack7th", "link" : "org\/saddle\/index\/Stacker$.html#stack7th[T1,T2,T3,T4,T5,T6,T7](implicitevidence$37:org.saddle.ST[T1],implicitevidence$38:org.saddle.ORD[T1],implicitevidence$39:org.saddle.ST[T2],implicitevidence$40:org.saddle.ORD[T2],implicitevidence$41:org.saddle.ST[T3],implicitevidence$42:org.saddle.ORD[T3],implicitevidence$43:org.saddle.ST[T4],implicitevidence$44:org.saddle.ORD[T4],implicitevidence$45:org.saddle.ST[T5],implicitevidence$46:org.saddle.ORD[T5],implicitevidence$47:org.saddle.ST[T6],implicitevidence$48:org.saddle.ORD[T6],implicitevidence$49:org.saddle.ST[T7],implicitevidence$50:org.saddle.ORD[T7]):org.saddle.index.Stacker[(T1,T2,T3,T4,T5,T6),T7,(T1,T2,T3,T4,T5,T6,T7)]", "kind" : "implicit def"}, {"label" : "stack6th", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2], arg4: ST[T3], arg5: ORD[T3], arg6: ST[T4], arg7: ORD[T4], arg8: ST[T5], arg9: ORD[T5], arg10: ST[T6], arg11: ORD[T6]): Stacker[(T1, T2, T3, T4, T5), T6, (T1, T2, T3, T4, T5, T6)]", "member" : "org.saddle.index.Stacker.stack6th", "link" : "org\/saddle\/index\/Stacker$.html#stack6th[T1,T2,T3,T4,T5,T6](implicitevidence$25:org.saddle.ST[T1],implicitevidence$26:org.saddle.ORD[T1],implicitevidence$27:org.saddle.ST[T2],implicitevidence$28:org.saddle.ORD[T2],implicitevidence$29:org.saddle.ST[T3],implicitevidence$30:org.saddle.ORD[T3],implicitevidence$31:org.saddle.ST[T4],implicitevidence$32:org.saddle.ORD[T4],implicitevidence$33:org.saddle.ST[T5],implicitevidence$34:org.saddle.ORD[T5],implicitevidence$35:org.saddle.ST[T6],implicitevidence$36:org.saddle.ORD[T6]):org.saddle.index.Stacker[(T1,T2,T3,T4,T5),T6,(T1,T2,T3,T4,T5,T6)]", "kind" : "implicit def"}, {"label" : "stack5th", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2], arg4: ST[T3], arg5: ORD[T3], arg6: ST[T4], arg7: ORD[T4], arg8: ST[T5], arg9: ORD[T5]): Stacker[(T1, T2, T3, T4), T5, (T1, T2, T3, T4, T5)]", "member" : "org.saddle.index.Stacker.stack5th", "link" : "org\/saddle\/index\/Stacker$.html#stack5th[T1,T2,T3,T4,T5](implicitevidence$15:org.saddle.ST[T1],implicitevidence$16:org.saddle.ORD[T1],implicitevidence$17:org.saddle.ST[T2],implicitevidence$18:org.saddle.ORD[T2],implicitevidence$19:org.saddle.ST[T3],implicitevidence$20:org.saddle.ORD[T3],implicitevidence$21:org.saddle.ST[T4],implicitevidence$22:org.saddle.ORD[T4],implicitevidence$23:org.saddle.ST[T5],implicitevidence$24:org.saddle.ORD[T5]):org.saddle.index.Stacker[(T1,T2,T3,T4),T5,(T1,T2,T3,T4,T5)]", "kind" : "implicit def"}, {"label" : "stack4th", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2], arg4: ST[T3], arg5: ORD[T3], arg6: ST[T4], arg7: ORD[T4]): Stacker[(T1, T2, T3), T4, (T1, T2, T3, T4)]", "member" : "org.saddle.index.Stacker.stack4th", "link" : "org\/saddle\/index\/Stacker$.html#stack4th[T1,T2,T3,T4](implicitevidence$7:org.saddle.ST[T1],implicitevidence$8:org.saddle.ORD[T1],implicitevidence$9:org.saddle.ST[T2],implicitevidence$10:org.saddle.ORD[T2],implicitevidence$11:org.saddle.ST[T3],implicitevidence$12:org.saddle.ORD[T3],implicitevidence$13:org.saddle.ST[T4],implicitevidence$14:org.saddle.ORD[T4]):org.saddle.index.Stacker[(T1,T2,T3),T4,(T1,T2,T3,T4)]", "kind" : "implicit def"}, {"label" : "stack3rd", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2], arg4: ST[T3], arg5: ORD[T3]): Stacker[(T1, T2), T3, (T1, T2, T3)]", "member" : "org.saddle.index.Stacker.stack3rd", "link" : "org\/saddle\/index\/Stacker$.html#stack3rd[T1,T2,T3](implicitevidence$1:org.saddle.ST[T1],implicitevidence$2:org.saddle.ORD[T1],implicitevidence$3:org.saddle.ST[T2],implicitevidence$4:org.saddle.ORD[T2],implicitevidence$5:org.saddle.ST[T3],implicitevidence$6:org.saddle.ORD[T3]):org.saddle.index.Stacker[(T1,T2),T3,(T1,T2,T3)]", "kind" : "implicit def"}, {"label" : "stack2nd", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2]): Stacker[T1, T2, (T1, T2)]", "member" : "org.saddle.index.StackerLowPriority.stack2nd", "link" : "org\/saddle\/index\/Stacker$.html#stack2nd[T1,T2](implicitevidence$85:org.saddle.ST[T1],implicitevidence$86:org.saddle.ORD[T1],implicitevidence$87:org.saddle.ST[T2],implicitevidence$88:org.saddle.ORD[T2]):org.saddle.index.Stacker[T1,T2,(T1,T2)]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/Stacker$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/Stacker$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/Stacker$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/Stacker$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/Stacker$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/Stacker$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/Stacker$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Stacker$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Stacker$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/Stacker$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/Stacker$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/Stacker$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/Stacker$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/Stacker$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/Stacker$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/Stacker$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/Stacker$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/Stacker$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/Stacker$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/saddle\/index\/Stacker.html", "kind" : "trait"}, {"name" : "org.saddle.index.StackerLowPriority", "members_trait" : [{"label" : "stack2nd", "tail" : "(arg0: ST[T1], arg1: ORD[T1], arg2: ST[T2], arg3: ORD[T2]): Stacker[T1, T2, (T1, T2)]", "member" : "org.saddle.index.StackerLowPriority.stack2nd", "link" : "org\/saddle\/index\/StackerLowPriority.html#stack2nd[T1,T2](implicitevidence$85:org.saddle.ST[T1],implicitevidence$86:org.saddle.ORD[T1],implicitevidence$87:org.saddle.ST[T2],implicitevidence$88:org.saddle.ORD[T2]):org.saddle.index.Stacker[T1,T2,(T1,T2)]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/index\/StackerLowPriority.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/index\/StackerLowPriority.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/index\/StackerLowPriority.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/index\/StackerLowPriority.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/index\/StackerLowPriority.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/index\/StackerLowPriority.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/index\/StackerLowPriority.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/StackerLowPriority.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/StackerLowPriority.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/index\/StackerLowPriority.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/index\/StackerLowPriority.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/index\/StackerLowPriority.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/index\/StackerLowPriority.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/index\/StackerLowPriority.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/index\/StackerLowPriority.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/index\/StackerLowPriority.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/index\/StackerLowPriority.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/index\/StackerLowPriority.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/index\/StackerLowPriority.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Implicit instance of Stacker for two indexes of arbitrary type.", "trait" : "org\/saddle\/index\/StackerLowPriority.html", "kind" : "trait"}], "org.saddle" : [{"name" : "org.saddle.ArrToVec", "shortDescription" : "", "members_class" : [{"label" : "toVec", "tail" : "(): Vec[T]", "member" : "org.saddle.ArrToVec.toVec", "link" : "org\/saddle\/package$$ArrToVec.html#toVec:org.saddle.Vec[T]", "kind" : "def"}, {"member" : "org.saddle.ArrToVec#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/package$$ArrToVec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/package$$ArrToVec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/package$$ArrToVec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/package$$ArrToVec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/package$$ArrToVec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/package$$ArrToVec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/package$$ArrToVec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$ArrToVec.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$ArrToVec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$ArrToVec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/package$$ArrToVec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/package$$ArrToVec.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/package$$ArrToVec.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/package$$ArrToVec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/package$$ArrToVec.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/package$$ArrToVec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/package$$ArrToVec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/package$$ArrToVec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/package$$ArrToVec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/package$$ArrToVec.html", "kind" : "class"}, {"name" : "org.saddle.Buffer", "shortDescription" : "", "object" : "org\/saddle\/Buffer$.html", "members_class" : [{"label" : "ensureLength", "tail" : "(n: Long): Dummy[V]", "member" : "org.saddle.Buffer.ensureLength", "link" : "org\/saddle\/Buffer.html#ensureLength(n:Long):org.saddle.Buffer.Dummy[V]", "kind" : "def"}, {"label" : "+=", "tail" : "(elem: V): Buffer.this.type", "member" : "org.saddle.Buffer.+=", "link" : "org\/saddle\/Buffer.html#+=(elem:V):Buffer.this.type", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[V]", "member" : "org.saddle.Buffer.toArray", "link" : "org\/saddle\/Buffer.html#toArray:Array[V]", "kind" : "final def"}, {"member" : "org.saddle.Buffer#<init>", "error" : "unsupported entity"}, {"label" : "ctV", "tail" : ": ClassTag[V]", "member" : "org.saddle.Buffer.ctV", "link" : "org\/saddle\/Buffer.html#ctV:scala.reflect.ClassTag[V]", "kind" : "implicit val"}, {"label" : "length", "tail" : ": Int", "member" : "org.saddle.Buffer.length", "link" : "org\/saddle\/Buffer.html#length:Int", "kind" : "var"}, {"label" : "array", "tail" : ": Array[V]", "member" : "org.saddle.Buffer.array", "link" : "org\/saddle\/Buffer.html#array:Array[V]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/Buffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/Buffer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/Buffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/Buffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/Buffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/Buffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/Buffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Buffer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Buffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Buffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/Buffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/Buffer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/Buffer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/Buffer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/Buffer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/Buffer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/Buffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/Buffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/Buffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "empty", "tail" : "(arg0: ClassTag[T]): Buffer[T]", "member" : "org.saddle.Buffer.empty", "link" : "org\/saddle\/Buffer$.html#empty[T](implicitevidence$1:scala.reflect.ClassTag[T]):org.saddle.Buffer[T]", "kind" : "def"}, {"label" : "INIT_CAPACITY", "tail" : ": Int", "member" : "org.saddle.Buffer.INIT_CAPACITY", "link" : "org\/saddle\/Buffer$.html#INIT_CAPACITY:Int", "kind" : "val"}, {"label" : "startSize", "tail" : ": Int", "member" : "org.saddle.Buffer.startSize", "link" : "org\/saddle\/Buffer$.html#startSize:Int", "kind" : "val"}, {"label" : "Dummy", "tail" : "", "member" : "org.saddle.Buffer.Dummy", "link" : "org\/saddle\/Buffer$.html#Dummy", "kind" : "object"}, {"label" : "Dummy", "tail" : "", "member" : "org.saddle.Buffer.Dummy", "link" : "org\/saddle\/Buffer$.html#Dummy[A]extendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/Buffer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/Buffer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/Buffer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/Buffer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/Buffer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/Buffer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/Buffer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Buffer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Buffer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Buffer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/Buffer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/Buffer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/Buffer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/Buffer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/Buffer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/Buffer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/Buffer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/Buffer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/Buffer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/Buffer.html", "kind" : "class"}, {"name" : "org.saddle.Frame", "shortDescription" : "Frame is an immutable container for 2D data which is indexed along both axes(rows, columns) by associated keys (i.e., indexes).", "object" : "org\/saddle\/Frame$.html", "members_class" : [{"label" : "prod", "tail" : "(num: NUM[T]): Series[CX, T]", "member" : "org.saddle.Frame.prod", "link" : "org\/saddle\/Frame.html#prod(implicitnum:org.saddle.NUM[T]):org.saddle.Series[CX,T]", "kind" : "def"}, {"label" : "max", "tail" : "(num: NUM[T]): Series[CX, T]", "member" : "org.saddle.Frame.max", "link" : "org\/saddle\/Frame.html#max(implicitnum:org.saddle.NUM[T]):org.saddle.Series[CX,T]", "kind" : "def"}, {"label" : "mean", "tail" : "(num: NUM[T]): Series[CX, Double]", "member" : "org.saddle.Frame.mean", "link" : "org\/saddle\/Frame.html#mean(implicitnum:org.saddle.NUM[T]):org.saddle.Series[CX,Double]", "kind" : "def"}, {"label" : "median", "tail" : "(num: NUM[T]): Series[CX, Double]", "member" : "org.saddle.Frame.median", "link" : "org\/saddle\/Frame.html#median(implicitnum:org.saddle.NUM[T]):org.saddle.Series[CX,Double]", "kind" : "def"}, {"label" : "min", "tail" : "(num: NUM[T]): Series[CX, T]", "member" : "org.saddle.Frame.min", "link" : "org\/saddle\/Frame.html#min(implicitnum:org.saddle.NUM[T]):org.saddle.Series[CX,T]", "kind" : "def"}, {"label" : "count", "tail" : "(): Series[CX, Int]", "member" : "org.saddle.Frame.count", "link" : "org\/saddle\/Frame.html#count:org.saddle.Series[CX,Int]", "kind" : "def"}, {"label" : "sum", "tail" : "(num: NUM[T]): Series[CX, T]", "member" : "org.saddle.Frame.sum", "link" : "org\/saddle\/Frame.html#sum(implicitnum:org.saddle.NUM[T]):org.saddle.Series[CX,T]", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.saddle.Frame.equals", "link" : "org\/saddle\/Frame.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.Frame.hashCode", "link" : "org\/saddle\/Frame.html#hashCode():Int", "kind" : "def"}, {"label" : "print", "tail" : "(nrows: Int, ncols: Int, stream: OutputStream): Unit", "member" : "org.saddle.Frame.print", "link" : "org\/saddle\/Frame.html#print(nrows:Int,ncols:Int,stream:java.io.OutputStream):Unit", "kind" : "def"}, {"label" : "stringify", "tail" : "(nrows: Int, ncols: Int): String", "member" : "org.saddle.Frame.stringify", "link" : "org\/saddle\/Frame.html#stringify(nrows:Int,ncols:Int):String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.Frame.toString", "link" : "org\/saddle\/Frame.html#toString():String", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): IndexedSeq[(RX, CX, T)]", "member" : "org.saddle.Frame.toSeq", "link" : "org\/saddle\/Frame.html#toSeq:IndexedSeq[(RX,CX,T)]", "kind" : "def"}, {"label" : "toColSeq", "tail" : "(): IndexedSeq[(CX, Series[RX, T])]", "member" : "org.saddle.Frame.toColSeq", "link" : "org\/saddle\/Frame.html#toColSeq:IndexedSeq[(CX,org.saddle.Series[RX,T])]", "kind" : "def"}, {"label" : "toRowSeq", "tail" : "(): IndexedSeq[(RX, Series[CX, T])]", "member" : "org.saddle.Frame.toRowSeq", "link" : "org\/saddle\/Frame.html#toRowSeq:IndexedSeq[(RX,org.saddle.Series[CX,T])]", "kind" : "def"}, {"label" : "rsqueeze", "tail" : "(): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rsqueeze", "link" : "org\/saddle\/Frame.html#rsqueeze:org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rdropNA", "tail" : "(): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rdropNA", "link" : "org\/saddle\/Frame.html#rdropNA:org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "addRow", "tail" : "(other: Series[CX, T], how: JoinType): Frame[Int, CX, T]", "member" : "org.saddle.Frame.addRow", "link" : "org\/saddle\/Frame.html#addRow(other:org.saddle.Series[CX,T],how:org.saddle.index.JoinType):org.saddle.Frame[Int,CX,T]", "kind" : "def"}, {"label" : "addRow", "tail" : "(other: Series[CX, T], newRowIx: RX, how: JoinType): Frame[RX, CX, T]", "member" : "org.saddle.Frame.addRow", "link" : "org\/saddle\/Frame.html#addRow(other:org.saddle.Series[CX,T],newRowIx:RX,how:org.saddle.index.JoinType):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rfilterAt", "tail" : "(pred: (Int) ⇒ Boolean): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rfilterAt", "link" : "org\/saddle\/Frame.html#rfilterAt(pred:Int=>Boolean):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rfilterIx", "tail" : "(pred: (RX) ⇒ Boolean): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rfilterIx", "link" : "org\/saddle\/Frame.html#rfilterIx(pred:RX=>Boolean):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rfilter", "tail" : "(pred: (Series[CX, T]) ⇒ Boolean): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rfilter", "link" : "org\/saddle\/Frame.html#rfilter(pred:org.saddle.Series[CX,T]=>Boolean):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "cshift", "tail" : "(n: Int): Frame[RX, CX, T]", "member" : "org.saddle.Frame.cshift", "link" : "org\/saddle\/Frame.html#cshift(n:Int):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rwhere", "tail" : "(pred: Vec[Boolean]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rwhere", "link" : "org\/saddle\/Frame.html#rwhere(pred:org.saddle.Vec[Boolean]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rwhere", "tail" : "(pred: Series[_, Boolean]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rwhere", "link" : "org\/saddle\/Frame.html#rwhere(pred:org.saddle.Series[_,Boolean]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rdistinct", "tail" : "(): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rdistinct", "link" : "org\/saddle\/Frame.html#rdistinct:org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Frame[RX, CX, T]", "member" : "org.saddle.Frame.distinct", "link" : "org\/saddle\/Frame.html#distinct:org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rbind", "tail" : "(other: Frame[RX, CX, T], how: JoinType): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rbind", "link" : "org\/saddle\/Frame.html#rbind(other:org.saddle.Frame[RX,CX,T],how:org.saddle.index.JoinType):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "cbind", "tail" : "(other: Frame[RX, CX, T], how: JoinType): Frame[RX, CX, T]", "member" : "org.saddle.Frame.cbind", "link" : "org\/saddle\/Frame.html#cbind(other:org.saddle.Frame[RX,CX,T],how:org.saddle.index.JoinType):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rconcat", "tail" : "(other: Frame[RX, CX, T], how: JoinType): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rconcat", "link" : "org\/saddle\/Frame.html#rconcat(other:org.saddle.Frame[RX,CX,T],how:org.saddle.index.JoinType):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rtransform", "tail" : "(f: (Series[CX, T]) ⇒ Series[SX, U])(arg0: ST[U], arg1: ST[SX], arg2: ORD[SX]): Frame[RX, SX, U]", "member" : "org.saddle.Frame.rtransform", "link" : "org\/saddle\/Frame.html#rtransform[U,SX](f:org.saddle.Series[CX,T]=>org.saddle.Series[SX,U])(implicitevidence$47:org.saddle.ST[U],implicitevidence$48:org.saddle.ST[SX],implicitevidence$49:org.saddle.ORD[SX]):org.saddle.Frame[RX,SX,U]", "kind" : "def"}, {"label" : "rreduce", "tail" : "(f: (Series[CX, T]) ⇒ U)(arg0: ST[U]): Series[RX, U]", "member" : "org.saddle.Frame.rreduce", "link" : "org\/saddle\/Frame.html#rreduce[U](f:org.saddle.Series[CX,T]=>U)(implicitevidence$46:org.saddle.ST[U]):org.saddle.Series[RX,U]", "kind" : "def"}, {"label" : "rmapVec", "tail" : "(f: (Vec[T]) ⇒ Vec[U])(arg0: ST[U]): Frame[RX, CX, U]", "member" : "org.saddle.Frame.rmapVec", "link" : "org\/saddle\/Frame.html#rmapVec[U](f:org.saddle.Vec[T]=>org.saddle.Vec[U])(implicitevidence$45:org.saddle.ST[U]):org.saddle.Frame[RX,CX,U]", "kind" : "def"}, {"label" : "rmask", "tail" : "(b: Vec[Boolean]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rmask", "link" : "org\/saddle\/Frame.html#rmask(b:org.saddle.Vec[Boolean]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "toMat", "tail" : "(): Mat[T]", "member" : "org.saddle.Frame.toMat", "link" : "org\/saddle\/Frame.html#toMat:org.saddle.Mat[T]", "kind" : "def"}, {"label" : "unstack", "tail" : "(splt: Splitter[RX, O1, O2], stkr: Stacker[CX, O2, V], ord1: ORD[O1], ord2: ORD[O2], m1: ST[O1], m2: ST[O2]): Frame[O1, V, T]", "member" : "org.saddle.Frame.unstack", "link" : "org\/saddle\/Frame.html#unstack[O1,O2,V](implicitsplt:org.saddle.index.Splitter[RX,O1,O2],implicitstkr:org.saddle.index.Stacker[CX,O2,V],implicitord1:org.saddle.ORD[O1],implicitord2:org.saddle.ORD[O2],implicitm1:org.saddle.ST[O1],implicitm2:org.saddle.ST[O2]):org.saddle.Frame[O1,V,T]", "kind" : "def"}, {"label" : "stack", "tail" : "(splt: Splitter[CX, O1, O2], stkr: Stacker[RX, O2, V], ord1: ORD[O1], ord2: ORD[O2], m1: ST[O1], m2: ST[O2]): Frame[V, O1, T]", "member" : "org.saddle.Frame.stack", "link" : "org\/saddle\/Frame.html#stack[O1,O2,V](implicitsplt:org.saddle.index.Splitter[CX,O1,O2],implicitstkr:org.saddle.index.Stacker[RX,O2,V],implicitord1:org.saddle.ORD[O1],implicitord2:org.saddle.ORD[O2],implicitm1:org.saddle.ST[O1],implicitm2:org.saddle.ST[O2]):org.saddle.Frame[V,O1,T]", "kind" : "def"}, {"label" : "melt", "tail" : "(melter: Melter[RX, CX, W]): Series[W, T]", "member" : "org.saddle.Frame.melt", "link" : "org\/saddle\/Frame.html#melt[W](implicitmelter:org.saddle.index.Melter[RX,CX,W]):org.saddle.Series[W,T]", "kind" : "def"}, {"label" : "squeeze", "tail" : "(): Frame[RX, CX, T]", "member" : "org.saddle.Frame.squeeze", "link" : "org\/saddle\/Frame.html#squeeze:org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "align", "tail" : "(other: Frame[RX, CX, U], rhow: JoinType, chow: JoinType)(arg0: ST[U]): (Frame[RX, CX, T], Frame[RX, CX, U])", "member" : "org.saddle.Frame.align", "link" : "org\/saddle\/Frame.html#align[U](other:org.saddle.Frame[RX,CX,U],rhow:org.saddle.index.JoinType,chow:org.saddle.index.JoinType)(implicitevidence$44:org.saddle.ST[U]):(org.saddle.Frame[RX,CX,T],org.saddle.Frame[RX,CX,U])", "kind" : "def"}, {"label" : "addCol", "tail" : "(other: Series[RX, T], how: JoinType): Frame[RX, Int, T]", "member" : "org.saddle.Frame.addCol", "link" : "org\/saddle\/Frame.html#addCol(other:org.saddle.Series[RX,T],how:org.saddle.index.JoinType):org.saddle.Frame[RX,Int,T]", "kind" : "def"}, {"label" : "addCol", "tail" : "(other: Series[RX, T], newColIx: CX, how: JoinType): Frame[RX, CX, T]", "member" : "org.saddle.Frame.addCol", "link" : "org\/saddle\/Frame.html#addCol(other:org.saddle.Series[RX,T],newColIx:CX,how:org.saddle.index.JoinType):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rollingFtoS", "tail" : "(windowSize: Int, f: (Frame[RX, CX, T]) ⇒ B)(arg0: ST[B]): Series[RX, B]", "member" : "org.saddle.Frame.rollingFtoS", "link" : "org\/saddle\/Frame.html#rollingFtoS[B](windowSize:Int,f:org.saddle.Frame[RX,CX,T]=>B)(implicitevidence$43:org.saddle.ST[B]):org.saddle.Series[RX,B]", "kind" : "def"}, {"label" : "rolling", "tail" : "(windowSize: Int, f: (Series[RX, T]) ⇒ B)(arg0: ST[B]): Frame[RX, CX, B]", "member" : "org.saddle.Frame.rolling", "link" : "org\/saddle\/Frame.html#rolling[B](windowSize:Int,f:org.saddle.Series[RX,T]=>B)(implicitevidence$42:org.saddle.ST[B]):org.saddle.Frame[RX,CX,B]", "kind" : "def"}, {"label" : "dropNA", "tail" : "(): Frame[RX, CX, T]", "member" : "org.saddle.Frame.dropNA", "link" : "org\/saddle\/Frame.html#dropNA:org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "filterAt", "tail" : "(pred: (Int) ⇒ Boolean): Frame[RX, CX, T]", "member" : "org.saddle.Frame.filterAt", "link" : "org\/saddle\/Frame.html#filterAt(pred:Int=>Boolean):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "filterIx", "tail" : "(pred: (CX) ⇒ Boolean): Frame[RX, CX, T]", "member" : "org.saddle.Frame.filterIx", "link" : "org\/saddle\/Frame.html#filterIx(pred:CX=>Boolean):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Series[RX, T]) ⇒ Boolean): Frame[RX, CX, T]", "member" : "org.saddle.Frame.filter", "link" : "org\/saddle\/Frame.html#filter(pred:org.saddle.Series[RX,T]=>Boolean):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "shift", "tail" : "(n: Int): Frame[RX, CX, T]", "member" : "org.saddle.Frame.shift", "link" : "org\/saddle\/Frame.html#shift(n:Int):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "where", "tail" : "(pred: Vec[Boolean]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.where", "link" : "org\/saddle\/Frame.html#where(pred:org.saddle.Vec[Boolean]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "where", "tail" : "(pred: Series[_, Boolean]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.where", "link" : "org\/saddle\/Frame.html#where(pred:org.saddle.Series[_,Boolean]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "concat", "tail" : "(other: Frame[RX, CX, T], how: JoinType): Frame[RX, CX, T]", "member" : "org.saddle.Frame.concat", "link" : "org\/saddle\/Frame.html#concat(other:org.saddle.Frame[RX,CX,T],how:org.saddle.index.JoinType):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(ix: Index[Y])(arg0: ST[Y], arg1: ORD[Y]): FrameGrouper[Y, RX, CX, T]", "member" : "org.saddle.Frame.groupBy", "link" : "org\/saddle\/Frame.html#groupBy[Y](ix:org.saddle.Index[Y])(implicitevidence$40:org.saddle.ST[Y],implicitevidence$41:org.saddle.ORD[Y]):org.saddle.groupby.FrameGrouper[Y,RX,CX,T]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(fn: (RX) ⇒ Y)(arg0: ST[Y], arg1: ORD[Y]): FrameGrouper[Y, RX, CX, T]", "member" : "org.saddle.Frame.groupBy", "link" : "org\/saddle\/Frame.html#groupBy[Y](fn:RX=>Y)(implicitevidence$38:org.saddle.ST[Y],implicitevidence$39:org.saddle.ORD[Y]):org.saddle.groupby.FrameGrouper[Y,RX,CX,T]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(): FrameGrouper[RX, RX, CX, T]", "member" : "org.saddle.Frame.groupBy", "link" : "org\/saddle\/Frame.html#groupBy:org.saddle.groupby.FrameGrouper[RX,RX,CX,T]", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (Series[RX, T]) ⇒ Series[SX, U])(arg0: ST[U], arg1: ST[SX], arg2: ORD[SX]): Frame[SX, CX, U]", "member" : "org.saddle.Frame.transform", "link" : "org\/saddle\/Frame.html#transform[U,SX](f:org.saddle.Series[RX,T]=>org.saddle.Series[SX,U])(implicitevidence$35:org.saddle.ST[U],implicitevidence$36:org.saddle.ST[SX],implicitevidence$37:org.saddle.ORD[SX]):org.saddle.Frame[SX,CX,U]", "kind" : "def"}, {"label" : "reduce", "tail" : "(f: (Series[RX, T]) ⇒ U)(arg0: ST[U]): Series[CX, U]", "member" : "org.saddle.Frame.reduce", "link" : "org\/saddle\/Frame.html#reduce[U](f:org.saddle.Series[RX,T]=>U)(implicitevidence$34:org.saddle.ST[U]):org.saddle.Series[CX,U]", "kind" : "def"}, {"label" : "mapVec", "tail" : "(f: (Vec[T]) ⇒ Vec[U])(arg0: ST[U]): Frame[RX, CX, U]", "member" : "org.saddle.Frame.mapVec", "link" : "org\/saddle\/Frame.html#mapVec[U](f:org.saddle.Vec[T]=>org.saddle.Vec[U])(implicitevidence$33:org.saddle.ST[U]):org.saddle.Frame[RX,CX,U]", "kind" : "def"}, {"label" : "joinMap", "tail" : "(other: Frame[RX, CX, U], rhow: JoinType, chow: JoinType)(f: (T, U) ⇒ V)(arg0: ST[U], arg1: ST[V]): Frame[RX, CX, V]", "member" : "org.saddle.Frame.joinMap", "link" : "org\/saddle\/Frame.html#joinMap[U,V](other:org.saddle.Frame[RX,CX,U],rhow:org.saddle.index.JoinType,chow:org.saddle.index.JoinType)(f:(T,U)=>V)(implicitevidence$31:org.saddle.ST[U],implicitevidence$32:org.saddle.ST[V]):org.saddle.Frame[RX,CX,V]", "kind" : "def"}, {"label" : "mask", "tail" : "(m: Vec[Boolean]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.mask", "link" : "org\/saddle\/Frame.html#mask(m:org.saddle.Vec[Boolean]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "mask", "tail" : "(f: (T) ⇒ Boolean): Frame[RX, CX, T]", "member" : "org.saddle.Frame.mask", "link" : "org\/saddle\/Frame.html#mask(f:T=>Boolean):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "mapValues", "tail" : "(f: (T) ⇒ U)(arg0: ST[U]): Frame[RX, CX, U]", "member" : "org.saddle.Frame.mapValues", "link" : "org\/saddle\/Frame.html#mapValues[U](f:T=>U)(implicitevidence$30:org.saddle.ST[U]):org.saddle.Frame[RX,CX,U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: ((RX, CX, T)) ⇒ Traversable[(SX, DX, U)])(arg0: ST[SX], arg1: ORD[SX], arg2: ST[DX], arg3: ORD[DX], arg4: ST[U]): Frame[SX, DX, U]", "member" : "org.saddle.Frame.flatMap", "link" : "org\/saddle\/Frame.html#flatMap[SX,DX,U](f:((RX,CX,T))=>Traversable[(SX,DX,U)])(implicitevidence$25:org.saddle.ST[SX],implicitevidence$26:org.saddle.ORD[SX],implicitevidence$27:org.saddle.ST[DX],implicitevidence$28:org.saddle.ORD[DX],implicitevidence$29:org.saddle.ST[U]):org.saddle.Frame[SX,DX,U]", "kind" : "def"}, {"label" : "map", "tail" : "(f: ((RX, CX, T)) ⇒ (SX, DX, U))(arg0: ST[SX], arg1: ORD[SX], arg2: ST[DX], arg3: ORD[DX], arg4: ST[U]): Frame[SX, DX, U]", "member" : "org.saddle.Frame.map", "link" : "org\/saddle\/Frame.html#map[SX,DX,U](f:((RX,CX,T))=>(SX,DX,U))(implicitevidence$20:org.saddle.ST[SX],implicitevidence$21:org.saddle.ORD[SX],implicitevidence$22:org.saddle.ST[DX],implicitevidence$23:org.saddle.ORD[DX],implicitevidence$24:org.saddle.ST[U]):org.saddle.Frame[SX,DX,U]", "kind" : "def"}, {"label" : "sortedColsBy", "tail" : "(f: (Series[RX, T]) ⇒ Q)(arg0: ORD[Q]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.sortedColsBy", "link" : "org\/saddle\/Frame.html#sortedColsBy[Q](f:org.saddle.Series[RX,T]=>Q)(implicitevidence$19:org.saddle.ORD[Q]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "sortedRowsBy", "tail" : "(f: (Series[CX, T]) ⇒ Q)(arg0: ORD[Q]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.sortedRowsBy", "link" : "org\/saddle\/Frame.html#sortedRowsBy[Q](f:org.saddle.Series[CX,T]=>Q)(implicitevidence$18:org.saddle.ORD[Q]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "sortedCols", "tail" : "(locs: Int*)(ev: ORD[T]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.sortedCols", "link" : "org\/saddle\/Frame.html#sortedCols(locs:Int*)(implicitev:org.saddle.ORD[T]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "sortedRows", "tail" : "(locs: Int*)(ev: ORD[T]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.sortedRows", "link" : "org\/saddle\/Frame.html#sortedRows(locs:Int*)(implicitev:org.saddle.ORD[T]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "sortedCIx", "tail" : "(): Frame[RX, CX, T]", "member" : "org.saddle.Frame.sortedCIx", "link" : "org\/saddle\/Frame.html#sortedCIx:org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "sortedRIx", "tail" : "(): Frame[RX, CX, T]", "member" : "org.saddle.Frame.sortedRIx", "link" : "org\/saddle\/Frame.html#sortedRIx:org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "emptyCol", "tail" : "(): Series[RX, T]", "member" : "org.saddle.Frame.emptyCol", "link" : "org\/saddle\/Frame.html#emptyCol:org.saddle.Series[RX,T]", "kind" : "def"}, {"label" : "emptyRow", "tail" : "(): Series[CX, T]", "member" : "org.saddle.Frame.emptyRow", "link" : "org\/saddle\/Frame.html#emptyRow:org.saddle.Series[CX,T]", "kind" : "def"}, {"label" : "lastCol", "tail" : "(k: CX): Series[RX, T]", "member" : "org.saddle.Frame.lastCol", "link" : "org\/saddle\/Frame.html#lastCol(k:CX):org.saddle.Series[RX,T]", "kind" : "def"}, {"label" : "firstCol", "tail" : "(k: CX): Series[RX, T]", "member" : "org.saddle.Frame.firstCol", "link" : "org\/saddle\/Frame.html#firstCol(k:CX):org.saddle.Series[RX,T]", "kind" : "def"}, {"label" : "last", "tail" : "(k: RX): Series[CX, T]", "member" : "org.saddle.Frame.last", "link" : "org\/saddle\/Frame.html#last(k:RX):org.saddle.Series[CX,T]", "kind" : "def"}, {"label" : "first", "tail" : "(k: RX): Series[CX, T]", "member" : "org.saddle.Frame.first", "link" : "org\/saddle\/Frame.html#first(k:RX):org.saddle.Series[CX,T]", "kind" : "def"}, {"label" : "tailCol", "tail" : "(n: Int): Frame[RX, CX, T]", "member" : "org.saddle.Frame.tailCol", "link" : "org\/saddle\/Frame.html#tailCol(n:Int):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "headCol", "tail" : "(n: Int): Frame[RX, CX, T]", "member" : "org.saddle.Frame.headCol", "link" : "org\/saddle\/Frame.html#headCol(n:Int):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "tail", "tail" : "(n: Int): Frame[RX, CX, T]", "member" : "org.saddle.Frame.tail", "link" : "org\/saddle\/Frame.html#tail(n:Int):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "head", "tail" : "(n: Int): Frame[RX, CX, T]", "member" : "org.saddle.Frame.head", "link" : "org\/saddle\/Frame.html#head(n:Int):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "resetColIndex", "tail" : "(): Frame[RX, Int, T]", "member" : "org.saddle.Frame.resetColIndex", "link" : "org\/saddle\/Frame.html#resetColIndex:org.saddle.Frame[RX,Int,T]", "kind" : "def"}, {"label" : "resetRowIndex", "tail" : "(): Frame[Int, CX, T]", "member" : "org.saddle.Frame.resetRowIndex", "link" : "org\/saddle\/Frame.html#resetRowIndex:org.saddle.Frame[Int,CX,T]", "kind" : "def"}, {"label" : "mapColIndex", "tail" : "(fn: (CX) ⇒ Y)(arg0: ST[Y], arg1: ORD[Y]): Frame[RX, Y, T]", "member" : "org.saddle.Frame.mapColIndex", "link" : "org\/saddle\/Frame.html#mapColIndex[Y](fn:CX=>Y)(implicitevidence$16:org.saddle.ST[Y],implicitevidence$17:org.saddle.ORD[Y]):org.saddle.Frame[RX,Y,T]", "kind" : "def"}, {"label" : "withColIndex", "tail" : "(row1: Int, row2: Int)(ordT: ORD[T]): Frame[RX, (T, T), T]", "member" : "org.saddle.Frame.withColIndex", "link" : "org\/saddle\/Frame.html#withColIndex(row1:Int,row2:Int)(implicitordT:org.saddle.ORD[T]):org.saddle.Frame[RX,(T,T),T]", "kind" : "def"}, {"label" : "withColIndex", "tail" : "(row: Int)(ordT: ORD[T]): Frame[RX, T, T]", "member" : "org.saddle.Frame.withColIndex", "link" : "org\/saddle\/Frame.html#withColIndex(row:Int)(implicitordT:org.saddle.ORD[T]):org.saddle.Frame[RX,T,T]", "kind" : "def"}, {"label" : "setColIndex", "tail" : "(newIx: Index[Y])(arg0: ST[Y], arg1: ORD[Y]): Frame[RX, Y, T]", "member" : "org.saddle.Frame.setColIndex", "link" : "org\/saddle\/Frame.html#setColIndex[Y](newIx:org.saddle.Index[Y])(implicitevidence$14:org.saddle.ST[Y],implicitevidence$15:org.saddle.ORD[Y]):org.saddle.Frame[RX,Y,T]", "kind" : "def"}, {"label" : "mapCols", "tail" : "(fn: (CX, Vec[T]) ⇒ Vec[Y])(arg0: ST[Y]): Frame[RX, CX, Y]", "member" : "org.saddle.Frame.mapCols", "link" : "org\/saddle\/Frame.html#mapCols[Y](fn:(CX,org.saddle.Vec[T])=>org.saddle.Vec[Y])(implicitevidence$13:org.saddle.ST[Y]):org.saddle.Frame[RX,CX,Y]", "kind" : "def"}, {"label" : "mapRows", "tail" : "(fn: (RX, Vec[T]) ⇒ Vec[Y])(arg0: ST[Y]): Frame[RX, CX, Y]", "member" : "org.saddle.Frame.mapRows", "link" : "org\/saddle\/Frame.html#mapRows[Y](fn:(RX,org.saddle.Vec[T])=>org.saddle.Vec[Y])(implicitevidence$12:org.saddle.ST[Y]):org.saddle.Frame[RX,CX,Y]", "kind" : "def"}, {"label" : "mapRowIndex", "tail" : "(fn: (RX) ⇒ Y)(arg0: ST[Y], arg1: ORD[Y]): Frame[Y, CX, T]", "member" : "org.saddle.Frame.mapRowIndex", "link" : "org\/saddle\/Frame.html#mapRowIndex[Y](fn:RX=>Y)(implicitevidence$10:org.saddle.ST[Y],implicitevidence$11:org.saddle.ORD[Y]):org.saddle.Frame[Y,CX,T]", "kind" : "def"}, {"label" : "withRowIndex", "tail" : "(col1: Int, col2: Int)(ordT: ORD[T]): Frame[(T, T), CX, T]", "member" : "org.saddle.Frame.withRowIndex", "link" : "org\/saddle\/Frame.html#withRowIndex(col1:Int,col2:Int)(implicitordT:org.saddle.ORD[T]):org.saddle.Frame[(T,T),CX,T]", "kind" : "def"}, {"label" : "withRowIndex", "tail" : "(col: Int)(ordT: ORD[T]): Frame[T, CX, T]", "member" : "org.saddle.Frame.withRowIndex", "link" : "org\/saddle\/Frame.html#withRowIndex(col:Int)(implicitordT:org.saddle.ORD[T]):org.saddle.Frame[T,CX,T]", "kind" : "def"}, {"label" : "setRowIndex", "tail" : "(newIx: Index[Y])(arg0: ST[Y], arg1: ORD[Y]): Frame[Y, CX, T]", "member" : "org.saddle.Frame.setRowIndex", "link" : "org\/saddle\/Frame.html#setRowIndex[Y](newIx:org.saddle.Index[Y])(implicitevidence$8:org.saddle.ST[Y],implicitevidence$9:org.saddle.ORD[Y]):org.saddle.Frame[Y,CX,T]", "kind" : "def"}, {"label" : "colType", "tail" : "(arg0: ST[U1], arg1: ST[U2]): Frame[RX, CX, Any]", "member" : "org.saddle.Frame.colType", "link" : "org\/saddle\/Frame.html#colType[U1,U2](implicitevidence$6:org.saddle.ST[U1],implicitevidence$7:org.saddle.ST[U2]):org.saddle.Frame[RX,CX,Any]", "kind" : "def"}, {"label" : "colType", "tail" : "(arg0: ST[U]): Frame[RX, CX, U]", "member" : "org.saddle.Frame.colType", "link" : "org\/saddle\/Frame.html#colType[U](implicitevidence$5:org.saddle.ST[U]):org.saddle.Frame[RX,CX,U]", "kind" : "def"}, {"label" : "reindexCol", "tail" : "(cix: Index[CX]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.reindexCol", "link" : "org\/saddle\/Frame.html#reindexCol(cix:org.saddle.Index[CX]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "reindexRow", "tail" : "(rix: Index[RX]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.reindexRow", "link" : "org\/saddle\/Frame.html#reindexRow(rix:org.saddle.Index[RX]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "reindex", "tail" : "(rix: Index[RX], cix: Index[CX]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.reindex", "link" : "org\/saddle\/Frame.html#reindex(rix:org.saddle.Index[RX],cix:org.saddle.Index[CX]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "raw", "tail" : "(r: Int, c: Int): T", "member" : "org.saddle.Frame.raw", "link" : "org\/saddle\/Frame.html#raw(r:Int,c:Int):T", "kind" : "def"}, {"label" : "at", "tail" : "(r: Slice[Int], c: Slice[Int]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.at", "link" : "org\/saddle\/Frame.html#at(r:org.saddle.index.Slice[Int],c:org.saddle.index.Slice[Int]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "at", "tail" : "(r: Int, c: Array[Int]): Series[CX, T]", "member" : "org.saddle.Frame.at", "link" : "org\/saddle\/Frame.html#at(r:Int,c:Array[Int]):org.saddle.Series[CX,T]", "kind" : "def"}, {"label" : "at", "tail" : "(r: Array[Int], c: Int): Series[RX, T]", "member" : "org.saddle.Frame.at", "link" : "org\/saddle\/Frame.html#at(r:Array[Int],c:Int):org.saddle.Series[RX,T]", "kind" : "def"}, {"label" : "at", "tail" : "(r: Array[Int], c: Array[Int]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.at", "link" : "org\/saddle\/Frame.html#at(r:Array[Int],c:Array[Int]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "at", "tail" : "(r: Int, c: Int): Scalar[T]", "member" : "org.saddle.Frame.at", "link" : "org\/saddle\/Frame.html#at(r:Int,c:Int):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(rix: Array[RX], cix: Array[CX]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.apply", "link" : "org\/saddle\/Frame.html#apply(rix:Array[RX],cix:Array[CX]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(rix: Array[RX], cix: Slice[CX]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.apply", "link" : "org\/saddle\/Frame.html#apply(rix:Array[RX],cix:org.saddle.index.Slice[CX]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(rix: Slice[RX], cix: Array[CX]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.apply", "link" : "org\/saddle\/Frame.html#apply(rix:org.saddle.index.Slice[RX],cix:Array[CX]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(rix: Slice[RX], cix: Slice[CX]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.apply", "link" : "org\/saddle\/Frame.html#apply(rix:org.saddle.index.Slice[RX],cix:org.saddle.index.Slice[CX]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rowSplitBy", "tail" : "(k: RX): (Frame[RX, CX, T], Frame[RX, CX, T])", "member" : "org.saddle.Frame.rowSplitBy", "link" : "org\/saddle\/Frame.html#rowSplitBy(k:RX):(org.saddle.Frame[RX,CX,T],org.saddle.Frame[RX,CX,T])", "kind" : "def"}, {"label" : "rowSplitAt", "tail" : "(r: Int): (Frame[RX, CX, T], Frame[RX, CX, T])", "member" : "org.saddle.Frame.rowSplitAt", "link" : "org\/saddle\/Frame.html#rowSplitAt(r:Int):(org.saddle.Frame[RX,CX,T],org.saddle.Frame[RX,CX,T])", "kind" : "def"}, {"label" : "rowSlice", "tail" : "(from: Int, until: Int, stride: Int): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rowSlice", "link" : "org\/saddle\/Frame.html#rowSlice(from:Int,until:Int,stride:Int):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rowAt", "tail" : "(slice: Slice[Int]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rowAt", "link" : "org\/saddle\/Frame.html#rowAt(slice:org.saddle.index.Slice[Int]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rowAt", "tail" : "(locs: Array[Int]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rowAt", "link" : "org\/saddle\/Frame.html#rowAt(locs:Array[Int]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rowAt", "tail" : "(locs: Int*): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rowAt", "link" : "org\/saddle\/Frame.html#rowAt(locs:Int*):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rowAt", "tail" : "(loc: Int): Series[CX, T]", "member" : "org.saddle.Frame.rowAt", "link" : "org\/saddle\/Frame.html#rowAt(loc:Int):org.saddle.Series[CX,T]", "kind" : "def"}, {"label" : "rowSliceBy", "tail" : "(from: RX, to: RX, inclusive: Boolean): Frame[RX, CX, T]", "member" : "org.saddle.Frame.rowSliceBy", "link" : "org\/saddle\/Frame.html#rowSliceBy(from:RX,to:RX,inclusive:Boolean):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "row", "tail" : "(keys: Array[RX]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.row", "link" : "org\/saddle\/Frame.html#row(keys:Array[RX]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "row", "tail" : "(slice: Slice[RX]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.row", "link" : "org\/saddle\/Frame.html#row(slice:org.saddle.index.Slice[RX]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "row", "tail" : "(keys: RX*): Frame[RX, CX, T]", "member" : "org.saddle.Frame.row", "link" : "org\/saddle\/Frame.html#row(keys:RX*):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "colSplitBy", "tail" : "(k: CX): (Frame[RX, CX, T], Frame[RX, CX, T])", "member" : "org.saddle.Frame.colSplitBy", "link" : "org\/saddle\/Frame.html#colSplitBy(k:CX):(org.saddle.Frame[RX,CX,T],org.saddle.Frame[RX,CX,T])", "kind" : "def"}, {"label" : "colSplitAt", "tail" : "(c: Int): (Frame[RX, CX, T], Frame[RX, CX, T])", "member" : "org.saddle.Frame.colSplitAt", "link" : "org\/saddle\/Frame.html#colSplitAt(c:Int):(org.saddle.Frame[RX,CX,T],org.saddle.Frame[RX,CX,T])", "kind" : "def"}, {"label" : "colSlice", "tail" : "(from: Int, until: Int, stride: Int): Frame[RX, CX, T]", "member" : "org.saddle.Frame.colSlice", "link" : "org\/saddle\/Frame.html#colSlice(from:Int,until:Int,stride:Int):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "colAt", "tail" : "(slice: Slice[Int]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.colAt", "link" : "org\/saddle\/Frame.html#colAt(slice:org.saddle.index.Slice[Int]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "colAt", "tail" : "(locs: Array[Int]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.colAt", "link" : "org\/saddle\/Frame.html#colAt(locs:Array[Int]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "colAt", "tail" : "(locs: Int*): Frame[RX, CX, T]", "member" : "org.saddle.Frame.colAt", "link" : "org\/saddle\/Frame.html#colAt(locs:Int*):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "colAt", "tail" : "(loc: Int): Series[RX, T]", "member" : "org.saddle.Frame.colAt", "link" : "org\/saddle\/Frame.html#colAt(loc:Int):org.saddle.Series[RX,T]", "kind" : "def"}, {"label" : "colSliceBy", "tail" : "(from: CX, to: CX, inclusive: Boolean): Frame[RX, CX, T]", "member" : "org.saddle.Frame.colSliceBy", "link" : "org\/saddle\/Frame.html#colSliceBy(from:CX,to:CX,inclusive:Boolean):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "col", "tail" : "(keys: Array[CX]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.col", "link" : "org\/saddle\/Frame.html#col(keys:Array[CX]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "col", "tail" : "(slice: Slice[CX]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.col", "link" : "org\/saddle\/Frame.html#col(slice:org.saddle.index.Slice[CX]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "col", "tail" : "(keys: CX*): Frame[RX, CX, T]", "member" : "org.saddle.Frame.col", "link" : "org\/saddle\/Frame.html#col(keys:CX*):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "T", "tail" : "(): Frame[CX, RX, T]", "member" : "org.saddle.Frame.T", "link" : "org\/saddle\/Frame.html#T:org.saddle.Frame[CX,RX,T]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Frame.isEmpty", "link" : "org\/saddle\/Frame.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "numCols", "tail" : "(): Int", "member" : "org.saddle.Frame.numCols", "link" : "org\/saddle\/Frame.html#numCols:Int", "kind" : "def"}, {"label" : "numRows", "tail" : "(): Int", "member" : "org.saddle.Frame.numRows", "link" : "org\/saddle\/Frame.html#numRows:Int", "kind" : "def"}, {"member" : "org.saddle.Frame#<init>", "error" : "unsupported entity"}, {"label" : "colIx", "tail" : ": Index[CX]", "member" : "org.saddle.Frame.colIx", "link" : "org\/saddle\/Frame.html#colIx:org.saddle.Index[CX]", "kind" : "val"}, {"label" : "rowIx", "tail" : ": Index[RX]", "member" : "org.saddle.Frame.rowIx", "link" : "org\/saddle\/Frame.html#rowIx:org.saddle.Index[RX]", "kind" : "val"}, {"label" : "**=", "tail" : "(other: B)(op: BinOpInPlace[Power, Frame[RX, CX, T], B]): Unit", "member" : "org.saddle.ops.NumericOps.**=", "link" : "org\/saddle\/Frame.html#**=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Power,This,B]):Unit", "kind" : "def"}, {"label" : "%=", "tail" : "(other: B)(op: BinOpInPlace[Mod, Frame[RX, CX, T], B]): Unit", "member" : "org.saddle.ops.NumericOps.%=", "link" : "org\/saddle\/Frame.html#%=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Mod,This,B]):Unit", "kind" : "def"}, {"label" : "\/=", "tail" : "(other: B)(op: BinOpInPlace[Divide, Frame[RX, CX, T], B]): Unit", "member" : "org.saddle.ops.NumericOps.\/=", "link" : "org\/saddle\/Frame.html#\/=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Divide,This,B]):Unit", "kind" : "def"}, {"label" : "*=", "tail" : "(other: B)(op: BinOpInPlace[Multiply, Frame[RX, CX, T], B]): Unit", "member" : "org.saddle.ops.NumericOps.*=", "link" : "org\/saddle\/Frame.html#*=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Multiply,This,B]):Unit", "kind" : "def"}, {"label" : "-=", "tail" : "(other: B)(op: BinOpInPlace[Subtract, Frame[RX, CX, T], B]): Unit", "member" : "org.saddle.ops.NumericOps.-=", "link" : "org\/saddle\/Frame.html#-=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Subtract,This,B]):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(other: B)(op: BinOpInPlace[Add, Frame[RX, CX, T], B]): Unit", "member" : "org.saddle.ops.NumericOps.+=", "link" : "org\/saddle\/Frame.html#+=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Add,This,B]):Unit", "kind" : "def"}, {"label" : "outer", "tail" : "(other: B)(op: BinOp[OuterProd, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.outer", "link" : "org\/saddle\/Frame.html#outer[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.OuterProd,This,B,That]):That", "kind" : "def"}, {"label" : "dot", "tail" : "(other: B)(op: BinOp[InnerProd, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.dot", "link" : "org\/saddle\/Frame.html#dot[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.InnerProd,This,B,That]):That", "kind" : "def"}, {"label" : "xor", "tail" : "(other: B)(op: BinOp[XorOp, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.xor", "link" : "org\/saddle\/Frame.html#xor[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.XorOp,This,B,That]):That", "kind" : "def"}, {"label" : "&&", "tail" : "(other: B)(op: BinOp[AndOp, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.&&", "link" : "org\/saddle\/Frame.html#&&[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.AndOp,This,B,That]):That", "kind" : "def"}, {"label" : "||", "tail" : "(other: B)(op: BinOp[OrOp, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.||", "link" : "org\/saddle\/Frame.html#||[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.OrOp,This,B,That]):That", "kind" : "def"}, {"label" : "<>", "tail" : "(other: B)(op: BinOp[NeqOp, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<>", "link" : "org\/saddle\/Frame.html#<>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,This,B,That]):That", "kind" : "def"}, {"label" : "=?", "tail" : "(other: B)(op: BinOp[EqOp, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.=?", "link" : "org\/saddle\/Frame.html#=?[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.EqOp,This,B,That]):That", "kind" : "def"}, {"label" : ">=", "tail" : "(other: B)(op: BinOp[GteOp, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>=", "link" : "org\/saddle\/Frame.html#>=[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.GteOp,This,B,That]):That", "kind" : "def"}, {"label" : ">", "tail" : "(other: B)(op: BinOp[GtOp, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>", "link" : "org\/saddle\/Frame.html#>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.GtOp,This,B,That]):That", "kind" : "def"}, {"label" : "<=", "tail" : "(other: B)(op: BinOp[LteOp, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<=", "link" : "org\/saddle\/Frame.html#<=[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.LteOp,This,B,That]):That", "kind" : "def"}, {"label" : "<", "tail" : "(other: B)(op: BinOp[LtOp, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<", "link" : "org\/saddle\/Frame.html#<[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.LtOp,This,B,That]):That", "kind" : "def"}, {"label" : ">>>", "tail" : "(other: B)(op: BinOp[BitUShr, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>>>", "link" : "org\/saddle\/Frame.html#>>>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitUShr,This,B,That]):That", "kind" : "def"}, {"label" : ">>", "tail" : "(other: B)(op: BinOp[BitShr, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>>", "link" : "org\/saddle\/Frame.html#>>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitShr,This,B,That]):That", "kind" : "def"}, {"label" : "<<", "tail" : "(other: B)(op: BinOp[BitShl, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<<", "link" : "org\/saddle\/Frame.html#<<[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitShl,This,B,That]):That", "kind" : "def"}, {"label" : "^", "tail" : "(other: B)(op: BinOp[BitXor, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.^", "link" : "org\/saddle\/Frame.html#^[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitXor,This,B,That]):That", "kind" : "def"}, {"label" : "|", "tail" : "(other: B)(op: BinOp[BitOr, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.|", "link" : "org\/saddle\/Frame.html#|[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitOr,This,B,That]):That", "kind" : "def"}, {"label" : "&", "tail" : "(other: B)(op: BinOp[BitAnd, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.&", "link" : "org\/saddle\/Frame.html#&[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitAnd,This,B,That]):That", "kind" : "def"}, {"label" : "**", "tail" : "(other: B)(op: BinOp[Power, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.**", "link" : "org\/saddle\/Frame.html#**[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Power,This,B,That]):That", "kind" : "def"}, {"label" : "%", "tail" : "(other: B)(op: BinOp[Mod, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.%", "link" : "org\/saddle\/Frame.html#%[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Mod,This,B,That]):That", "kind" : "def"}, {"label" : "*", "tail" : "(other: B)(op: BinOp[Multiply, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.*", "link" : "org\/saddle\/Frame.html#*[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Multiply,This,B,That]):That", "kind" : "def"}, {"label" : "\/", "tail" : "(other: B)(op: BinOp[Divide, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.\/", "link" : "org\/saddle\/Frame.html#\/[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Divide,This,B,That]):That", "kind" : "def"}, {"label" : "-", "tail" : "(other: B)(op: BinOp[Subtract, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.-", "link" : "org\/saddle\/Frame.html#-[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Subtract,This,B,That]):That", "kind" : "def"}, {"label" : "+", "tail" : "(other: B)(op: BinOp[Add, Frame[RX, CX, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.+", "link" : "org\/saddle\/Frame.html#+[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Add,This,B,That]):That", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/Frame.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/Frame.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/Frame.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/Frame.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/Frame.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/Frame.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/Frame.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Frame.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Frame.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Frame.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/Frame.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/Frame.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/Frame.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/Frame.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/Frame.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/Frame.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "FrFrEOp", "tail" : "", "member" : "org.saddle.ops.BinOpFrame.FrFrEOp", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrFrEOp[OP<:org.saddle.ops.ScalarOp,X,Y,A,B,C]extendsBinOp[OP,org.saddle.Frame[X,Y,A],org.saddle.Frame[X,Y,B],org.saddle.Frame[X,Y,C]]", "kind" : "final class"}, {"label" : "FrScEOp", "tail" : "", "member" : "org.saddle.ops.BinOpFrame.FrScEOp", "link" : "org\/saddle\/ops\/BinOpFrame.html#FrScEOp[OP<:org.saddle.ops.ScalarOp,X,Y,A,B,C]extendsBinOp[OP,org.saddle.Frame[X,Y,A],B,org.saddle.Frame[X,Y,C]]", "kind" : "final class"}, {"label" : "apply", "tail" : "(mat: Mat[T], rowIx: Index[RX], colIx: Index[CX])(arg0: ST[RX], arg1: ORD[RX], arg2: ST[CX], arg3: ORD[CX], arg4: ST[T]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.apply", "link" : "org\/saddle\/Frame$.html#apply[RX,CX,T](mat:org.saddle.Mat[T],rowIx:org.saddle.Index[RX],colIx:org.saddle.Index[CX])(implicitevidence$82:org.saddle.ST[RX],implicitevidence$83:org.saddle.ORD[RX],implicitevidence$84:org.saddle.ST[CX],implicitevidence$85:org.saddle.ORD[CX],implicitevidence$86:org.saddle.ST[T]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Mat[T])(arg0: ST[T]): Frame[Int, Int, T]", "member" : "org.saddle.Frame.apply", "link" : "org\/saddle\/Frame$.html#apply[T](values:org.saddle.Mat[T])(implicitevidence$81:org.saddle.ST[T]):org.saddle.Frame[Int,Int,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: (CX, Series[RX, T])*)(arg0: ST[RX], arg1: ORD[RX], arg2: ST[CX], arg3: ORD[CX], arg4: ST[T]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.apply", "link" : "org\/saddle\/Frame$.html#apply[RX,CX,T](values:(CX,org.saddle.Series[RX,T])*)(implicitevidence$76:org.saddle.ST[RX],implicitevidence$77:org.saddle.ORD[RX],implicitevidence$78:org.saddle.ST[CX],implicitevidence$79:org.saddle.ORD[CX],implicitevidence$80:org.saddle.ST[T]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Seq[Series[RX, T]], colIx: Index[CX])(arg0: ST[RX], arg1: ORD[RX], arg2: ST[CX], arg3: ORD[CX], arg4: ST[T]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.apply", "link" : "org\/saddle\/Frame$.html#apply[RX,CX,T](values:Seq[org.saddle.Series[RX,T]],colIx:org.saddle.Index[CX])(implicitevidence$71:org.saddle.ST[RX],implicitevidence$72:org.saddle.ORD[RX],implicitevidence$73:org.saddle.ST[CX],implicitevidence$74:org.saddle.ORD[CX],implicitevidence$75:org.saddle.ST[T]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Series[RX, T]*)(arg0: ST[RX], arg1: ORD[RX], arg2: ST[T], arg3: ID[T]): Frame[RX, Int, T]", "member" : "org.saddle.Frame.apply", "link" : "org\/saddle\/Frame$.html#apply[RX,T](values:org.saddle.Series[RX,T]*)(implicitevidence$67:org.saddle.ST[RX],implicitevidence$68:org.saddle.ORD[RX],implicitevidence$69:org.saddle.ST[T],implicitevidence$70:org.saddle.Frame.ID[T]):org.saddle.Frame[RX,Int,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: (CX, Vec[T])*)(arg0: ST[CX], arg1: ORD[CX], arg2: ST[T]): Frame[Int, CX, T]", "member" : "org.saddle.Frame.apply", "link" : "org\/saddle\/Frame$.html#apply[CX,T](values:(CX,org.saddle.Vec[T])*)(implicitevidence$64:org.saddle.ST[CX],implicitevidence$65:org.saddle.ORD[CX],implicitevidence$66:org.saddle.ST[T]):org.saddle.Frame[Int,CX,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Seq[Vec[T]], colIx: Index[CX])(arg0: ST[CX], arg1: ORD[CX], arg2: ST[T]): Frame[Int, CX, T]", "member" : "org.saddle.Frame.apply", "link" : "org\/saddle\/Frame$.html#apply[CX,T](values:Seq[org.saddle.Vec[T]],colIx:org.saddle.Index[CX])(implicitevidence$61:org.saddle.ST[CX],implicitevidence$62:org.saddle.ORD[CX],implicitevidence$63:org.saddle.ST[T]):org.saddle.Frame[Int,CX,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Seq[Vec[T]], rowIx: Index[RX], colIx: Index[CX])(arg0: ST[RX], arg1: ORD[RX], arg2: ST[CX], arg3: ORD[CX], arg4: ST[T]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.apply", "link" : "org\/saddle\/Frame$.html#apply[RX,CX,T](values:Seq[org.saddle.Vec[T]],rowIx:org.saddle.Index[RX],colIx:org.saddle.Index[CX])(implicitevidence$56:org.saddle.ST[RX],implicitevidence$57:org.saddle.ORD[RX],implicitevidence$58:org.saddle.ST[CX],implicitevidence$59:org.saddle.ORD[CX],implicitevidence$60:org.saddle.ST[T]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Vec[T]*)(arg0: ST[T]): Frame[Int, Int, T]", "member" : "org.saddle.Frame.apply", "link" : "org\/saddle\/Frame$.html#apply[T](values:org.saddle.Vec[T]*)(implicitevidence$55:org.saddle.ST[T]):org.saddle.Frame[Int,Int,T]", "kind" : "def"}, {"label" : "empty", "tail" : "(arg0: ST[RX], arg1: ORD[RX], arg2: ST[CX], arg3: ORD[CX], arg4: ST[T]): Frame[RX, CX, T]", "member" : "org.saddle.Frame.empty", "link" : "org\/saddle\/Frame$.html#empty[RX,CX,T](implicitevidence$50:org.saddle.ST[RX],implicitevidence$51:org.saddle.ORD[RX],implicitevidence$52:org.saddle.ST[CX],implicitevidence$53:org.saddle.ORD[CX],implicitevidence$54:org.saddle.ST[T]):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "FrFrEOpBBB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Boolean], Vec[Boolean], Vec[Boolean]]): FrFrEOp[Op, X, Y, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpBBB", "link" : "org\/saddle\/Frame$.html#FrFrEOpBBB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Boolean],org.saddle.Vec[Boolean],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Boolean,Boolean,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpIIB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Int], Vec[Int], Vec[Boolean]]): FrFrEOp[Op, X, Y, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpIIB", "link" : "org\/saddle\/Frame$.html#FrFrEOpIIB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Int],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Int,Int,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpILB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Int], Vec[Long], Vec[Boolean]]): FrFrEOp[Op, X, Y, Int, Long, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpILB", "link" : "org\/saddle\/Frame$.html#FrFrEOpILB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Long],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Int,Long,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpIDB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Int], Vec[Double], Vec[Boolean]]): FrFrEOp[Op, X, Y, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpIDB", "link" : "org\/saddle\/Frame$.html#FrFrEOpIDB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Double],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Int,Double,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpLIB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Long], Vec[Int], Vec[Boolean]]): FrFrEOp[Op, X, Y, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpLIB", "link" : "org\/saddle\/Frame$.html#FrFrEOpLIB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Int],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Long,Int,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpLLB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Long], Vec[Long], Vec[Boolean]]): FrFrEOp[Op, X, Y, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpLLB", "link" : "org\/saddle\/Frame$.html#FrFrEOpLLB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Long],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Long,Long,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpLDB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Long], Vec[Double], Vec[Boolean]]): FrFrEOp[Op, X, Y, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpLDB", "link" : "org\/saddle\/Frame$.html#FrFrEOpLDB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Double],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Long,Double,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpDIB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Double], Vec[Int], Vec[Boolean]]): FrFrEOp[Op, X, Y, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpDIB", "link" : "org\/saddle\/Frame$.html#FrFrEOpDIB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Int],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Double,Int,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpDLB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Double], Vec[Long], Vec[Boolean]]): FrFrEOp[Op, X, Y, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpDLB", "link" : "org\/saddle\/Frame$.html#FrFrEOpDLB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Long],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Double,Long,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpDDB", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Double], Vec[Double], Vec[Boolean]]): FrFrEOp[Op, X, Y, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpDDB", "link" : "org\/saddle\/Frame$.html#FrFrEOpDDB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Double],org.saddle.Vec[Boolean]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Double,Double,Boolean]", "kind" : "implicit def"}, {"label" : "FrFrEOpIII", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Int], Vec[Int], Vec[Int]]): FrFrEOp[Op, X, Y, Int, Int, Int]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpIII", "link" : "org\/saddle\/Frame$.html#FrFrEOpIII[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Int],org.saddle.Vec[Int]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "FrFrEOpILL", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Int], Vec[Long], Vec[Long]]): FrFrEOp[Op, X, Y, Int, Long, Long]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpILL", "link" : "org\/saddle\/Frame$.html#FrFrEOpILL[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Long],org.saddle.Vec[Long]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "FrFrEOpIDD", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Int], Vec[Double], Vec[Double]]): FrFrEOp[Op, X, Y, Int, Double, Double]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpIDD", "link" : "org\/saddle\/Frame$.html#FrFrEOpIDD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Double],org.saddle.Vec[Double]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "FrFrEOpLIL", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Long], Vec[Int], Vec[Long]]): FrFrEOp[Op, X, Y, Long, Int, Long]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpLIL", "link" : "org\/saddle\/Frame$.html#FrFrEOpLIL[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Int],org.saddle.Vec[Long]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "FrFrEOpLLL", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Long], Vec[Long], Vec[Long]]): FrFrEOp[Op, X, Y, Long, Long, Long]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpLLL", "link" : "org\/saddle\/Frame$.html#FrFrEOpLLL[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Long],org.saddle.Vec[Long]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "FrFrEOpLDD", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Long], Vec[Double], Vec[Double]]): FrFrEOp[Op, X, Y, Long, Double, Double]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpLDD", "link" : "org\/saddle\/Frame$.html#FrFrEOpLDD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Double],org.saddle.Vec[Double]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "FrFrEOpDLD", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Double], Vec[Long], Vec[Double]]): FrFrEOp[Op, X, Y, Double, Long, Double]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpDLD", "link" : "org\/saddle\/Frame$.html#FrFrEOpDLD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Long],org.saddle.Vec[Double]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "FrFrEOpDID", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Double], Vec[Int], Vec[Double]]): FrFrEOp[Op, X, Y, Double, Int, Double]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpDID", "link" : "org\/saddle\/Frame$.html#FrFrEOpDID[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Int],org.saddle.Vec[Double]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "FrFrEOpDDD", "tail" : "(cm: ST[X], cmp: ORD[X], my: ST[Y], cmpY: ORD[Y], opv: BinOp[Op, Vec[Double], Vec[Double], Vec[Double]]): FrFrEOp[Op, X, Y, Double, Double, Double]", "member" : "org.saddle.ops.BinOpFrame.FrFrEOpDDD", "link" : "org\/saddle\/Frame$.html#FrFrEOpDDD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitmy:org.saddle.ST[Y],implicitcmpY:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Double],org.saddle.Vec[Double]]):BinOpFrame.this.FrFrEOp[Op,X,Y,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "FrScEOpBBB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Boolean], Boolean, Vec[Boolean]]): FrScEOp[Op, X, Y, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpBBB", "link" : "org\/saddle\/Frame$.html#FrScEOpBBB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Boolean],Boolean,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Boolean,Boolean,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpIIB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Int], Int, Vec[Boolean]]): FrScEOp[Op, X, Y, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpIIB", "link" : "org\/saddle\/Frame$.html#FrScEOpIIB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Int,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Int,Int,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpILB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Int], Long, Vec[Boolean]]): FrScEOp[Op, X, Y, Int, Long, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpILB", "link" : "org\/saddle\/Frame$.html#FrScEOpILB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Long,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Int,Long,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpIDB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Int], Double, Vec[Boolean]]): FrScEOp[Op, X, Y, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpIDB", "link" : "org\/saddle\/Frame$.html#FrScEOpIDB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Double,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Int,Double,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpLIB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Long], Int, Vec[Boolean]]): FrScEOp[Op, X, Y, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpLIB", "link" : "org\/saddle\/Frame$.html#FrScEOpLIB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Int,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Long,Int,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpLLB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Long], Long, Vec[Boolean]]): FrScEOp[Op, X, Y, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpLLB", "link" : "org\/saddle\/Frame$.html#FrScEOpLLB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Long,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Long,Long,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpLDB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Long], Double, Vec[Boolean]]): FrScEOp[Op, X, Y, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpLDB", "link" : "org\/saddle\/Frame$.html#FrScEOpLDB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Double,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Long,Double,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpDIB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Double], Int, Vec[Boolean]]): FrScEOp[Op, X, Y, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpDIB", "link" : "org\/saddle\/Frame$.html#FrScEOpDIB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Int,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Double,Int,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpDLB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Double], Long, Vec[Boolean]]): FrScEOp[Op, X, Y, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpDLB", "link" : "org\/saddle\/Frame$.html#FrScEOpDLB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Long,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Double,Long,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpDDB", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Double], Double, Vec[Boolean]]): FrScEOp[Op, X, Y, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpDDB", "link" : "org\/saddle\/Frame$.html#FrScEOpDDB[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Double,org.saddle.Vec[Boolean]]):BinOpFrame.this.FrScEOp[Op,X,Y,Double,Double,Boolean]", "kind" : "implicit def"}, {"label" : "FrScEOpIII", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Int], Int, Vec[Int]]): FrScEOp[Op, X, Y, Int, Int, Int]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpIII", "link" : "org\/saddle\/Frame$.html#FrScEOpIII[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Int,org.saddle.Vec[Int]]):BinOpFrame.this.FrScEOp[Op,X,Y,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "FrScEOpILL", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Int], Long, Vec[Long]]): FrScEOp[Op, X, Y, Int, Long, Long]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpILL", "link" : "org\/saddle\/Frame$.html#FrScEOpILL[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Long,org.saddle.Vec[Long]]):BinOpFrame.this.FrScEOp[Op,X,Y,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "FrScEOpIDD", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Int], Double, Vec[Double]]): FrScEOp[Op, X, Y, Int, Double, Double]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpIDD", "link" : "org\/saddle\/Frame$.html#FrScEOpIDD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Double,org.saddle.Vec[Double]]):BinOpFrame.this.FrScEOp[Op,X,Y,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "FrScEOpLIL", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Long], Int, Vec[Long]]): FrScEOp[Op, X, Y, Long, Int, Long]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpLIL", "link" : "org\/saddle\/Frame$.html#FrScEOpLIL[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Int,org.saddle.Vec[Long]]):BinOpFrame.this.FrScEOp[Op,X,Y,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "FrScEOpLLL", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Long], Long, Vec[Long]]): FrScEOp[Op, X, Y, Long, Long, Long]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpLLL", "link" : "org\/saddle\/Frame$.html#FrScEOpLLL[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Long,org.saddle.Vec[Long]]):BinOpFrame.this.FrScEOp[Op,X,Y,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "FrScEOpLDD", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Long], Double, Vec[Double]]): FrScEOp[Op, X, Y, Long, Double, Double]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpLDD", "link" : "org\/saddle\/Frame$.html#FrScEOpLDD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Double,org.saddle.Vec[Double]]):BinOpFrame.this.FrScEOp[Op,X,Y,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "FrScEOpDID", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Double], Int, Vec[Double]]): FrScEOp[Op, X, Y, Double, Int, Double]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpDID", "link" : "org\/saddle\/Frame$.html#FrScEOpDID[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Int,org.saddle.Vec[Double]]):BinOpFrame.this.FrScEOp[Op,X,Y,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "FrScEOpDLD", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Double], Long, Vec[Double]]): FrScEOp[Op, X, Y, Double, Long, Double]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpDLD", "link" : "org\/saddle\/Frame$.html#FrScEOpDLD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Long,org.saddle.Vec[Double]]):BinOpFrame.this.FrScEOp[Op,X,Y,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "FrScEOpDDD", "tail" : "(cm: ST[X], cmp: ORD[X], cmy: ST[Y], cmpy: ORD[Y], opv: BinOp[Op, Vec[Double], Double, Vec[Double]]): FrScEOp[Op, X, Y, Double, Double, Double]", "member" : "org.saddle.ops.BinOpFrame.FrScEOpDDD", "link" : "org\/saddle\/Frame$.html#FrScEOpDDD[Op<:org.saddle.ops.ScalarOp,X,Y](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitcmy:org.saddle.ST[Y],implicitcmpy:org.saddle.ORD[Y],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Double,org.saddle.Vec[Double]]):BinOpFrame.this.FrScEOp[Op,X,Y,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/Frame$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/Frame$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/Frame$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/Frame$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/Frame$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/Frame$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/Frame$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Frame$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Frame$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Frame$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/Frame$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/Frame$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/Frame$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/Frame$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/Frame$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/Frame$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/Frame$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/Frame$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/Frame$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/Frame.html", "kind" : "class"}, {"name" : "org.saddle.Index", "members_trait" : [{"label" : "toString", "tail" : "(): String", "member" : "org.saddle.Index.toString", "link" : "org\/saddle\/Index.html#toString():String", "kind" : "def"}, {"label" : "print", "tail" : "(len: Int, stream: OutputStream): Unit", "member" : "org.saddle.Index.print", "link" : "org\/saddle\/Index.html#print(len:Int,stream:java.io.OutputStream):Unit", "kind" : "def"}, {"label" : "stringify", "tail" : "(len: Int): String", "member" : "org.saddle.Index.stringify", "link" : "org\/saddle\/Index.html#stringify(len:Int):String", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.Index.equals", "link" : "org\/saddle\/Index.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.Index.hashCode", "link" : "org\/saddle\/Index.html#hashCode():Int", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): IndexedSeq[T]", "member" : "org.saddle.Index.toSeq", "link" : "org\/saddle\/Index.html#toSeq:IndexedSeq[T]", "kind" : "def"}, {"label" : "next", "tail" : "(current: Scalar[T]): Scalar[T]", "member" : "org.saddle.Index.next", "link" : "org\/saddle\/Index.html#next(current:org.saddle.scalar.Scalar[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "prev", "tail" : "(current: Scalar[T]): Scalar[T]", "member" : "org.saddle.Index.prev", "link" : "org\/saddle\/Index.html#prev(current:org.saddle.scalar.Scalar[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: T): Boolean", "member" : "org.saddle.Index.contains", "link" : "org\/saddle\/Index.html#contains(key:T):Boolean", "kind" : "def"}, {"label" : "getIndexer", "tail" : "(other: Index[T]): Option[Array[Int]]", "member" : "org.saddle.Index.getIndexer", "link" : "org\/saddle\/Index.html#getIndexer(other:org.saddle.Index[T]):Option[Array[Int]]", "kind" : "def"}, {"label" : "split", "tail" : "(ev: Splitter[T, O1, O2]): (Index[O1], Index[O2])", "member" : "org.saddle.Index.split", "link" : "org\/saddle\/Index.html#split[O1,O2](implicitev:org.saddle.index.Splitter[T,O1,O2]):(org.saddle.Index[O1],org.saddle.Index[O2])", "kind" : "def"}, {"label" : "stack", "tail" : "(other: Index[U])(ev: Stacker[T, U, V]): Index[V]", "member" : "org.saddle.Index.stack", "link" : "org\/saddle\/Index.html#stack[U,V](other:org.saddle.Index[U])(implicitev:org.saddle.index.Stacker[T,U,V]):org.saddle.Index[V]", "kind" : "def"}, {"label" : "dropLevel", "tail" : "(ev: Splitter[T, U, _]): Index[U]", "member" : "org.saddle.Index.dropLevel", "link" : "org\/saddle\/Index.html#dropLevel[U,_](implicitev:org.saddle.index.Splitter[T,U,_]):org.saddle.Index[U]", "kind" : "def"}, {"label" : "exists", "tail" : "(pred: (T) ⇒ Boolean): Boolean", "member" : "org.saddle.Index.exists", "link" : "org\/saddle\/Index.html#exists(pred:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "findOne", "tail" : "(pred: (T) ⇒ Boolean): Int", "member" : "org.saddle.Index.findOne", "link" : "org\/saddle\/Index.html#findOne(pred:T=>Boolean):Int", "kind" : "def"}, {"label" : "sorted", "tail" : "(): Index[T]", "member" : "org.saddle.Index.sorted", "link" : "org\/saddle\/Index.html#sorted:org.saddle.Index[T]", "kind" : "def"}, {"label" : "last", "tail" : "(): Scalar[T]", "member" : "org.saddle.Index.last", "link" : "org\/saddle\/Index.html#last:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "first", "tail" : "(): Scalar[T]", "member" : "org.saddle.Index.first", "link" : "org\/saddle\/Index.html#first:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "tail", "tail" : "(n: Int): Index[T]", "member" : "org.saddle.Index.tail", "link" : "org\/saddle\/Index.html#tail(n:Int):org.saddle.Index[T]", "kind" : "def"}, {"label" : "head", "tail" : "(n: Int): Index[T]", "member" : "org.saddle.Index.head", "link" : "org\/saddle\/Index.html#head(n:Int):org.saddle.Index[T]", "kind" : "def"}, {"label" : "get", "tail" : "(key: T): Array[Int]", "member" : "org.saddle.Index.get", "link" : "org\/saddle\/Index.html#get(key:T):Array[Int]", "kind" : "def"}, {"label" : "getLast", "tail" : "(key: T): Int", "member" : "org.saddle.Index.getLast", "link" : "org\/saddle\/Index.html#getLast(key:T):Int", "kind" : "def"}, {"label" : "getFirst", "tail" : "(key: T): Int", "member" : "org.saddle.Index.getFirst", "link" : "org\/saddle\/Index.html#getFirst(key:T):Int", "kind" : "def"}, {"label" : "count", "tail" : "(key: T): Int", "member" : "org.saddle.Index.count", "link" : "org\/saddle\/Index.html#count(key:T):Int", "kind" : "def"}, {"label" : "counts", "tail" : "(): Array[Int]", "member" : "org.saddle.Index.counts", "link" : "org\/saddle\/Index.html#counts:Array[Int]", "kind" : "def"}, {"label" : "uniques", "tail" : "(ord: ORD[T], tag: ST[T]): Index[T]", "member" : "org.saddle.Index.uniques", "link" : "org\/saddle\/Index.html#uniques(implicitord:org.saddle.ORD[T],implicittag:org.saddle.ST[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "isUnique", "tail" : "(): Boolean", "member" : "org.saddle.Index.isUnique", "link" : "org\/saddle\/Index.html#isUnique:Boolean", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(rng: Slice[T]): Index[T]", "member" : "org.saddle.Index.sliceBy", "link" : "org\/saddle\/Index.html#sliceBy(rng:org.saddle.index.Slice[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(from: T, to: T, inclusive: Boolean): Index[T]", "member" : "org.saddle.Index.sliceBy", "link" : "org\/saddle\/Index.html#sliceBy(from:T,to:T,inclusive:Boolean):org.saddle.Index[T]", "kind" : "def"}, {"label" : "distinct", "tail" : "(st: ST[T], ord: ORD[T]): Index[T]", "member" : "org.saddle.Index.distinct", "link" : "org\/saddle\/Index.html#distinct(implicitst:org.saddle.ST[T],implicitord:org.saddle.ORD[T]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: Array[T]): Array[Int]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/Index.html#apply(keys:Array[T]):Array[Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: T*): Array[Int]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/Index.html#apply(keys:T*):Array[Int]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Int*): Index[T]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/Index.html#at(locs:Int*):org.saddle.Index[T]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Array[Int]): Index[T]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/Index.html#at(locs:Array[Int]):org.saddle.Index[T]", "kind" : "def"}, {"label" : "at", "tail" : "(loc: Int): Scalar[T]", "member" : "org.saddle.Index.at", "link" : "org\/saddle\/Index.html#at(loc:Int):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Index.nonEmpty", "link" : "org\/saddle\/Index.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Index.isEmpty", "link" : "org\/saddle\/Index.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/Index.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/Index.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/Index.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/Index.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/Index.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/Index.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/Index.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Index.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Index.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Index.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/Index.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/Index.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/Index.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/Index.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/Index.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/Index.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (T) ⇒ B)(arg0: ST[B], arg1: ORD[B]): Index[B]", "member" : "org.saddle.Index.map", "link" : "org\/saddle\/Index.html#map[B](f:T=>B)(implicitevidence$1:org.saddle.ST[B],implicitevidence$2:org.saddle.ORD[B]):org.saddle.Index[B]", "kind" : "abstract def"}, {"label" : "join", "tail" : "(other: Index[T], how: JoinType): ReIndexer[T]", "member" : "org.saddle.Index.join", "link" : "org\/saddle\/Index.html#join(other:org.saddle.Index[T],how:org.saddle.index.JoinType):org.saddle.index.ReIndexer[T]", "kind" : "abstract def"}, {"label" : "argSort", "tail" : "(): Array[Int]", "member" : "org.saddle.Index.argSort", "link" : "org\/saddle\/Index.html#argSort:Array[Int]", "kind" : "abstract def"}, {"label" : "isContiguous", "tail" : "(): Boolean", "member" : "org.saddle.Index.isContiguous", "link" : "org\/saddle\/Index.html#isContiguous:Boolean", "kind" : "abstract def"}, {"label" : "isMonotonic", "tail" : "(): Boolean", "member" : "org.saddle.Index.isMonotonic", "link" : "org\/saddle\/Index.html#isMonotonic:Boolean", "kind" : "abstract def"}, {"label" : "union", "tail" : "(other: Index[T]): ReIndexer[T]", "member" : "org.saddle.Index.union", "link" : "org\/saddle\/Index.html#union(other:org.saddle.Index[T]):org.saddle.index.ReIndexer[T]", "kind" : "abstract def"}, {"label" : "intersect", "tail" : "(other: Index[T]): ReIndexer[T]", "member" : "org.saddle.Index.intersect", "link" : "org\/saddle\/Index.html#intersect(other:org.saddle.Index[T]):org.saddle.index.ReIndexer[T]", "kind" : "abstract def"}, {"label" : "reversed", "tail" : "(): Index[T]", "member" : "org.saddle.Index.reversed", "link" : "org\/saddle\/Index.html#reversed:org.saddle.Index[T]", "kind" : "abstract def"}, {"label" : "slice", "tail" : "(from: Int, until: Int, stride: Int): Index[T]", "member" : "org.saddle.Index.slice", "link" : "org\/saddle\/Index.html#slice(from:Int,until:Int,stride:Int):org.saddle.Index[T]", "kind" : "abstract def"}, {"label" : "rsearch", "tail" : "(t: T): Int", "member" : "org.saddle.Index.rsearch", "link" : "org\/saddle\/Index.html#rsearch(t:T):Int", "kind" : "abstract def"}, {"label" : "lsearch", "tail" : "(t: T): Int", "member" : "org.saddle.Index.lsearch", "link" : "org\/saddle\/Index.html#lsearch(t:T):Int", "kind" : "abstract def"}, {"label" : "concat", "tail" : "(other: Index[T]): Index[T]", "member" : "org.saddle.Index.concat", "link" : "org\/saddle\/Index.html#concat(other:org.saddle.Index[T]):org.saddle.Index[T]", "kind" : "abstract def"}, {"label" : "without", "tail" : "(locs: Array[Int]): Index[T]", "member" : "org.saddle.Index.without", "link" : "org\/saddle\/Index.html#without(locs:Array[Int]):org.saddle.Index[T]", "kind" : "abstract def"}, {"label" : "take", "tail" : "(locs: Array[Int]): Index[T]", "member" : "org.saddle.Index.take", "link" : "org\/saddle\/Index.html#take(locs:Array[Int]):org.saddle.Index[T]", "kind" : "abstract def"}, {"label" : "raw", "tail" : "(loc: Int): T", "member" : "org.saddle.Index.raw", "link" : "org\/saddle\/Index.html#raw(loc:Int):T", "kind" : "abstract def"}, {"label" : "toVec", "tail" : "(): Vec[T]", "member" : "org.saddle.Index.toVec", "link" : "org\/saddle\/Index.html#toVec:org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "scalarTag", "tail" : "(): ScalarTag[T]", "member" : "org.saddle.Index.scalarTag", "link" : "org\/saddle\/Index.html#scalarTag:org.saddle.scalar.ScalarTag[T]", "kind" : "abstract def"}, {"label" : "length", "tail" : "(): Int", "member" : "org.saddle.Index.length", "link" : "org\/saddle\/Index.html#length:Int", "kind" : "abstract def"}, {"label" : "locator", "tail" : "(): Locator[T]", "member" : "org.saddle.Index.locator", "link" : "org\/saddle\/Index.html#locator:org.saddle.locator.Locator[T]", "kind" : "abstract def"}], "shortDescription" : "Index provides a constant-time look-up of a value within array-backed storage,as well as operations to support joining and slicing.", "object" : "org\/saddle\/Index$.html", "members_object" : [{"label" : "IndexException", "tail" : "", "member" : "org.saddle.Index.IndexException", "link" : "org\/saddle\/Index$.html#IndexExceptionextendsRuntimeExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "empty", "tail" : "(arg0: ST[C], arg1: ORD[C]): Index[C]", "member" : "org.saddle.Index.empty", "link" : "org\/saddle\/Index$.html#empty[C](implicitevidence$9:org.saddle.ST[C],implicitevidence$10:org.saddle.ORD[C]):org.saddle.Index[C]", "kind" : "def"}, {"label" : "make", "tail" : "(values: I)(ev: IndexMaker[I, O]): Index[O]", "member" : "org.saddle.Index.make", "link" : "org\/saddle\/Index$.html#make[I,O](values:I)(implicitev:org.saddle.index.IndexMaker[I,O]):org.saddle.Index[O]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: C*)(arg0: ST[C], arg1: ORD[C]): Index[C]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/Index$.html#apply[C](values:C*)(implicitevidence$7:org.saddle.ST[C],implicitevidence$8:org.saddle.ORD[C]):org.saddle.Index[C]", "kind" : "def"}, {"label" : "apply", "tail" : "(arr: Array[C])(arg0: ST[C], arg1: ORD[C]): Index[C]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/Index$.html#apply[C](arr:Array[C])(implicitevidence$5:org.saddle.ST[C],implicitevidence$6:org.saddle.ORD[C]):org.saddle.Index[C]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Vec[C])(arg0: ST[C], arg1: ORD[C]): Index[C]", "member" : "org.saddle.Index.apply", "link" : "org\/saddle\/Index$.html#apply[C](values:org.saddle.Vec[C])(implicitevidence$3:org.saddle.ST[C],implicitevidence$4:org.saddle.ORD[C]):org.saddle.Index[C]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/Index$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/Index$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/Index$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/Index$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/Index$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/Index$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/Index$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Index$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Index$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Index$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/Index$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/Index$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/Index$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/Index$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/Index$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/Index$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/Index$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/Index$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/Index$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/saddle\/Index.html", "kind" : "trait"}, {"name" : "org.saddle.Mat", "shortDescription" : "Mat is an immutable container for 2D homogeneous data (a \"matrix\").", "object" : "org\/saddle\/Mat$.html", "members_class" : [{"label" : "mutateCols", "tail" : "(f: (Vec[T], Int) ⇒ Vec[T])(arg0: ST[B]): Unit", "member" : "org.saddle.Mat.mutateCols", "link" : "org\/saddle\/Mat.html#mutateCols[B](f:(org.saddle.Vec[T],Int)=>org.saddle.Vec[T])(implicitevidence$5:org.saddle.ST[B]):Unit", "kind" : "def"}, {"label" : "mapCols", "tail" : "(f: (Vec[T], Int) ⇒ Vec[B])(arg0: ST[B]): Mat[B]", "member" : "org.saddle.Mat.mapCols", "link" : "org\/saddle\/Mat.html#mapCols[B](f:(org.saddle.Vec[T],Int)=>org.saddle.Vec[B])(implicitevidence$4:org.saddle.ST[B]):org.saddle.Mat[B]", "kind" : "def"}, {"label" : "mutateRows", "tail" : "(f: (Vec[T], Int) ⇒ Vec[T])(arg0: ST[B]): Unit", "member" : "org.saddle.Mat.mutateRows", "link" : "org\/saddle\/Mat.html#mutateRows[B](f:(org.saddle.Vec[T],Int)=>org.saddle.Vec[T])(implicitevidence$3:org.saddle.ST[B]):Unit", "kind" : "def"}, {"label" : "mapRows", "tail" : "(f: (Vec[T], Int) ⇒ Vec[B])(arg0: ST[B]): Mat[B]", "member" : "org.saddle.Mat.mapRows", "link" : "org\/saddle\/Mat.html#mapRows[B](f:(org.saddle.Vec[T],Int)=>org.saddle.Vec[B])(implicitevidence$2:org.saddle.ST[B]):org.saddle.Mat[B]", "kind" : "def"}, {"label" : "mutateSetUpperTriangle", "tail" : "(v: T): Unit", "member" : "org.saddle.Mat.mutateSetUpperTriangle", "link" : "org\/saddle\/Mat.html#mutateSetUpperTriangle(v:T):Unit", "kind" : "def"}, {"label" : "mutateSetLowerTriangle", "tail" : "(v: T): Unit", "member" : "org.saddle.Mat.mutateSetLowerTriangle", "link" : "org\/saddle\/Mat.html#mutateSetLowerTriangle(v:T):Unit", "kind" : "def"}, {"label" : "mutateSetDiagonal", "tail" : "(v: T): Unit", "member" : "org.saddle.Mat.mutateSetDiagonal", "link" : "org\/saddle\/Mat.html#mutateSetDiagonal(v:T):Unit", "kind" : "def"}, {"label" : "mutateSetColumn", "tail" : "(c: Int, v: T): Unit", "member" : "org.saddle.Mat.mutateSetColumn", "link" : "org\/saddle\/Mat.html#mutateSetColumn(c:Int,v:T):Unit", "kind" : "def"}, {"label" : "mutateSetRow", "tail" : "(r: Int, v: T): Unit", "member" : "org.saddle.Mat.mutateSetRow", "link" : "org\/saddle\/Mat.html#mutateSetRow(r:Int,v:T):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(r: Int, c: Int, v: T): Unit", "member" : "org.saddle.Mat.update", "link" : "org\/saddle\/Mat.html#update(r:Int,c:Int,v:T):Unit", "kind" : "def"}, {"label" : "mutateSetCell", "tail" : "(r: Int, c: Int, v: T): Unit", "member" : "org.saddle.Mat.mutateSetCell", "link" : "org\/saddle\/Mat.html#mutateSetCell(r:Int,c:Int,v:T):Unit", "kind" : "def"}, {"label" : "toFrame", "tail" : "(): Frame[Int, Int, T]", "member" : "org.saddle.Mat.toFrame", "link" : "org\/saddle\/Mat.html#toFrame:org.saddle.Frame[Int,Int,T]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.Mat.hashCode", "link" : "org\/saddle\/Mat.html#hashCode():Int", "kind" : "def"}, {"label" : "print", "tail" : "(nrows: Int, ncols: Int, stream: OutputStream): Unit", "member" : "org.saddle.Mat.print", "link" : "org\/saddle\/Mat.html#print(nrows:Int,ncols:Int,stream:java.io.OutputStream):Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.Mat.toString", "link" : "org\/saddle\/Mat.html#toString():String", "kind" : "def"}, {"label" : "stringify", "tail" : "(nrows: Int, ncols: Int): String", "member" : "org.saddle.Mat.stringify", "link" : "org\/saddle\/Mat.html#stringify(nrows:Int,ncols:Int):String", "kind" : "def"}, {"label" : "roundTo", "tail" : "(sig: Int)(ev: NUM[T]): Mat[Double]", "member" : "org.saddle.Mat.roundTo", "link" : "org\/saddle\/Mat.html#roundTo(sig:Int)(implicitev:org.saddle.NUM[T]):org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "rows", "tail" : "(seq: IndexedSeq[Int]): IndexedSeq[Vec[T]]", "member" : "org.saddle.Mat.rows", "link" : "org\/saddle\/Mat.html#rows(seq:IndexedSeq[Int]):IndexedSeq[org.saddle.Vec[T]]", "kind" : "def"}, {"label" : "rows", "tail" : "(): IndexedSeq[Vec[T]]", "member" : "org.saddle.Mat.rows", "link" : "org\/saddle\/Mat.html#rows():IndexedSeq[org.saddle.Vec[T]]", "kind" : "def"}, {"label" : "row", "tail" : "(slice: Slice[Int]): Mat[T]", "member" : "org.saddle.Mat.row", "link" : "org\/saddle\/Mat.html#row(slice:org.saddle.index.Slice[Int]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "row", "tail" : "(locs: Array[Int]): Mat[T]", "member" : "org.saddle.Mat.row", "link" : "org\/saddle\/Mat.html#row(locs:Array[Int]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "row", "tail" : "(locs: Int*): Mat[T]", "member" : "org.saddle.Mat.row", "link" : "org\/saddle\/Mat.html#row(locs:Int*):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "row", "tail" : "(r: Int): Vec[T]", "member" : "org.saddle.Mat.row", "link" : "org\/saddle\/Mat.html#row(r:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "cols", "tail" : "(seq: IndexedSeq[Int]): IndexedSeq[Vec[T]]", "member" : "org.saddle.Mat.cols", "link" : "org\/saddle\/Mat.html#cols(seq:IndexedSeq[Int]):IndexedSeq[org.saddle.Vec[T]]", "kind" : "def"}, {"label" : "cols", "tail" : "(): IndexedSeq[Vec[T]]", "member" : "org.saddle.Mat.cols", "link" : "org\/saddle\/Mat.html#cols():IndexedSeq[org.saddle.Vec[T]]", "kind" : "def"}, {"label" : "col", "tail" : "(slice: Slice[Int]): Mat[T]", "member" : "org.saddle.Mat.col", "link" : "org\/saddle\/Mat.html#col(slice:org.saddle.index.Slice[Int]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "col", "tail" : "(locs: Array[Int]): Mat[T]", "member" : "org.saddle.Mat.col", "link" : "org\/saddle\/Mat.html#col(locs:Array[Int]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "col", "tail" : "(locs: Int*): Mat[T]", "member" : "org.saddle.Mat.col", "link" : "org\/saddle\/Mat.html#col(locs:Int*):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "col", "tail" : "(c: Int): Vec[T]", "member" : "org.saddle.Mat.col", "link" : "org\/saddle\/Mat.html#col(c:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "dropColsWithNA", "tail" : "(): Mat[T]", "member" : "org.saddle.Mat.dropColsWithNA", "link" : "org\/saddle\/Mat.html#dropColsWithNA:org.saddle.Mat[T]", "kind" : "def"}, {"label" : "dropRowsWithNA", "tail" : "(): Mat[T]", "member" : "org.saddle.Mat.dropRowsWithNA", "link" : "org\/saddle\/Mat.html#dropRowsWithNA:org.saddle.Mat[T]", "kind" : "def"}, {"label" : "colsWithNA", "tail" : "(): Set[Int]", "member" : "org.saddle.Mat.colsWithNA", "link" : "org\/saddle\/Mat.html#colsWithNA:Set[Int]", "kind" : "def"}, {"label" : "rowsWithNA", "tail" : "(): Set[Int]", "member" : "org.saddle.Mat.rowsWithNA", "link" : "org\/saddle\/Mat.html#rowsWithNA:Set[Int]", "kind" : "def"}, {"label" : "withoutCols", "tail" : "(locs: Int*): Mat[T]", "member" : "org.saddle.Mat.withoutCols", "link" : "org\/saddle\/Mat.html#withoutCols(locs:Int*):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "withoutCols", "tail" : "(locs: Array[Int]): Mat[T]", "member" : "org.saddle.Mat.withoutCols", "link" : "org\/saddle\/Mat.html#withoutCols(locs:Array[Int]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "withoutRows", "tail" : "(locs: Int*): Mat[T]", "member" : "org.saddle.Mat.withoutRows", "link" : "org\/saddle\/Mat.html#withoutRows(locs:Int*):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "takeCols", "tail" : "(locs: Int*): Mat[T]", "member" : "org.saddle.Mat.takeCols", "link" : "org\/saddle\/Mat.html#takeCols(locs:Int*):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "takeCols", "tail" : "(locs: Array[Int]): Mat[T]", "member" : "org.saddle.Mat.takeCols", "link" : "org\/saddle\/Mat.html#takeCols(locs:Array[Int]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "takeRows", "tail" : "(locs: Int*): Mat[T]", "member" : "org.saddle.Mat.takeRows", "link" : "org\/saddle\/Mat.html#takeRows(locs:Int*):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "at", "tail" : "(r: Slice[Int], c: Slice[Int]): Mat[T]", "member" : "org.saddle.Mat.at", "link" : "org\/saddle\/Mat.html#at(r:org.saddle.index.Slice[Int],c:org.saddle.index.Slice[Int]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "at", "tail" : "(r: Int, c: Array[Int]): Vec[T]", "member" : "org.saddle.Mat.at", "link" : "org\/saddle\/Mat.html#at(r:Int,c:Array[Int]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "at", "tail" : "(r: Array[Int], c: Int): Vec[T]", "member" : "org.saddle.Mat.at", "link" : "org\/saddle\/Mat.html#at(r:Array[Int],c:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "at", "tail" : "(r: Array[Int], c: Array[Int]): Mat[T]", "member" : "org.saddle.Mat.at", "link" : "org\/saddle\/Mat.html#at(r:Array[Int],c:Array[Int]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "at", "tail" : "(r: Int, c: Int): Scalar[T]", "member" : "org.saddle.Mat.at", "link" : "org\/saddle\/Mat.html#at(r:Int,c:Int):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "at", "tail" : "(i: Int): Scalar[T]", "member" : "org.saddle.Mat.at", "link" : "org\/saddle\/Mat.html#at(i:Int):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Mat.isEmpty", "link" : "org\/saddle\/Mat.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "isSquare", "tail" : "(): Boolean", "member" : "org.saddle.Mat.isSquare", "link" : "org\/saddle\/Mat.html#isSquare:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "org.saddle.Mat.length", "link" : "org\/saddle\/Mat.html#length:Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.Mat.equals", "link" : "org\/saddle\/Mat.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "reshape", "tail" : "(r: Int, c: Int): Mat[T]", "member" : "org.saddle.Mat.reshape", "link" : "org\/saddle\/Mat.html#reshape(r:Int,c:Int):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "withoutRows", "tail" : "(locs: Array[Int]): Mat[T]", "member" : "org.saddle.Mat.withoutRows", "link" : "org\/saddle\/Mat.html#withoutRows(locs:Array[Int]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "takeRows", "tail" : "(locs: Vec[Int]): Mat[T]", "member" : "org.saddle.Mat.takeRows", "link" : "org\/saddle\/Mat.html#takeRows(locs:org.saddle.Vec[Int]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "takeRows", "tail" : "(locs: Array[Int]): Mat[T]", "member" : "org.saddle.Mat.takeRows", "link" : "org\/saddle\/Mat.html#takeRows(locs:Array[Int]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "T", "tail" : "(): Mat[T]", "member" : "org.saddle.Mat.T", "link" : "org\/saddle\/Mat.html#T:org.saddle.Mat[T]", "kind" : "def"}, {"label" : "transpose", "tail" : "(): Mat[T]", "member" : "org.saddle.Mat.transpose", "link" : "org\/saddle\/Mat.html#transpose:org.saddle.Mat[T]", "kind" : "def"}, {"label" : "cachedT", "tail" : ": Mat[T]", "member" : "org.saddle.Mat.cachedT", "link" : "org\/saddle\/Mat.html#cachedT:org.saddle.Mat[T]", "kind" : "lazy val"}, {"label" : "map", "tail" : "(f: (T) ⇒ B)(arg0: ST[B]): Mat[B]", "member" : "org.saddle.Mat.map", "link" : "org\/saddle\/Mat.html#map[B](f:T=>B)(implicitevidence$1:org.saddle.ST[B]):org.saddle.Mat[B]", "kind" : "def"}, {"label" : "copy", "tail" : "(): Mat[T]", "member" : "org.saddle.Mat.copy", "link" : "org\/saddle\/Mat.html#copy:org.saddle.Mat[T]", "kind" : "def"}, {"label" : "contents", "tail" : "(): Array[T]", "member" : "org.saddle.Mat.contents", "link" : "org\/saddle\/Mat.html#contents:Array[T]", "kind" : "def"}, {"label" : "toVec", "tail" : "(): Vec[T]", "member" : "org.saddle.Mat.toVec", "link" : "org\/saddle\/Mat.html#toVec:org.saddle.Vec[T]", "kind" : "def"}, {"label" : "raw", "tail" : "(r: Int, c: Int): T", "member" : "org.saddle.Mat.raw", "link" : "org\/saddle\/Mat.html#raw(r:Int,c:Int):T", "kind" : "def"}, {"label" : "raw", "tail" : "(i: Int): T", "member" : "org.saddle.Mat.raw", "link" : "org\/saddle\/Mat.html#raw(i:Int):T", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[T]", "member" : "org.saddle.Mat.toArray", "link" : "org\/saddle\/Mat.html#toArray:Array[T]", "kind" : "def"}, {"label" : "numCols", "tail" : "(): Int", "member" : "org.saddle.Mat.numCols", "link" : "org\/saddle\/Mat.html#numCols:Int", "kind" : "def"}, {"label" : "numRows", "tail" : "(): Int", "member" : "org.saddle.Mat.numRows", "link" : "org\/saddle\/Mat.html#numRows:Int", "kind" : "def"}, {"member" : "org.saddle.Mat#<init>", "error" : "unsupported entity"}, {"label" : "scalarTag", "tail" : ": ScalarTag[T]", "member" : "org.saddle.Mat.scalarTag", "link" : "org\/saddle\/Mat.html#scalarTag:org.saddle.scalar.ScalarTag[T]", "kind" : "val"}, {"label" : "**=", "tail" : "(other: B)(op: BinOpInPlace[Power, Mat[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.**=", "link" : "org\/saddle\/Mat.html#**=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Power,This,B]):Unit", "kind" : "def"}, {"label" : "%=", "tail" : "(other: B)(op: BinOpInPlace[Mod, Mat[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.%=", "link" : "org\/saddle\/Mat.html#%=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Mod,This,B]):Unit", "kind" : "def"}, {"label" : "\/=", "tail" : "(other: B)(op: BinOpInPlace[Divide, Mat[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.\/=", "link" : "org\/saddle\/Mat.html#\/=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Divide,This,B]):Unit", "kind" : "def"}, {"label" : "*=", "tail" : "(other: B)(op: BinOpInPlace[Multiply, Mat[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.*=", "link" : "org\/saddle\/Mat.html#*=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Multiply,This,B]):Unit", "kind" : "def"}, {"label" : "-=", "tail" : "(other: B)(op: BinOpInPlace[Subtract, Mat[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.-=", "link" : "org\/saddle\/Mat.html#-=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Subtract,This,B]):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(other: B)(op: BinOpInPlace[Add, Mat[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.+=", "link" : "org\/saddle\/Mat.html#+=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Add,This,B]):Unit", "kind" : "def"}, {"label" : "outer", "tail" : "(other: B)(op: BinOp[OuterProd, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.outer", "link" : "org\/saddle\/Mat.html#outer[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.OuterProd,This,B,That]):That", "kind" : "def"}, {"label" : "dot", "tail" : "(other: B)(op: BinOp[InnerProd, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.dot", "link" : "org\/saddle\/Mat.html#dot[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.InnerProd,This,B,That]):That", "kind" : "def"}, {"label" : "xor", "tail" : "(other: B)(op: BinOp[XorOp, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.xor", "link" : "org\/saddle\/Mat.html#xor[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.XorOp,This,B,That]):That", "kind" : "def"}, {"label" : "&&", "tail" : "(other: B)(op: BinOp[AndOp, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.&&", "link" : "org\/saddle\/Mat.html#&&[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.AndOp,This,B,That]):That", "kind" : "def"}, {"label" : "||", "tail" : "(other: B)(op: BinOp[OrOp, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.||", "link" : "org\/saddle\/Mat.html#||[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.OrOp,This,B,That]):That", "kind" : "def"}, {"label" : "<>", "tail" : "(other: B)(op: BinOp[NeqOp, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<>", "link" : "org\/saddle\/Mat.html#<>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,This,B,That]):That", "kind" : "def"}, {"label" : "=?", "tail" : "(other: B)(op: BinOp[EqOp, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.=?", "link" : "org\/saddle\/Mat.html#=?[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.EqOp,This,B,That]):That", "kind" : "def"}, {"label" : ">=", "tail" : "(other: B)(op: BinOp[GteOp, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>=", "link" : "org\/saddle\/Mat.html#>=[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.GteOp,This,B,That]):That", "kind" : "def"}, {"label" : ">", "tail" : "(other: B)(op: BinOp[GtOp, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>", "link" : "org\/saddle\/Mat.html#>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.GtOp,This,B,That]):That", "kind" : "def"}, {"label" : "<=", "tail" : "(other: B)(op: BinOp[LteOp, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<=", "link" : "org\/saddle\/Mat.html#<=[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.LteOp,This,B,That]):That", "kind" : "def"}, {"label" : "<", "tail" : "(other: B)(op: BinOp[LtOp, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<", "link" : "org\/saddle\/Mat.html#<[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.LtOp,This,B,That]):That", "kind" : "def"}, {"label" : ">>>", "tail" : "(other: B)(op: BinOp[BitUShr, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>>>", "link" : "org\/saddle\/Mat.html#>>>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitUShr,This,B,That]):That", "kind" : "def"}, {"label" : ">>", "tail" : "(other: B)(op: BinOp[BitShr, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>>", "link" : "org\/saddle\/Mat.html#>>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitShr,This,B,That]):That", "kind" : "def"}, {"label" : "<<", "tail" : "(other: B)(op: BinOp[BitShl, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<<", "link" : "org\/saddle\/Mat.html#<<[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitShl,This,B,That]):That", "kind" : "def"}, {"label" : "^", "tail" : "(other: B)(op: BinOp[BitXor, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.^", "link" : "org\/saddle\/Mat.html#^[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitXor,This,B,That]):That", "kind" : "def"}, {"label" : "|", "tail" : "(other: B)(op: BinOp[BitOr, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.|", "link" : "org\/saddle\/Mat.html#|[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitOr,This,B,That]):That", "kind" : "def"}, {"label" : "&", "tail" : "(other: B)(op: BinOp[BitAnd, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.&", "link" : "org\/saddle\/Mat.html#&[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitAnd,This,B,That]):That", "kind" : "def"}, {"label" : "**", "tail" : "(other: B)(op: BinOp[Power, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.**", "link" : "org\/saddle\/Mat.html#**[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Power,This,B,That]):That", "kind" : "def"}, {"label" : "%", "tail" : "(other: B)(op: BinOp[Mod, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.%", "link" : "org\/saddle\/Mat.html#%[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Mod,This,B,That]):That", "kind" : "def"}, {"label" : "*", "tail" : "(other: B)(op: BinOp[Multiply, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.*", "link" : "org\/saddle\/Mat.html#*[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Multiply,This,B,That]):That", "kind" : "def"}, {"label" : "\/", "tail" : "(other: B)(op: BinOp[Divide, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.\/", "link" : "org\/saddle\/Mat.html#\/[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Divide,This,B,That]):That", "kind" : "def"}, {"label" : "-", "tail" : "(other: B)(op: BinOp[Subtract, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.-", "link" : "org\/saddle\/Mat.html#-[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Subtract,This,B,That]):That", "kind" : "def"}, {"label" : "+", "tail" : "(other: B)(op: BinOp[Add, Mat[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.+", "link" : "org\/saddle\/Mat.html#+[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Add,This,B,That]):That", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/Mat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/Mat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/Mat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/Mat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/Mat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/Mat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/Mat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Mat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Mat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Mat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/Mat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/Mat.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/Mat.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/Mat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/Mat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/Mat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "MatMatElemOpIp", "tail" : "", "member" : "org.saddle.ops.BinOpMatInPlace.MatMatElemOpIp", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatMatElemOpIp[OP<:org.saddle.ops.ScalarOp,A,B]extendsBinOpInPlace[OP,org.saddle.Mat[A],org.saddle.Mat[B]]", "kind" : "final class"}, {"label" : "MatSclrElemOpIp", "tail" : "", "member" : "org.saddle.ops.BinOpMatInPlace.MatSclrElemOpIp", "link" : "org\/saddle\/ops\/BinOpMatInPlace.html#MatSclrElemOpIp[OP<:org.saddle.ops.ScalarOp,A,B]extendsBinOpInPlace[OP,org.saddle.Mat[A],B]", "kind" : "final class"}, {"label" : "MatMatElemOp", "tail" : "", "member" : "org.saddle.ops.BinOpMat.MatMatElemOp", "link" : "org\/saddle\/ops\/BinOpMat.html#MatMatElemOp[OP<:org.saddle.ops.ScalarOp,A,B,C]extendsBinOp[OP,org.saddle.Mat[A],org.saddle.Mat[B],org.saddle.Mat[C]]", "kind" : "final class"}, {"label" : "MatSclrElemOp", "tail" : "", "member" : "org.saddle.ops.BinOpMat.MatSclrElemOp", "link" : "org\/saddle\/ops\/BinOpMat.html#MatSclrElemOp[OP<:org.saddle.ops.ScalarOp,A,B,C]extendsBinOp[OP,org.saddle.Mat[A],B,org.saddle.Mat[C]]", "kind" : "final class"}, {"label" : "ident", "tail" : "(n: Int): Mat[Double]", "member" : "org.saddle.Mat.ident", "link" : "org\/saddle\/Mat$.html#ident(n:Int):org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Vec[T]*)(arg0: ST[T]): Mat[T]", "member" : "org.saddle.Mat.apply", "link" : "org\/saddle\/Mat$.html#apply[T](values:org.saddle.Vec[T]*)(implicitevidence$9:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Array[Vec[T]])(arg0: ST[T]): Mat[T]", "member" : "org.saddle.Mat.apply", "link" : "org\/saddle\/Mat$.html#apply[T](values:Array[org.saddle.Vec[T]])(implicitevidence$8:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Array[Array[T]])(arg0: ST[T]): Mat[T]", "member" : "org.saddle.Mat.apply", "link" : "org\/saddle\/Mat$.html#apply[T](values:Array[Array[T]])(implicitevidence$7:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(numRows: Int, numCols: Int)(st: ST[T]): Mat[T]", "member" : "org.saddle.Mat.apply", "link" : "org\/saddle\/Mat$.html#apply[T](numRows:Int,numCols:Int)(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "empty", "tail" : "(arg0: ST[T]): Mat[T]", "member" : "org.saddle.Mat.empty", "link" : "org\/saddle\/Mat$.html#empty[T](implicitevidence$6:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(rows: Int, cols: Int, vec: Vec[T])(st: ST[T]): Mat[T]", "member" : "org.saddle.Mat.apply", "link" : "org\/saddle\/Mat$.html#apply[T](rows:Int,cols:Int,vec:org.saddle.Vec[T])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(rows: Int, cols: Int, arr: Array[T])(st: ST[T]): Mat[T]", "member" : "org.saddle.Mat.apply", "link" : "org\/saddle\/Mat$.html#apply[T](rows:Int,cols:Int,arr:Array[T])(implicitst:org.saddle.ST[T]):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "MatMatElemOpIpIII", "tail" : "(op: BinOp[Op, Int, Int, Int]): MatMatElemOpIp[Op, Int, Int]", "member" : "org.saddle.ops.BinOpMatInPlace.MatMatElemOpIpIII", "link" : "org\/saddle\/Mat$.html#MatMatElemOpIpIII[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Int]):BinOpMatInPlace.this.MatMatElemOpIp[Op,Int,Int]", "kind" : "implicit def"}, {"label" : "MatMatElemOpIpLIL", "tail" : "(op: BinOp[Op, Long, Int, Long]): MatMatElemOpIp[Op, Long, Int]", "member" : "org.saddle.ops.BinOpMatInPlace.MatMatElemOpIpLIL", "link" : "org\/saddle\/Mat$.html#MatMatElemOpIpLIL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Long]):BinOpMatInPlace.this.MatMatElemOpIp[Op,Long,Int]", "kind" : "implicit def"}, {"label" : "MatMatElemOpIpLLL", "tail" : "(op: BinOp[Op, Long, Long, Long]): MatMatElemOpIp[Op, Long, Long]", "member" : "org.saddle.ops.BinOpMatInPlace.MatMatElemOpIpLLL", "link" : "org\/saddle\/Mat$.html#MatMatElemOpIpLLL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Long]):BinOpMatInPlace.this.MatMatElemOpIp[Op,Long,Long]", "kind" : "implicit def"}, {"label" : "MatMatElemOpIpDID", "tail" : "(op: BinOp[Op, Double, Int, Double]): MatMatElemOpIp[Op, Double, Int]", "member" : "org.saddle.ops.BinOpMatInPlace.MatMatElemOpIpDID", "link" : "org\/saddle\/Mat$.html#MatMatElemOpIpDID[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Double]):BinOpMatInPlace.this.MatMatElemOpIp[Op,Double,Int]", "kind" : "implicit def"}, {"label" : "MatMatElemOpIpDLD", "tail" : "(op: BinOp[Op, Double, Long, Double]): MatMatElemOpIp[Op, Double, Long]", "member" : "org.saddle.ops.BinOpMatInPlace.MatMatElemOpIpDLD", "link" : "org\/saddle\/Mat$.html#MatMatElemOpIpDLD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Double]):BinOpMatInPlace.this.MatMatElemOpIp[Op,Double,Long]", "kind" : "implicit def"}, {"label" : "MatMatElemOpIpDDD", "tail" : "(op: BinOp[Op, Double, Double, Double]): MatMatElemOpIp[Op, Double, Double]", "member" : "org.saddle.ops.BinOpMatInPlace.MatMatElemOpIpDDD", "link" : "org\/saddle\/Mat$.html#MatMatElemOpIpDDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Double]):BinOpMatInPlace.this.MatMatElemOpIp[Op,Double,Double]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIpIII", "tail" : "(op: BinOp[Op, Int, Int, Int]): MatSclrElemOpIp[Op, Int, Int]", "member" : "org.saddle.ops.BinOpMatInPlace.MatSclrElmOpIpIII", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpIpIII[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Int]):BinOpMatInPlace.this.MatSclrElemOpIp[Op,Int,Int]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIpLIL", "tail" : "(op: BinOp[Op, Long, Int, Long]): MatSclrElemOpIp[Op, Long, Int]", "member" : "org.saddle.ops.BinOpMatInPlace.MatSclrElmOpIpLIL", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpIpLIL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Long]):BinOpMatInPlace.this.MatSclrElemOpIp[Op,Long,Int]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIpLLL", "tail" : "(op: BinOp[Op, Long, Long, Long]): MatSclrElemOpIp[Op, Long, Long]", "member" : "org.saddle.ops.BinOpMatInPlace.MatSclrElmOpIpLLL", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpIpLLL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Long]):BinOpMatInPlace.this.MatSclrElemOpIp[Op,Long,Long]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIpDID", "tail" : "(op: BinOp[Op, Double, Int, Double]): MatSclrElemOpIp[Op, Double, Int]", "member" : "org.saddle.ops.BinOpMatInPlace.MatSclrElmOpIpDID", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpIpDID[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Double]):BinOpMatInPlace.this.MatSclrElemOpIp[Op,Double,Int]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIpDLD", "tail" : "(op: BinOp[Op, Double, Long, Double]): MatSclrElemOpIp[Op, Double, Long]", "member" : "org.saddle.ops.BinOpMatInPlace.MatSclrElmOpIpDLD", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpIpDLD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Double]):BinOpMatInPlace.this.MatSclrElemOpIp[Op,Double,Long]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIpDDD", "tail" : "(op: BinOp[Op, Double, Double, Double]): MatSclrElemOpIp[Op, Double, Double]", "member" : "org.saddle.ops.BinOpMatInPlace.MatSclrElmOpIpDDD", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpIpDDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Double]):BinOpMatInPlace.this.MatSclrElemOpIp[Op,Double,Double]", "kind" : "implicit def"}, {"label" : "MatMatElemOpIII", "tail" : "(op: BinOp[Op, Int, Int, Int]): MatMatElemOp[Op, Int, Int, Int]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpIII", "link" : "org\/saddle\/Mat$.html#MatMatElemOpIII[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Int]):BinOpMat.this.MatMatElemOp[Op,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "MatMatElemOpILL", "tail" : "(op: BinOp[Op, Int, Long, Long]): MatMatElemOp[Op, Int, Long, Long]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpILL", "link" : "org\/saddle\/Mat$.html#MatMatElemOpILL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Long,Long]):BinOpMat.this.MatMatElemOp[Op,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "MatMatElemOpIDD", "tail" : "(op: BinOp[Op, Int, Double, Double]): MatMatElemOp[Op, Int, Double, Double]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpIDD", "link" : "org\/saddle\/Mat$.html#MatMatElemOpIDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Double,Double]):BinOpMat.this.MatMatElemOp[Op,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "MatMatElemOpLIL", "tail" : "(op: BinOp[Op, Long, Int, Long]): MatMatElemOp[Op, Long, Int, Long]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpLIL", "link" : "org\/saddle\/Mat$.html#MatMatElemOpLIL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Long]):BinOpMat.this.MatMatElemOp[Op,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "MatMatElemOpLLL", "tail" : "(op: BinOp[Op, Long, Long, Long]): MatMatElemOp[Op, Long, Long, Long]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpLLL", "link" : "org\/saddle\/Mat$.html#MatMatElemOpLLL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Long]):BinOpMat.this.MatMatElemOp[Op,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "MatMatElemOpLDD", "tail" : "(op: BinOp[Op, Long, Double, Double]): MatMatElemOp[Op, Long, Double, Double]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpLDD", "link" : "org\/saddle\/Mat$.html#MatMatElemOpLDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Double,Double]):BinOpMat.this.MatMatElemOp[Op,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "MatMatElemOpDID", "tail" : "(op: BinOp[Op, Double, Int, Double]): MatMatElemOp[Op, Double, Int, Double]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpDID", "link" : "org\/saddle\/Mat$.html#MatMatElemOpDID[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Double]):BinOpMat.this.MatMatElemOp[Op,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "MatMatElemOpDLD", "tail" : "(op: BinOp[Op, Double, Long, Double]): MatMatElemOp[Op, Double, Long, Double]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpDLD", "link" : "org\/saddle\/Mat$.html#MatMatElemOpDLD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Double]):BinOpMat.this.MatMatElemOp[Op,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "MatMatElemOpDDD", "tail" : "(op: BinOp[Op, Double, Double, Double]): MatMatElemOp[Op, Double, Double, Double]", "member" : "org.saddle.ops.BinOpMat.MatMatElemOpDDD", "link" : "org\/saddle\/Mat$.html#MatMatElemOpDDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Double]):BinOpMat.this.MatMatElemOp[Op,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpLIB", "tail" : "(op: BinOp[Op, Long, Int, Boolean]): MatSclrElemOp[Op, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpLIB", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpLIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Long,Int,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpLLB", "tail" : "(op: BinOp[Op, Long, Long, Boolean]): MatSclrElemOp[Op, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpLLB", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpLLB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Long,Long,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIIB", "tail" : "(op: BinOp[Op, Int, Int, Boolean]): MatSclrElemOp[Op, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpIIB", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpIIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Int,Int,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpDIB", "tail" : "(op: BinOp[Op, Double, Int, Boolean]): MatSclrElemOp[Op, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpDIB", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpDIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Double,Int,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIDB", "tail" : "(op: BinOp[Op, Int, Double, Boolean]): MatSclrElemOp[Op, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpIDB", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpIDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Double,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Int,Double,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpLDB", "tail" : "(op: BinOp[Op, Long, Double, Boolean]): MatSclrElemOp[Op, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpLDB", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpLDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Double,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Long,Double,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpDLB", "tail" : "(op: BinOp[Op, Double, Long, Boolean]): MatSclrElemOp[Op, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpDLB", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpDLB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Double,Long,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpDDB", "tail" : "(op: BinOp[Op, Double, Double, Boolean]): MatSclrElemOp[Op, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpDDB", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpDDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Double,Double,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpBBB", "tail" : "(op: BinOp[Op, Boolean, Boolean, Boolean]): MatSclrElemOp[Op, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpBBB", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpBBB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Boolean,Boolean,Boolean]):BinOpMat.this.MatSclrElemOp[Op,Boolean,Boolean,Boolean]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIII", "tail" : "(op: BinOp[Op, Int, Int, Int]): MatSclrElemOp[Op, Int, Int, Int]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpIII", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpIII[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Int]):BinOpMat.this.MatSclrElemOp[Op,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpILL", "tail" : "(op: BinOp[Op, Int, Long, Long]): MatSclrElemOp[Op, Int, Long, Long]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpILL", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpILL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Long,Long]):BinOpMat.this.MatSclrElemOp[Op,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpIDD", "tail" : "(op: BinOp[Op, Int, Double, Double]): MatSclrElemOp[Op, Int, Double, Double]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpIDD", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpIDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Double,Double]):BinOpMat.this.MatSclrElemOp[Op,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpLIL", "tail" : "(op: BinOp[Op, Long, Int, Long]): MatSclrElemOp[Op, Long, Int, Long]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpLIL", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpLIL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Long]):BinOpMat.this.MatSclrElemOp[Op,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpLLL", "tail" : "(op: BinOp[Op, Long, Long, Long]): MatSclrElemOp[Op, Long, Long, Long]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpLLL", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpLLL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Long]):BinOpMat.this.MatSclrElemOp[Op,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpLDD", "tail" : "(op: BinOp[Op, Long, Double, Double]): MatSclrElemOp[Op, Long, Double, Double]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpLDD", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpLDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Double,Double]):BinOpMat.this.MatSclrElemOp[Op,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpDID", "tail" : "(op: BinOp[Op, Double, Int, Double]): MatSclrElemOp[Op, Double, Int, Double]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpDID", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpDID[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Double]):BinOpMat.this.MatSclrElemOp[Op,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpDLD", "tail" : "(op: BinOp[Op, Double, Long, Double]): MatSclrElemOp[Op, Double, Long, Double]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpDLD", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpDLD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Double]):BinOpMat.this.MatSclrElemOp[Op,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "MatSclrElmOpDDD", "tail" : "(op: BinOp[Op, Double, Double, Double]): MatSclrElemOp[Op, Double, Double, Double]", "member" : "org.saddle.ops.BinOpMat.MatSclrElmOpDDD", "link" : "org\/saddle\/Mat$.html#MatSclrElmOpDDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Double]):BinOpMat.this.MatSclrElemOp[Op,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/Mat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/Mat$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/Mat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/Mat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/Mat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/Mat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/Mat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Mat$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Mat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Mat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/Mat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/Mat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/Mat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/Mat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/Mat$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/Mat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/Mat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/Mat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/Mat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/Mat.html", "kind" : "class"}, {"name" : "org.saddle.na", "shortDescription" : "na provides syntactic sugar for constructing primitives recognized as NA.", "object" : "org\/saddle\/package$$na$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "org.saddle.na.toString", "link" : "org\/saddle\/package$$na$.html#toString():String", "kind" : "def"}, {"label" : "naToDouble", "tail" : ": (na.type) ⇒ Double", "member" : "org.saddle.na.naToDouble", "link" : "org\/saddle\/package$$na$.html#naToDouble:org.saddle.package.na.type=>Double", "kind" : "implicit val"}, {"label" : "naToFloat", "tail" : ": (na.type) ⇒ Float", "member" : "org.saddle.na.naToFloat", "link" : "org\/saddle\/package$$na$.html#naToFloat:org.saddle.package.na.type=>Float", "kind" : "implicit val"}, {"label" : "naToLong", "tail" : ": (na.type) ⇒ Long", "member" : "org.saddle.na.naToLong", "link" : "org\/saddle\/package$$na$.html#naToLong:org.saddle.package.na.type=>Long", "kind" : "implicit val"}, {"label" : "naToInt", "tail" : ": (na.type) ⇒ Int", "member" : "org.saddle.na.naToInt", "link" : "org\/saddle\/package$$na$.html#naToInt:org.saddle.package.na.type=>Int", "kind" : "implicit val"}, {"label" : "naToShort", "tail" : ": (na.type) ⇒ Short", "member" : "org.saddle.na.naToShort", "link" : "org\/saddle\/package$$na$.html#naToShort:org.saddle.package.na.type=>Short", "kind" : "implicit val"}, {"label" : "naToChar", "tail" : ": (na.type) ⇒ Char", "member" : "org.saddle.na.naToChar", "link" : "org\/saddle\/package$$na$.html#naToChar:org.saddle.package.na.type=>Char", "kind" : "implicit val"}, {"label" : "naToByte", "tail" : ": (na.type) ⇒ Byte", "member" : "org.saddle.na.naToByte", "link" : "org\/saddle\/package$$na$.html#naToByte:org.saddle.package.na.type=>Byte", "kind" : "implicit val"}, {"label" : "to", "tail" : "(fn: (na.type) ⇒ T): T", "member" : "org.saddle.na.to", "link" : "org\/saddle\/package$$na$.html#to[T](implicitfn:org.saddle.package.na.type=>T):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/package$$na$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/package$$na$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/package$$na$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/package$$na$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/package$$na$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/package$$na$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/package$$na$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$na$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$na$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$na$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/package$$na$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/package$$na$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/package$$na$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/package$$na$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/package$$na$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/package$$na$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/package$$na$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/package$$na$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.OptionToScalar", "shortDescription" : "", "members_class" : [{"label" : "toScalar", "tail" : "(): Scalar[T]", "member" : "org.saddle.OptionToScalar.toScalar", "link" : "org\/saddle\/package$$OptionToScalar.html#toScalar:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"member" : "org.saddle.OptionToScalar#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/package$$OptionToScalar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/package$$OptionToScalar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/package$$OptionToScalar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/package$$OptionToScalar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/package$$OptionToScalar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/package$$OptionToScalar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/package$$OptionToScalar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$OptionToScalar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$OptionToScalar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$OptionToScalar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/package$$OptionToScalar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/package$$OptionToScalar.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/package$$OptionToScalar.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/package$$OptionToScalar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/package$$OptionToScalar.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/package$$OptionToScalar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/package$$OptionToScalar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/package$$OptionToScalar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/package$$OptionToScalar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/package$$OptionToScalar.html", "kind" : "class"}, {"name" : "org.saddle.Panel", "shortDescription" : "Convenience constructors for a Frame[RX, CX, Any] that accept arbitrarily-typed Vectorsand Series as constructor parameters, leaving their internal representations unchanged.", "object" : "org\/saddle\/Panel$.html", "members_object" : [{"label" : "apply", "tail" : "(values: (CX, Series[RX, _])*)(arg0: ST[RX], arg1: ORD[RX], arg2: ST[CX], arg3: ORD[CX]): Frame[RX, CX, Any]", "member" : "org.saddle.Panel.apply", "link" : "org\/saddle\/Panel$.html#apply[RX,CX](values:(CX,org.saddle.Series[RX,_])*)(implicitevidence$106:org.saddle.ST[RX],implicitevidence$107:org.saddle.ORD[RX],implicitevidence$108:org.saddle.ST[CX],implicitevidence$109:org.saddle.ORD[CX]):org.saddle.Frame[RX,CX,Any]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Seq[Series[RX, _]], colIx: Index[CX])(arg0: ST[RX], arg1: ORD[RX], arg2: ST[CX], arg3: ORD[CX]): Frame[RX, CX, Any]", "member" : "org.saddle.Panel.apply", "link" : "org\/saddle\/Panel$.html#apply[RX,CX](values:Seq[org.saddle.Series[RX,_]],colIx:org.saddle.Index[CX])(implicitevidence$102:org.saddle.ST[RX],implicitevidence$103:org.saddle.ORD[RX],implicitevidence$104:org.saddle.ST[CX],implicitevidence$105:org.saddle.ORD[CX]):org.saddle.Frame[RX,CX,Any]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Series[RX, _]*)(arg0: ST[RX], arg1: ORD[RX]): Frame[RX, Int, Any]", "member" : "org.saddle.Panel.apply", "link" : "org\/saddle\/Panel$.html#apply[RX](values:org.saddle.Series[RX,_]*)(implicitevidence$100:org.saddle.ST[RX],implicitevidence$101:org.saddle.ORD[RX]):org.saddle.Frame[RX,Int,Any]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: (CX, Vec[_])*)(arg0: ST[CX], arg1: ORD[CX], arg2: ST[T]): Frame[Int, CX, Any]", "member" : "org.saddle.Panel.apply", "link" : "org\/saddle\/Panel$.html#apply[CX,T](values:(CX,org.saddle.Vec[_])*)(implicitevidence$97:org.saddle.ST[CX],implicitevidence$98:org.saddle.ORD[CX],implicitevidence$99:org.saddle.ST[T]):org.saddle.Frame[Int,CX,Any]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Seq[Vec[_]], colIx: Index[CX])(arg0: ST[CX], arg1: ORD[CX]): Frame[Int, CX, Any]", "member" : "org.saddle.Panel.apply", "link" : "org\/saddle\/Panel$.html#apply[CX](values:Seq[org.saddle.Vec[_]],colIx:org.saddle.Index[CX])(implicitevidence$95:org.saddle.ST[CX],implicitevidence$96:org.saddle.ORD[CX]):org.saddle.Frame[Int,CX,Any]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Seq[Vec[_]], rowIx: Index[RX], colIx: Index[CX])(arg0: ST[RX], arg1: ORD[RX], arg2: ST[CX], arg3: ORD[CX]): Frame[RX, CX, Any]", "member" : "org.saddle.Panel.apply", "link" : "org\/saddle\/Panel$.html#apply[RX,CX](values:Seq[org.saddle.Vec[_]],rowIx:org.saddle.Index[RX],colIx:org.saddle.Index[CX])(implicitevidence$91:org.saddle.ST[RX],implicitevidence$92:org.saddle.ORD[RX],implicitevidence$93:org.saddle.ST[CX],implicitevidence$94:org.saddle.ORD[CX]):org.saddle.Frame[RX,CX,Any]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Vec[_]*): Frame[Int, Int, Any]", "member" : "org.saddle.Panel.apply", "link" : "org\/saddle\/Panel$.html#apply(values:org.saddle.Vec[_]*):org.saddle.Frame[Int,Int,Any]", "kind" : "def"}, {"label" : "empty", "tail" : "(arg0: ST[RX], arg1: ORD[RX], arg2: ST[CX], arg3: ORD[CX]): Frame[RX, CX, Any]", "member" : "org.saddle.Panel.empty", "link" : "org\/saddle\/Panel$.html#empty[RX,CX](implicitevidence$87:org.saddle.ST[RX],implicitevidence$88:org.saddle.ORD[RX],implicitevidence$89:org.saddle.ST[CX],implicitevidence$90:org.saddle.ORD[CX]):org.saddle.Frame[RX,CX,Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/Panel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/Panel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/Panel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/Panel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/Panel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/Panel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/Panel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Panel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Panel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Panel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/Panel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/Panel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/Panel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/Panel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/Panel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/Panel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/Panel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/Panel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/Panel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.PctMethod", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/PctMethod.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/PctMethod.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/PctMethod.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/PctMethod.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/PctMethod.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/PctMethod.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/PctMethod.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/PctMethod.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/PctMethod.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/PctMethod.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/PctMethod.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/PctMethod.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/PctMethod.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/PctMethod.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/PctMethod.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/PctMethod.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/PctMethod.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/PctMethod.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/PctMethod.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Trait which specifies what percentile method to use", "object" : "org\/saddle\/PctMethod$.html", "members_object" : [{"label" : "NIST", "tail" : "", "member" : "org.saddle.PctMethod.NIST", "link" : "org\/saddle\/PctMethod$.html#NIST", "kind" : "object"}, {"label" : "Excel", "tail" : "", "member" : "org.saddle.PctMethod.Excel", "link" : "org\/saddle\/PctMethod$.html#Excel", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/PctMethod$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/PctMethod$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/PctMethod$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/PctMethod$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/PctMethod$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/PctMethod$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/PctMethod$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/PctMethod$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/PctMethod$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/PctMethod$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/PctMethod$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/PctMethod$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/PctMethod$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/PctMethod$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/PctMethod$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/PctMethod$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/PctMethod$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/PctMethod$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/PctMethod$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/saddle\/PctMethod.html", "kind" : "trait"}, {"name" : "org.saddle.PrimitiveToScalar", "shortDescription" : "", "members_class" : [{"label" : "isNA", "tail" : "(): Boolean", "member" : "org.saddle.PrimitiveToScalar.isNA", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#isNA:Boolean", "kind" : "def"}, {"label" : "toScalar", "tail" : "(): Scalar[T]", "member" : "org.saddle.PrimitiveToScalar.toScalar", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#toScalar:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"member" : "org.saddle.PrimitiveToScalar#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/package$$PrimitiveToScalar.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/package$$PrimitiveToScalar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/package$$PrimitiveToScalar.html", "kind" : "class"}, {"name" : "org.saddle.RankTie", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/RankTie.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/RankTie.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/RankTie.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/RankTie.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/RankTie.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/RankTie.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/RankTie.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/RankTie.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/RankTie.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/RankTie.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/RankTie.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/RankTie.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/RankTie.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/RankTie.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/RankTie.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/RankTie.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/RankTie.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/RankTie.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/RankTie.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Trait which specifies how to break a rank tie", "object" : "org\/saddle\/RankTie$.html", "members_object" : [{"label" : "Nat", "tail" : "", "member" : "org.saddle.RankTie.Nat", "link" : "org\/saddle\/RankTie$.html#Nat", "kind" : "object"}, {"label" : "Max", "tail" : "", "member" : "org.saddle.RankTie.Max", "link" : "org\/saddle\/RankTie$.html#Max", "kind" : "object"}, {"label" : "Min", "tail" : "", "member" : "org.saddle.RankTie.Min", "link" : "org\/saddle\/RankTie$.html#Min", "kind" : "object"}, {"label" : "Avg", "tail" : "", "member" : "org.saddle.RankTie.Avg", "link" : "org\/saddle\/RankTie$.html#Avg", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/RankTie$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/RankTie$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/RankTie$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/RankTie$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/RankTie$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/RankTie$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/RankTie$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/RankTie$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/RankTie$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/RankTie$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/RankTie$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/RankTie$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/RankTie$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/RankTie$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/RankTie$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/RankTie$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/RankTie$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/RankTie$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/RankTie$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/saddle\/RankTie.html", "kind" : "trait"}, {"name" : "org.saddle.SeqToFrame", "shortDescription" : "Augments Seq with a toFrame method that returns a new Frame instance.", "members_class" : [{"label" : "toFrame", "tail" : "(): Frame[RX, CX, T]", "member" : "org.saddle.SeqToFrame.toFrame", "link" : "org\/saddle\/package$$SeqToFrame.html#toFrame:org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"member" : "org.saddle.SeqToFrame#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/package$$SeqToFrame.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/package$$SeqToFrame.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/package$$SeqToFrame.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/package$$SeqToFrame.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/package$$SeqToFrame.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/package$$SeqToFrame.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/package$$SeqToFrame.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToFrame.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToFrame.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToFrame.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/package$$SeqToFrame.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/package$$SeqToFrame.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/package$$SeqToFrame.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/package$$SeqToFrame.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/package$$SeqToFrame.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/package$$SeqToFrame.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/package$$SeqToFrame.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/package$$SeqToFrame.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/package$$SeqToFrame.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/package$$SeqToFrame.html", "kind" : "class"}, {"name" : "org.saddle.SeqToFrame2", "shortDescription" : "", "members_class" : [{"label" : "toFrame", "tail" : "(): Frame[RX, CX, T]", "member" : "org.saddle.SeqToFrame2.toFrame", "link" : "org\/saddle\/package$$SeqToFrame2.html#toFrame:org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"member" : "org.saddle.SeqToFrame2#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/package$$SeqToFrame2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/package$$SeqToFrame2.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/package$$SeqToFrame2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/package$$SeqToFrame2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/package$$SeqToFrame2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/package$$SeqToFrame2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/package$$SeqToFrame2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToFrame2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToFrame2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToFrame2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/package$$SeqToFrame2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/package$$SeqToFrame2.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/package$$SeqToFrame2.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/package$$SeqToFrame2.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/package$$SeqToFrame2.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/package$$SeqToFrame2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/package$$SeqToFrame2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/package$$SeqToFrame2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/package$$SeqToFrame2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/package$$SeqToFrame2.html", "kind" : "class"}, {"name" : "org.saddle.SeqToIndex", "shortDescription" : "Augments Seq with a toIndex method that returns a new Index instance.", "members_class" : [{"label" : "toIndex", "tail" : "(): Index[X]", "member" : "org.saddle.SeqToIndex.toIndex", "link" : "org\/saddle\/package$$SeqToIndex.html#toIndex:org.saddle.Index[X]", "kind" : "def"}, {"member" : "org.saddle.SeqToIndex#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/package$$SeqToIndex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/package$$SeqToIndex.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/package$$SeqToIndex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/package$$SeqToIndex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/package$$SeqToIndex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/package$$SeqToIndex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/package$$SeqToIndex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToIndex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToIndex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToIndex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/package$$SeqToIndex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/package$$SeqToIndex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/package$$SeqToIndex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/package$$SeqToIndex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/package$$SeqToIndex.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/package$$SeqToIndex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/package$$SeqToIndex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/package$$SeqToIndex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/package$$SeqToIndex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/package$$SeqToIndex.html", "kind" : "class"}, {"name" : "org.saddle.SeqToMat", "shortDescription" : "", "members_class" : [{"label" : "toMat", "tail" : "(): Mat[T]", "member" : "org.saddle.SeqToMat.toMat", "link" : "org\/saddle\/package$$SeqToMat.html#toMat:org.saddle.Mat[T]", "kind" : "def"}, {"member" : "org.saddle.SeqToMat#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/package$$SeqToMat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/package$$SeqToMat.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/package$$SeqToMat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/package$$SeqToMat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/package$$SeqToMat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/package$$SeqToMat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/package$$SeqToMat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToMat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToMat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToMat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/package$$SeqToMat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/package$$SeqToMat.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/package$$SeqToMat.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/package$$SeqToMat.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/package$$SeqToMat.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/package$$SeqToMat.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/package$$SeqToMat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/package$$SeqToMat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/package$$SeqToMat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/package$$SeqToMat.html", "kind" : "class"}, {"name" : "org.saddle.SeqToSeries", "shortDescription" : "Augments Seq with a toSeries method that returns a new Series instance.", "members_class" : [{"label" : "toSeries", "tail" : "(): Series[X, T]", "member" : "org.saddle.SeqToSeries.toSeries", "link" : "org\/saddle\/package$$SeqToSeries.html#toSeries:org.saddle.Series[X,T]", "kind" : "def"}, {"member" : "org.saddle.SeqToSeries#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/package$$SeqToSeries.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/package$$SeqToSeries.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/package$$SeqToSeries.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/package$$SeqToSeries.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/package$$SeqToSeries.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/package$$SeqToSeries.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/package$$SeqToSeries.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToSeries.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToSeries.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToSeries.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/package$$SeqToSeries.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/package$$SeqToSeries.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/package$$SeqToSeries.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/package$$SeqToSeries.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/package$$SeqToSeries.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/package$$SeqToSeries.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/package$$SeqToSeries.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/package$$SeqToSeries.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/package$$SeqToSeries.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/package$$SeqToSeries.html", "kind" : "class"}, {"name" : "org.saddle.SeqToVec", "shortDescription" : "Augments Seq with a toVec method that returns a new Vec instance.", "members_class" : [{"label" : "toVec", "tail" : "(): Vec[T]", "member" : "org.saddle.SeqToVec.toVec", "link" : "org\/saddle\/package$$SeqToVec.html#toVec:org.saddle.Vec[T]", "kind" : "def"}, {"member" : "org.saddle.SeqToVec#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/package$$SeqToVec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/package$$SeqToVec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/package$$SeqToVec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/package$$SeqToVec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/package$$SeqToVec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/package$$SeqToVec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/package$$SeqToVec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToVec.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToVec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/package$$SeqToVec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/package$$SeqToVec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/package$$SeqToVec.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/package$$SeqToVec.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/package$$SeqToVec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/package$$SeqToVec.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/package$$SeqToVec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/package$$SeqToVec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/package$$SeqToVec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/package$$SeqToVec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/package$$SeqToVec.html", "kind" : "class"}, {"name" : "org.saddle.Series", "shortDescription" : "Series is an immutable container for 1D homogeneous data which is indexed by aan associated sequence of keys.", "object" : "org\/saddle\/Series$.html", "members_class" : [{"label" : "updated", "tail" : "(value: T, keys: Array[X]): Series[X, T]", "member" : "org.saddle.Series.updated", "link" : "org\/saddle\/Series.html#updated(value:T,keys:Array[X]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "updated", "tail" : "(value: T, keys: X*): Series[X, T]", "member" : "org.saddle.Series.updated", "link" : "org\/saddle\/Series.html#updated(value:T,keys:X*):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "toFrame", "tail" : "(): Frame[X, Int, T]", "member" : "org.saddle.Series.toFrame", "link" : "org\/saddle\/Series.html#toFrame:org.saddle.Frame[X,Int,T]", "kind" : "def"}, {"label" : "countif", "tail" : "(test: (T) ⇒ Boolean): Int", "member" : "org.saddle.Series.countif", "link" : "org\/saddle\/Series.html#countif(test:T=>Boolean):Int", "kind" : "def"}, {"label" : "count", "tail" : "(): Int", "member" : "org.saddle.Series.count", "link" : "org\/saddle\/Series.html#count:Int", "kind" : "def"}, {"label" : "max", "tail" : "(na: NUM[T]): Scalar[T]", "member" : "org.saddle.Series.max", "link" : "org\/saddle\/Series.html#max(implicitna:org.saddle.NUM[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "min", "tail" : "(na: NUM[T]): Scalar[T]", "member" : "org.saddle.Series.min", "link" : "org\/saddle\/Series.html#min(implicitna:org.saddle.NUM[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "median", "tail" : "(na: NUM[T]): Double", "member" : "org.saddle.Series.median", "link" : "org\/saddle\/Series.html#median(implicitna:org.saddle.NUM[T]):Double", "kind" : "def"}, {"label" : "sum", "tail" : "(na: NUM[T]): T", "member" : "org.saddle.Series.sum", "link" : "org\/saddle\/Series.html#sum(implicitna:org.saddle.NUM[T]):T", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.Series.toString", "link" : "org\/saddle\/Series.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.saddle.Series.equals", "link" : "org\/saddle\/Series.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.Series.hashCode", "link" : "org\/saddle\/Series.html#hashCode():Int", "kind" : "def"}, {"label" : "print", "tail" : "(len: Int, stream: OutputStream): Unit", "member" : "org.saddle.Series.print", "link" : "org\/saddle\/Series.html#print(len:Int,stream:java.io.OutputStream):Unit", "kind" : "def"}, {"label" : "stringify", "tail" : "(len: Int): String", "member" : "org.saddle.Series.stringify", "link" : "org\/saddle\/Series.html#stringify(len:Int):String", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): IndexedSeq[(X, T)]", "member" : "org.saddle.Series.toSeq", "link" : "org\/saddle\/Series.html#toSeq:IndexedSeq[(X,T)]", "kind" : "def"}, {"label" : "toVec", "tail" : "(): Vec[T]", "member" : "org.saddle.Series.toVec", "link" : "org\/saddle\/Series.html#toVec:org.saddle.Vec[T]", "kind" : "def"}, {"label" : "proxyWith", "tail" : "(proxy: Series[X, T])(fn: (NA.type) ⇒ T): Series[X, T]", "member" : "org.saddle.Series.proxyWith", "link" : "org\/saddle\/Series.html#proxyWith(proxy:org.saddle.Series[X,T])(implicitfn:org.saddle.scalar.NA.type=>T):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "align", "tail" : "(other: Series[X, U], how: JoinType)(arg0: ST[U]): (Series[X, T], Series[X, U])", "member" : "org.saddle.Series.align", "link" : "org\/saddle\/Series.html#align[U](other:org.saddle.Series[X,U],how:org.saddle.index.JoinType)(implicitevidence$24:org.saddle.ST[U]):(org.saddle.Series[X,T],org.saddle.Series[X,U])", "kind" : "def"}, {"label" : "joinF", "tail" : "(other: Frame[X, _, T], how: JoinType): Frame[X, Int, T]", "member" : "org.saddle.Series.joinF", "link" : "org\/saddle\/Series.html#joinF(other:org.saddle.Frame[X,_,T],how:org.saddle.index.JoinType):org.saddle.Frame[X,Int,T]", "kind" : "def"}, {"label" : "hjoin", "tail" : "(other: Series[X, _], how: JoinType): Frame[X, Int, Any]", "member" : "org.saddle.Series.hjoin", "link" : "org\/saddle\/Series.html#hjoin(other:org.saddle.Series[X,_],how:org.saddle.index.JoinType):org.saddle.Frame[X,Int,Any]", "kind" : "def"}, {"label" : "join", "tail" : "(other: Series[X, T], how: JoinType): Frame[X, Int, T]", "member" : "org.saddle.Series.join", "link" : "org\/saddle\/Series.html#join(other:org.saddle.Series[X,T],how:org.saddle.index.JoinType):org.saddle.Frame[X,Int,T]", "kind" : "def"}, {"label" : "pivot", "tail" : "(split: Splitter[X, O1, O2], ord1: ORD[O1], ord2: ORD[O2], m1: ST[O1], m2: ST[O2]): Frame[O1, O2, T]", "member" : "org.saddle.Series.pivot", "link" : "org\/saddle\/Series.html#pivot[O1,O2](implicitsplit:org.saddle.index.Splitter[X,O1,O2],implicitord1:org.saddle.ORD[O1],implicitord2:org.saddle.ORD[O2],implicitm1:org.saddle.ST[O1],implicitm2:org.saddle.ST[O2]):org.saddle.Frame[O1,O2,T]", "kind" : "def"}, {"label" : "splitBy", "tail" : "(k: X): (Series[X, T], Series[X, T])", "member" : "org.saddle.Series.splitBy", "link" : "org\/saddle\/Series.html#splitBy(k:X):(org.saddle.Series[X,T],org.saddle.Series[X,T])", "kind" : "def"}, {"label" : "splitAt", "tail" : "(i: Int): (Series[X, T], Series[X, T])", "member" : "org.saddle.Series.splitAt", "link" : "org\/saddle\/Series.html#splitAt(i:Int):(org.saddle.Series[X,T],org.saddle.Series[X,T])", "kind" : "def"}, {"label" : "rolling", "tail" : "(winSz: Int, f: (Series[X, T]) ⇒ B)(arg0: ST[B]): Series[X, B]", "member" : "org.saddle.Series.rolling", "link" : "org\/saddle\/Series.html#rolling[B](winSz:Int,f:org.saddle.Series[X,T]=>B)(implicitevidence$23:org.saddle.ST[B]):org.saddle.Series[X,B]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(ix: Index[Y])(arg0: ST[Y], arg1: ORD[Y]): SeriesGrouper[Y, X, T]", "member" : "org.saddle.Series.groupBy", "link" : "org\/saddle\/Series.html#groupBy[Y](ix:org.saddle.Index[Y])(implicitevidence$21:org.saddle.ST[Y],implicitevidence$22:org.saddle.ORD[Y]):org.saddle.groupby.SeriesGrouper[Y,X,T]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(fn: (X) ⇒ Y)(arg0: ST[Y], arg1: ORD[Y]): SeriesGrouper[Y, X, T]", "member" : "org.saddle.Series.groupBy", "link" : "org\/saddle\/Series.html#groupBy[Y](fn:X=>Y)(implicitevidence$19:org.saddle.ST[Y],implicitevidence$20:org.saddle.ORD[Y]):org.saddle.groupby.SeriesGrouper[Y,X,T]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(): SeriesGrouper[X, X, T]", "member" : "org.saddle.Series.groupBy", "link" : "org\/saddle\/Series.html#groupBy:org.saddle.groupby.SeriesGrouper[X,X,T]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Series[X, T]", "member" : "org.saddle.Series.reversed", "link" : "org\/saddle\/Series.html#reversed:org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "sortedIx", "tail" : "(): Series[X, T]", "member" : "org.saddle.Series.sortedIx", "link" : "org\/saddle\/Series.html#sortedIx:org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ev: ORD[T]): Series[X, T]", "member" : "org.saddle.Series.sorted", "link" : "org\/saddle\/Series.html#sorted(implicitev:org.saddle.ORD[T]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "joinMap", "tail" : "(other: Series[X, U], how: JoinType)(f: (T, U) ⇒ V)(arg0: ST[U], arg1: ST[V]): Series[X, V]", "member" : "org.saddle.Series.joinMap", "link" : "org\/saddle\/Series.html#joinMap[U,V](other:org.saddle.Series[X,U],how:org.saddle.index.JoinType)(f:(T,U)=>V)(implicitevidence$17:org.saddle.ST[U],implicitevidence$18:org.saddle.ST[V]):org.saddle.Series[X,V]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(init: U)(f: (U, T) ⇒ U)(arg0: ST[U]): Series[X, U]", "member" : "org.saddle.Series.scanLeft", "link" : "org\/saddle\/Series.html#scanLeft[U](init:U)(f:(U,T)=>U)(implicitevidence$16:org.saddle.ST[U]):org.saddle.Series[X,U]", "kind" : "def"}, {"label" : "mapValues", "tail" : "(f: (T) ⇒ U)(arg0: ST[U]): Series[X, U]", "member" : "org.saddle.Series.mapValues", "link" : "org\/saddle\/Series.html#mapValues[U](f:T=>U)(implicitevidence$15:org.saddle.ST[U]):org.saddle.Series[X,U]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: ((X, T)) ⇒ Traversable[(Y, U)])(arg0: ST[Y], arg1: ORD[Y], arg2: ST[U]): Series[Y, U]", "member" : "org.saddle.Series.flatMap", "link" : "org\/saddle\/Series.html#flatMap[Y,U](f:((X,T))=>Traversable[(Y,U)])(implicitevidence$12:org.saddle.ST[Y],implicitevidence$13:org.saddle.ORD[Y],implicitevidence$14:org.saddle.ST[U]):org.saddle.Series[Y,U]", "kind" : "def"}, {"label" : "map", "tail" : "(f: ((X, T)) ⇒ (Y, U))(arg0: ST[Y], arg1: ORD[Y], arg2: ST[U]): Series[Y, U]", "member" : "org.saddle.Series.map", "link" : "org\/saddle\/Series.html#map[Y,U](f:((X,T))=>(Y,U))(implicitevidence$9:org.saddle.ST[Y],implicitevidence$10:org.saddle.ORD[Y],implicitevidence$11:org.saddle.ST[U]):org.saddle.Series[Y,U]", "kind" : "def"}, {"label" : "exists", "tail" : "(pred: (T) ⇒ Boolean): Boolean", "member" : "org.saddle.Series.exists", "link" : "org\/saddle\/Series.html#exists(pred:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(key: X): Boolean", "member" : "org.saddle.Series.contains", "link" : "org\/saddle\/Series.html#contains(key:X):Boolean", "kind" : "def"}, {"label" : "maxKey", "tail" : "(num: NUM[T], ord: ORD[T]): Scalar[X]", "member" : "org.saddle.Series.maxKey", "link" : "org\/saddle\/Series.html#maxKey(implicitnum:org.saddle.NUM[T],implicitord:org.saddle.ORD[T]):org.saddle.scalar.Scalar[X]", "kind" : "def"}, {"label" : "minKey", "tail" : "(num: NUM[T], ord: ORD[T]): Scalar[X]", "member" : "org.saddle.Series.minKey", "link" : "org\/saddle\/Series.html#minKey(implicitnum:org.saddle.NUM[T],implicitord:org.saddle.ORD[T]):org.saddle.scalar.Scalar[X]", "kind" : "def"}, {"label" : "findOneKey", "tail" : "(pred: (T) ⇒ Boolean): Scalar[X]", "member" : "org.saddle.Series.findOneKey", "link" : "org\/saddle\/Series.html#findOneKey(pred:T=>Boolean):org.saddle.scalar.Scalar[X]", "kind" : "def"}, {"label" : "findOne", "tail" : "(pred: (T) ⇒ Boolean): Int", "member" : "org.saddle.Series.findOne", "link" : "org\/saddle\/Series.html#findOne(pred:T=>Boolean):Int", "kind" : "def"}, {"label" : "findKey", "tail" : "(pred: (T) ⇒ Boolean): Index[X]", "member" : "org.saddle.Series.findKey", "link" : "org\/saddle\/Series.html#findKey(pred:T=>Boolean):org.saddle.Index[X]", "kind" : "def"}, {"label" : "find", "tail" : "(pred: (T) ⇒ Boolean): Vec[Int]", "member" : "org.saddle.Series.find", "link" : "org\/saddle\/Series.html#find(pred:T=>Boolean):org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "where", "tail" : "(pred: Vec[Boolean]): Series[X, T]", "member" : "org.saddle.Series.where", "link" : "org\/saddle\/Series.html#where(pred:org.saddle.Vec[Boolean]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "where", "tail" : "(pred: Series[_, Boolean]): Series[X, T]", "member" : "org.saddle.Series.where", "link" : "org\/saddle\/Series.html#where(pred:org.saddle.Series[_,Boolean]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "filterAt", "tail" : "(pred: (Int) ⇒ Boolean): Series[X, T]", "member" : "org.saddle.Series.filterAt", "link" : "org\/saddle\/Series.html#filterAt(pred:Int=>Boolean):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "filterIx", "tail" : "(pred: (X) ⇒ Boolean): Series[X, T]", "member" : "org.saddle.Series.filterIx", "link" : "org\/saddle\/Series.html#filterIx(pred:X=>Boolean):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (T) ⇒ Boolean): Series[X, T]", "member" : "org.saddle.Series.filter", "link" : "org\/saddle\/Series.html#filter(pred:T=>Boolean):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "maskIx", "tail" : "(f: (X) ⇒ Boolean): Series[X, T]", "member" : "org.saddle.Series.maskIx", "link" : "org\/saddle\/Series.html#maskIx(f:X=>Boolean):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "mask", "tail" : "(f: (T) ⇒ Boolean): Series[X, T]", "member" : "org.saddle.Series.mask", "link" : "org\/saddle\/Series.html#mask(f:T=>Boolean):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "mask", "tail" : "(m: Vec[Boolean]): Series[X, T]", "member" : "org.saddle.Series.mask", "link" : "org\/saddle\/Series.html#mask(m:org.saddle.Vec[Boolean]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "distinctIx", "tail" : "(): Series[X, T]", "member" : "org.saddle.Series.distinctIx", "link" : "org\/saddle\/Series.html#distinctIx:org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "hasNA", "tail" : "(): Boolean", "member" : "org.saddle.Series.hasNA", "link" : "org\/saddle\/Series.html#hasNA:Boolean", "kind" : "def"}, {"label" : "dropNA", "tail" : "(): Series[X, T]", "member" : "org.saddle.Series.dropNA", "link" : "org\/saddle\/Series.html#dropNA:org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "fillNA", "tail" : "(f: (X) ⇒ T): Series[X, T]", "member" : "org.saddle.Series.fillNA", "link" : "org\/saddle\/Series.html#fillNA(f:X=>T):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "shift", "tail" : "(n: Int): Series[X, T]", "member" : "org.saddle.Series.shift", "link" : "org\/saddle\/Series.html#shift(n:Int):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "tail", "tail" : "(n: Int): Series[X, T]", "member" : "org.saddle.Series.tail", "link" : "org\/saddle\/Series.html#tail(n:Int):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "head", "tail" : "(n: Int): Series[X, T]", "member" : "org.saddle.Series.head", "link" : "org\/saddle\/Series.html#head(n:Int):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "take", "tail" : "(locs: Array[Int]): Series[X, T]", "member" : "org.saddle.Series.take", "link" : "org\/saddle\/Series.html#take(locs:Array[Int]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int, stride: Int): Series[X, T]", "member" : "org.saddle.Series.slice", "link" : "org\/saddle\/Series.html#slice(from:Int,until:Int,stride:Int):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(rng: Slice[X]): Series[X, T]", "member" : "org.saddle.Series.sliceBy", "link" : "org\/saddle\/Series.html#sliceBy(rng:org.saddle.index.Slice[X]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(from: X, to: X, inclusive: Boolean): Series[X, T]", "member" : "org.saddle.Series.sliceBy", "link" : "org\/saddle\/Series.html#sliceBy(from:X,to:X,inclusive:Boolean):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "unary_-", "tail" : "(num: NUM[T]): Series[X, T]", "member" : "org.saddle.Series.unary_-", "link" : "org\/saddle\/Series.html#unary_-(implicitnum:org.saddle.NUM[T]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "concat", "tail" : "(other: Series[X, T]): Series[X, T]", "member" : "org.saddle.Series.concat", "link" : "org\/saddle\/Series.html#concat(other:org.saddle.Series[X,T]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "mapVec", "tail" : "(fn: (Vec[T]) ⇒ Vec[Y])(arg0: ST[Y]): Series[X, Y]", "member" : "org.saddle.Series.mapVec", "link" : "org\/saddle\/Series.html#mapVec[Y](fn:org.saddle.Vec[T]=>org.saddle.Vec[Y])(implicitevidence$8:org.saddle.ST[Y]):org.saddle.Series[X,Y]", "kind" : "def"}, {"label" : "mapIndex", "tail" : "(fn: (X) ⇒ Y)(arg0: ST[Y], arg1: ORD[Y]): Series[Y, T]", "member" : "org.saddle.Series.mapIndex", "link" : "org\/saddle\/Series.html#mapIndex[Y](fn:X=>Y)(implicitevidence$6:org.saddle.ST[Y],implicitevidence$7:org.saddle.ORD[Y]):org.saddle.Series[Y,T]", "kind" : "def"}, {"label" : "resetIndex", "tail" : "(): Series[Int, T]", "member" : "org.saddle.Series.resetIndex", "link" : "org\/saddle\/Series.html#resetIndex:org.saddle.Series[Int,T]", "kind" : "def"}, {"label" : "setIndex", "tail" : "(newIx: Index[Y])(arg0: ST[Y], arg1: ORD[Y]): Series[Y, T]", "member" : "org.saddle.Series.setIndex", "link" : "org\/saddle\/Series.html#setIndex[Y](newIx:org.saddle.Index[Y])(implicitevidence$4:org.saddle.ST[Y],implicitevidence$5:org.saddle.ORD[Y]):org.saddle.Series[Y,T]", "kind" : "def"}, {"label" : "reindex", "tail" : "(keys: X*): Series[X, T]", "member" : "org.saddle.Series.reindex", "link" : "org\/saddle\/Series.html#reindex(keys:X*):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "reindex", "tail" : "(newIx: Index[X]): Series[X, T]", "member" : "org.saddle.Series.reindex", "link" : "org\/saddle\/Series.html#reindex(newIx:org.saddle.Index[X]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(slice: Slice[X]): Series[X, T]", "member" : "org.saddle.Series.apply", "link" : "org\/saddle\/Series.html#apply(slice:org.saddle.index.Slice[X]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: X*): Series[X, T]", "member" : "org.saddle.Series.apply", "link" : "org\/saddle\/Series.html#apply(keys:X*):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: Vec[X]): Series[X, T]", "member" : "org.saddle.Series.apply", "link" : "org\/saddle\/Series.html#apply(keys:org.saddle.Vec[X]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(keys: Array[X]): Series[X, T]", "member" : "org.saddle.Series.apply", "link" : "org\/saddle\/Series.html#apply(keys:Array[X]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "lastKey", "tail" : "(): Scalar[X]", "member" : "org.saddle.Series.lastKey", "link" : "org\/saddle\/Series.html#lastKey:org.saddle.scalar.Scalar[X]", "kind" : "def"}, {"label" : "firstKey", "tail" : "(): Scalar[X]", "member" : "org.saddle.Series.firstKey", "link" : "org\/saddle\/Series.html#firstKey:org.saddle.scalar.Scalar[X]", "kind" : "def"}, {"label" : "keyAt", "tail" : "(locs: Int*): Index[X]", "member" : "org.saddle.Series.keyAt", "link" : "org\/saddle\/Series.html#keyAt(locs:Int*):org.saddle.Index[X]", "kind" : "def"}, {"label" : "keyAt", "tail" : "(locs: Array[Int]): Index[X]", "member" : "org.saddle.Series.keyAt", "link" : "org\/saddle\/Series.html#keyAt(locs:Array[Int]):org.saddle.Index[X]", "kind" : "def"}, {"label" : "keyAt", "tail" : "(loc: Int): Scalar[X]", "member" : "org.saddle.Series.keyAt", "link" : "org\/saddle\/Series.html#keyAt(loc:Int):org.saddle.scalar.Scalar[X]", "kind" : "def"}, {"label" : "last", "tail" : "(key: X): Scalar[T]", "member" : "org.saddle.Series.last", "link" : "org\/saddle\/Series.html#last(key:X):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "last", "tail" : "(): Scalar[T]", "member" : "org.saddle.Series.last", "link" : "org\/saddle\/Series.html#last:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "get", "tail" : "(key: X): Scalar[T]", "member" : "org.saddle.Series.get", "link" : "org\/saddle\/Series.html#get(key:X):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "first", "tail" : "(key: X): Scalar[T]", "member" : "org.saddle.Series.first", "link" : "org\/saddle\/Series.html#first(key:X):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "first", "tail" : "(): Scalar[T]", "member" : "org.saddle.Series.first", "link" : "org\/saddle\/Series.html#first:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Int*): Series[X, T]", "member" : "org.saddle.Series.at", "link" : "org\/saddle\/Series.html#at(locs:Int*):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "at", "tail" : "(locs: Array[Int]): Series[X, T]", "member" : "org.saddle.Series.at", "link" : "org\/saddle\/Series.html#at(locs:Array[Int]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "at", "tail" : "(loc: Int): Scalar[T]", "member" : "org.saddle.Series.at", "link" : "org\/saddle\/Series.html#at(loc:Int):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "raw", "tail" : "(loc: Int): T", "member" : "org.saddle.Series.raw", "link" : "org\/saddle\/Series.html#raw(loc:Int):T", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Series.isEmpty", "link" : "org\/saddle\/Series.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "org.saddle.Series.length", "link" : "org\/saddle\/Series.html#length:Int", "kind" : "def"}, {"member" : "org.saddle.Series#<init>", "error" : "unsupported entity"}, {"label" : "index", "tail" : ": Index[X]", "member" : "org.saddle.Series.index", "link" : "org\/saddle\/Series.html#index:org.saddle.Index[X]", "kind" : "val"}, {"label" : "values", "tail" : ": Vec[T]", "member" : "org.saddle.Series.values", "link" : "org\/saddle\/Series.html#values:org.saddle.Vec[T]", "kind" : "val"}, {"label" : "**=", "tail" : "(other: B)(op: BinOpInPlace[Power, Series[X, T], B]): Unit", "member" : "org.saddle.ops.NumericOps.**=", "link" : "org\/saddle\/Series.html#**=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Power,This,B]):Unit", "kind" : "def"}, {"label" : "%=", "tail" : "(other: B)(op: BinOpInPlace[Mod, Series[X, T], B]): Unit", "member" : "org.saddle.ops.NumericOps.%=", "link" : "org\/saddle\/Series.html#%=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Mod,This,B]):Unit", "kind" : "def"}, {"label" : "\/=", "tail" : "(other: B)(op: BinOpInPlace[Divide, Series[X, T], B]): Unit", "member" : "org.saddle.ops.NumericOps.\/=", "link" : "org\/saddle\/Series.html#\/=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Divide,This,B]):Unit", "kind" : "def"}, {"label" : "*=", "tail" : "(other: B)(op: BinOpInPlace[Multiply, Series[X, T], B]): Unit", "member" : "org.saddle.ops.NumericOps.*=", "link" : "org\/saddle\/Series.html#*=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Multiply,This,B]):Unit", "kind" : "def"}, {"label" : "-=", "tail" : "(other: B)(op: BinOpInPlace[Subtract, Series[X, T], B]): Unit", "member" : "org.saddle.ops.NumericOps.-=", "link" : "org\/saddle\/Series.html#-=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Subtract,This,B]):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(other: B)(op: BinOpInPlace[Add, Series[X, T], B]): Unit", "member" : "org.saddle.ops.NumericOps.+=", "link" : "org\/saddle\/Series.html#+=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Add,This,B]):Unit", "kind" : "def"}, {"label" : "outer", "tail" : "(other: B)(op: BinOp[OuterProd, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.outer", "link" : "org\/saddle\/Series.html#outer[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.OuterProd,This,B,That]):That", "kind" : "def"}, {"label" : "dot", "tail" : "(other: B)(op: BinOp[InnerProd, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.dot", "link" : "org\/saddle\/Series.html#dot[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.InnerProd,This,B,That]):That", "kind" : "def"}, {"label" : "xor", "tail" : "(other: B)(op: BinOp[XorOp, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.xor", "link" : "org\/saddle\/Series.html#xor[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.XorOp,This,B,That]):That", "kind" : "def"}, {"label" : "&&", "tail" : "(other: B)(op: BinOp[AndOp, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.&&", "link" : "org\/saddle\/Series.html#&&[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.AndOp,This,B,That]):That", "kind" : "def"}, {"label" : "||", "tail" : "(other: B)(op: BinOp[OrOp, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.||", "link" : "org\/saddle\/Series.html#||[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.OrOp,This,B,That]):That", "kind" : "def"}, {"label" : "<>", "tail" : "(other: B)(op: BinOp[NeqOp, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<>", "link" : "org\/saddle\/Series.html#<>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,This,B,That]):That", "kind" : "def"}, {"label" : "=?", "tail" : "(other: B)(op: BinOp[EqOp, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.=?", "link" : "org\/saddle\/Series.html#=?[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.EqOp,This,B,That]):That", "kind" : "def"}, {"label" : ">=", "tail" : "(other: B)(op: BinOp[GteOp, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>=", "link" : "org\/saddle\/Series.html#>=[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.GteOp,This,B,That]):That", "kind" : "def"}, {"label" : ">", "tail" : "(other: B)(op: BinOp[GtOp, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>", "link" : "org\/saddle\/Series.html#>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.GtOp,This,B,That]):That", "kind" : "def"}, {"label" : "<=", "tail" : "(other: B)(op: BinOp[LteOp, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<=", "link" : "org\/saddle\/Series.html#<=[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.LteOp,This,B,That]):That", "kind" : "def"}, {"label" : "<", "tail" : "(other: B)(op: BinOp[LtOp, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<", "link" : "org\/saddle\/Series.html#<[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.LtOp,This,B,That]):That", "kind" : "def"}, {"label" : ">>>", "tail" : "(other: B)(op: BinOp[BitUShr, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>>>", "link" : "org\/saddle\/Series.html#>>>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitUShr,This,B,That]):That", "kind" : "def"}, {"label" : ">>", "tail" : "(other: B)(op: BinOp[BitShr, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>>", "link" : "org\/saddle\/Series.html#>>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitShr,This,B,That]):That", "kind" : "def"}, {"label" : "<<", "tail" : "(other: B)(op: BinOp[BitShl, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<<", "link" : "org\/saddle\/Series.html#<<[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitShl,This,B,That]):That", "kind" : "def"}, {"label" : "^", "tail" : "(other: B)(op: BinOp[BitXor, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.^", "link" : "org\/saddle\/Series.html#^[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitXor,This,B,That]):That", "kind" : "def"}, {"label" : "|", "tail" : "(other: B)(op: BinOp[BitOr, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.|", "link" : "org\/saddle\/Series.html#|[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitOr,This,B,That]):That", "kind" : "def"}, {"label" : "&", "tail" : "(other: B)(op: BinOp[BitAnd, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.&", "link" : "org\/saddle\/Series.html#&[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitAnd,This,B,That]):That", "kind" : "def"}, {"label" : "**", "tail" : "(other: B)(op: BinOp[Power, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.**", "link" : "org\/saddle\/Series.html#**[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Power,This,B,That]):That", "kind" : "def"}, {"label" : "%", "tail" : "(other: B)(op: BinOp[Mod, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.%", "link" : "org\/saddle\/Series.html#%[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Mod,This,B,That]):That", "kind" : "def"}, {"label" : "*", "tail" : "(other: B)(op: BinOp[Multiply, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.*", "link" : "org\/saddle\/Series.html#*[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Multiply,This,B,That]):That", "kind" : "def"}, {"label" : "\/", "tail" : "(other: B)(op: BinOp[Divide, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.\/", "link" : "org\/saddle\/Series.html#\/[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Divide,This,B,That]):That", "kind" : "def"}, {"label" : "-", "tail" : "(other: B)(op: BinOp[Subtract, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.-", "link" : "org\/saddle\/Series.html#-[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Subtract,This,B,That]):That", "kind" : "def"}, {"label" : "+", "tail" : "(other: B)(op: BinOp[Add, Series[X, T], B, That]): That", "member" : "org.saddle.ops.NumericOps.+", "link" : "org\/saddle\/Series.html#+[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Add,This,B,That]):That", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/Series.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/Series.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/Series.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/Series.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/Series.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/Series.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/Series.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Series.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Series.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Series.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/Series.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/Series.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/Series.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/Series.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/Series.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/Series.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "SrSrEOp", "tail" : "", "member" : "org.saddle.ops.BinOpSeries.SrSrEOp", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrSrEOp[OP<:org.saddle.ops.ScalarOp,X,A,B,C]extendsBinOp[OP,org.saddle.Series[X,A],org.saddle.Series[X,B],org.saddle.Series[X,C]]", "kind" : "final class"}, {"label" : "SrScEOp", "tail" : "", "member" : "org.saddle.ops.BinOpSeries.SrScEOp", "link" : "org\/saddle\/ops\/BinOpSeries.html#SrScEOp[OP<:org.saddle.ops.ScalarOp,X,A,B,C]extendsBinOp[OP,org.saddle.Series[X,A],B,org.saddle.Series[X,C]]", "kind" : "final class"}, {"label" : "apply", "tail" : "(values: (X, T)*)(arg0: ST[X], arg1: ORD[X], arg2: ST[T]): Series[X, T]", "member" : "org.saddle.Series.apply", "link" : "org\/saddle\/Series$.html#apply[X,T](values:(X,T)*)(implicitevidence$36:org.saddle.ST[X],implicitevidence$37:org.saddle.ORD[X],implicitevidence$38:org.saddle.ST[T]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: T*)(arg0: ST[T]): Series[Int, T]", "member" : "org.saddle.Series.apply", "link" : "org\/saddle\/Series$.html#apply[T](values:T*)(implicitevidence$35:org.saddle.ST[T]):org.saddle.Series[Int,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Vec[T])(arg0: ST[T]): Series[Int, T]", "member" : "org.saddle.Series.apply", "link" : "org\/saddle\/Series$.html#apply[T](values:org.saddle.Vec[T])(implicitevidence$34:org.saddle.ST[T]):org.saddle.Series[Int,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Index[X], values: Vec[T])(arg0: ST[X], arg1: ORD[X], arg2: ST[T]): Series[X, T]", "member" : "org.saddle.Series.apply", "link" : "org\/saddle\/Series$.html#apply[X,T](index:org.saddle.Index[X],values:org.saddle.Vec[T])(implicitevidence$31:org.saddle.ST[X],implicitevidence$32:org.saddle.ORD[X],implicitevidence$33:org.saddle.ST[T]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: Vec[T], index: Index[X])(arg0: ST[X], arg1: ORD[X], arg2: ST[T]): Series[X, T]", "member" : "org.saddle.Series.apply", "link" : "org\/saddle\/Series$.html#apply[X,T](values:org.saddle.Vec[T],index:org.saddle.Index[X])(implicitevidence$28:org.saddle.ST[X],implicitevidence$29:org.saddle.ORD[X],implicitevidence$30:org.saddle.ST[T]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "empty", "tail" : "(arg0: ST[X], arg1: ORD[X], arg2: ST[T]): Series[X, T]", "member" : "org.saddle.Series.empty", "link" : "org\/saddle\/Series$.html#empty[X,T](implicitevidence$25:org.saddle.ST[X],implicitevidence$26:org.saddle.ORD[X],implicitevidence$27:org.saddle.ST[T]):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "SrSrEOpBBB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Boolean], Vec[Boolean], Vec[Boolean]]): SrSrEOp[Op, X, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpBBB", "link" : "org\/saddle\/Series$.html#SrSrEOpBBB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Boolean],org.saddle.Vec[Boolean],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Boolean,Boolean,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpIIB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Vec[Int], Vec[Boolean]]): SrSrEOp[Op, X, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpIIB", "link" : "org\/saddle\/Series$.html#SrSrEOpIIB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Int],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Int,Int,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpILB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Vec[Long], Vec[Boolean]]): SrSrEOp[Op, X, Int, Long, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpILB", "link" : "org\/saddle\/Series$.html#SrSrEOpILB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Long],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Int,Long,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpIDB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Vec[Double], Vec[Boolean]]): SrSrEOp[Op, X, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpIDB", "link" : "org\/saddle\/Series$.html#SrSrEOpIDB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Double],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Int,Double,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpLIB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Vec[Int], Vec[Boolean]]): SrSrEOp[Op, X, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpLIB", "link" : "org\/saddle\/Series$.html#SrSrEOpLIB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Int],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Long,Int,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpLLB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Vec[Long], Vec[Boolean]]): SrSrEOp[Op, X, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpLLB", "link" : "org\/saddle\/Series$.html#SrSrEOpLLB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Long],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Long,Long,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpLDB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Vec[Double], Vec[Boolean]]): SrSrEOp[Op, X, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpLDB", "link" : "org\/saddle\/Series$.html#SrSrEOpLDB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Double],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Long,Double,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpDIB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Vec[Int], Vec[Boolean]]): SrSrEOp[Op, X, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpDIB", "link" : "org\/saddle\/Series$.html#SrSrEOpDIB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Int],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Double,Int,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpDLB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Vec[Long], Vec[Boolean]]): SrSrEOp[Op, X, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpDLB", "link" : "org\/saddle\/Series$.html#SrSrEOpDLB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Long],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Double,Long,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpDDB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Vec[Double], Vec[Boolean]]): SrSrEOp[Op, X, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpDDB", "link" : "org\/saddle\/Series$.html#SrSrEOpDDB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Double],org.saddle.Vec[Boolean]]):BinOpSeries.this.SrSrEOp[Op,X,Double,Double,Boolean]", "kind" : "implicit def"}, {"label" : "SrSrEOpIII", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Vec[Int], Vec[Int]]): SrSrEOp[Op, X, Int, Int, Int]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpIII", "link" : "org\/saddle\/Series$.html#SrSrEOpIII[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Int],org.saddle.Vec[Int]]):BinOpSeries.this.SrSrEOp[Op,X,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "SrSrEOpILL", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Vec[Long], Vec[Long]]): SrSrEOp[Op, X, Int, Long, Long]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpILL", "link" : "org\/saddle\/Series$.html#SrSrEOpILL[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Long],org.saddle.Vec[Long]]):BinOpSeries.this.SrSrEOp[Op,X,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "SrSrEOpIDD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Vec[Double], Vec[Double]]): SrSrEOp[Op, X, Int, Double, Double]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpIDD", "link" : "org\/saddle\/Series$.html#SrSrEOpIDD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],org.saddle.Vec[Double],org.saddle.Vec[Double]]):BinOpSeries.this.SrSrEOp[Op,X,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "SrSrEOpLIL", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Vec[Int], Vec[Long]]): SrSrEOp[Op, X, Long, Int, Long]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpLIL", "link" : "org\/saddle\/Series$.html#SrSrEOpLIL[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Int],org.saddle.Vec[Long]]):BinOpSeries.this.SrSrEOp[Op,X,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "SrSrEOpLLL", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Vec[Long], Vec[Long]]): SrSrEOp[Op, X, Long, Long, Long]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpLLL", "link" : "org\/saddle\/Series$.html#SrSrEOpLLL[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Long],org.saddle.Vec[Long]]):BinOpSeries.this.SrSrEOp[Op,X,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "SrSrEOpLDD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Vec[Double], Vec[Double]]): SrSrEOp[Op, X, Long, Double, Double]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpLDD", "link" : "org\/saddle\/Series$.html#SrSrEOpLDD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],org.saddle.Vec[Double],org.saddle.Vec[Double]]):BinOpSeries.this.SrSrEOp[Op,X,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "SrSrEOpDLD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Vec[Long], Vec[Double]]): SrSrEOp[Op, X, Double, Long, Double]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpDLD", "link" : "org\/saddle\/Series$.html#SrSrEOpDLD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Long],org.saddle.Vec[Double]]):BinOpSeries.this.SrSrEOp[Op,X,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "SrSrEOpDID", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Vec[Int], Vec[Double]]): SrSrEOp[Op, X, Double, Int, Double]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpDID", "link" : "org\/saddle\/Series$.html#SrSrEOpDID[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Int],org.saddle.Vec[Double]]):BinOpSeries.this.SrSrEOp[Op,X,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "SrSrEOpDDD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Vec[Double], Vec[Double]]): SrSrEOp[Op, X, Double, Double, Double]", "member" : "org.saddle.ops.BinOpSeries.SrSrEOpDDD", "link" : "org\/saddle\/Series$.html#SrSrEOpDDD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],org.saddle.Vec[Double],org.saddle.Vec[Double]]):BinOpSeries.this.SrSrEOp[Op,X,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "SrScEOpBBB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Boolean], Boolean, Vec[Boolean]]): SrScEOp[Op, X, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpBBB", "link" : "org\/saddle\/Series$.html#SrScEOpBBB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Boolean],Boolean,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Boolean,Boolean,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpIIB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Int, Vec[Boolean]]): SrScEOp[Op, X, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpIIB", "link" : "org\/saddle\/Series$.html#SrScEOpIIB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Int,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Int,Int,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpILB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Long, Vec[Boolean]]): SrScEOp[Op, X, Int, Long, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpILB", "link" : "org\/saddle\/Series$.html#SrScEOpILB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Long,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Int,Long,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpIDB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Double, Vec[Boolean]]): SrScEOp[Op, X, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpIDB", "link" : "org\/saddle\/Series$.html#SrScEOpIDB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Double,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Int,Double,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpLIB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Int, Vec[Boolean]]): SrScEOp[Op, X, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpLIB", "link" : "org\/saddle\/Series$.html#SrScEOpLIB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Int,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Long,Int,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpLLB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Long, Vec[Boolean]]): SrScEOp[Op, X, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpLLB", "link" : "org\/saddle\/Series$.html#SrScEOpLLB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Long,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Long,Long,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpLDB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Double, Vec[Boolean]]): SrScEOp[Op, X, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpLDB", "link" : "org\/saddle\/Series$.html#SrScEOpLDB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Double,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Long,Double,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpDIB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Int, Vec[Boolean]]): SrScEOp[Op, X, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpDIB", "link" : "org\/saddle\/Series$.html#SrScEOpDIB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Int,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Double,Int,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpDLB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Long, Vec[Boolean]]): SrScEOp[Op, X, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpDLB", "link" : "org\/saddle\/Series$.html#SrScEOpDLB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Long,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Double,Long,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpDDB", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Double, Vec[Boolean]]): SrScEOp[Op, X, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpDDB", "link" : "org\/saddle\/Series$.html#SrScEOpDDB[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Double,org.saddle.Vec[Boolean]]):BinOpSeries.this.SrScEOp[Op,X,Double,Double,Boolean]", "kind" : "implicit def"}, {"label" : "SrScEOpIII", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Int, Vec[Int]]): SrScEOp[Op, X, Int, Int, Int]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpIII", "link" : "org\/saddle\/Series$.html#SrScEOpIII[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Int,org.saddle.Vec[Int]]):BinOpSeries.this.SrScEOp[Op,X,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "SrScEOpILL", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Long, Vec[Long]]): SrScEOp[Op, X, Int, Long, Long]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpILL", "link" : "org\/saddle\/Series$.html#SrScEOpILL[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Long,org.saddle.Vec[Long]]):BinOpSeries.this.SrScEOp[Op,X,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "SrScEOpIDD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Int], Double, Vec[Double]]): SrScEOp[Op, X, Int, Double, Double]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpIDD", "link" : "org\/saddle\/Series$.html#SrScEOpIDD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Int],Double,org.saddle.Vec[Double]]):BinOpSeries.this.SrScEOp[Op,X,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "SrScEOpLIL", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Int, Vec[Long]]): SrScEOp[Op, X, Long, Int, Long]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpLIL", "link" : "org\/saddle\/Series$.html#SrScEOpLIL[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Int,org.saddle.Vec[Long]]):BinOpSeries.this.SrScEOp[Op,X,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "SrScEOpLLL", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Long, Vec[Long]]): SrScEOp[Op, X, Long, Long, Long]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpLLL", "link" : "org\/saddle\/Series$.html#SrScEOpLLL[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Long,org.saddle.Vec[Long]]):BinOpSeries.this.SrScEOp[Op,X,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "SrScEOpLDD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Long], Double, Vec[Double]]): SrScEOp[Op, X, Long, Double, Double]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpLDD", "link" : "org\/saddle\/Series$.html#SrScEOpLDD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Long],Double,org.saddle.Vec[Double]]):BinOpSeries.this.SrScEOp[Op,X,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "SrScEOpDID", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Int, Vec[Double]]): SrScEOp[Op, X, Double, Int, Double]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpDID", "link" : "org\/saddle\/Series$.html#SrScEOpDID[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Int,org.saddle.Vec[Double]]):BinOpSeries.this.SrScEOp[Op,X,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "SrScEOpDLD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Long, Vec[Double]]): SrScEOp[Op, X, Double, Long, Double]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpDLD", "link" : "org\/saddle\/Series$.html#SrScEOpDLD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Long,org.saddle.Vec[Double]]):BinOpSeries.this.SrScEOp[Op,X,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "SrScEOpDDD", "tail" : "(cm: ST[X], cmp: ORD[X], opv: BinOp[Op, Vec[Double], Double, Vec[Double]]): SrScEOp[Op, X, Double, Double, Double]", "member" : "org.saddle.ops.BinOpSeries.SrScEOpDDD", "link" : "org\/saddle\/Series$.html#SrScEOpDDD[Op<:org.saddle.ops.ScalarOp,X](implicitcm:org.saddle.ST[X],implicitcmp:org.saddle.ORD[X],implicitopv:org.saddle.ops.BinOp[Op,org.saddle.Vec[Double],Double,org.saddle.Vec[Double]]):BinOpSeries.this.SrScEOp[Op,X,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/Series$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/Series$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/Series$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/Series$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/Series$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/Series$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/Series$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Series$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Series$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Series$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/Series$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/Series$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/Series$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/Series$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/Series$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/Series$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/Series$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/Series$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/Series$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/Series.html", "kind" : "class"}, {"name" : "org.saddle.Vec", "members_trait" : [{"label" : "**=", "tail" : "(other: B)(op: BinOpInPlace[Power, Vec[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.**=", "link" : "org\/saddle\/Vec.html#**=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Power,This,B]):Unit", "kind" : "def"}, {"label" : "%=", "tail" : "(other: B)(op: BinOpInPlace[Mod, Vec[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.%=", "link" : "org\/saddle\/Vec.html#%=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Mod,This,B]):Unit", "kind" : "def"}, {"label" : "\/=", "tail" : "(other: B)(op: BinOpInPlace[Divide, Vec[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.\/=", "link" : "org\/saddle\/Vec.html#\/=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Divide,This,B]):Unit", "kind" : "def"}, {"label" : "*=", "tail" : "(other: B)(op: BinOpInPlace[Multiply, Vec[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.*=", "link" : "org\/saddle\/Vec.html#*=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Multiply,This,B]):Unit", "kind" : "def"}, {"label" : "-=", "tail" : "(other: B)(op: BinOpInPlace[Subtract, Vec[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.-=", "link" : "org\/saddle\/Vec.html#-=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Subtract,This,B]):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(other: B)(op: BinOpInPlace[Add, Vec[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.+=", "link" : "org\/saddle\/Vec.html#+=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Add,This,B]):Unit", "kind" : "def"}, {"label" : "outer", "tail" : "(other: B)(op: BinOp[OuterProd, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.outer", "link" : "org\/saddle\/Vec.html#outer[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.OuterProd,This,B,That]):That", "kind" : "def"}, {"label" : "dot", "tail" : "(other: B)(op: BinOp[InnerProd, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.dot", "link" : "org\/saddle\/Vec.html#dot[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.InnerProd,This,B,That]):That", "kind" : "def"}, {"label" : "xor", "tail" : "(other: B)(op: BinOp[XorOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.xor", "link" : "org\/saddle\/Vec.html#xor[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.XorOp,This,B,That]):That", "kind" : "def"}, {"label" : "&&", "tail" : "(other: B)(op: BinOp[AndOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.&&", "link" : "org\/saddle\/Vec.html#&&[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.AndOp,This,B,That]):That", "kind" : "def"}, {"label" : "||", "tail" : "(other: B)(op: BinOp[OrOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.||", "link" : "org\/saddle\/Vec.html#||[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.OrOp,This,B,That]):That", "kind" : "def"}, {"label" : "<>", "tail" : "(other: B)(op: BinOp[NeqOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<>", "link" : "org\/saddle\/Vec.html#<>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,This,B,That]):That", "kind" : "def"}, {"label" : "=?", "tail" : "(other: B)(op: BinOp[EqOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.=?", "link" : "org\/saddle\/Vec.html#=?[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.EqOp,This,B,That]):That", "kind" : "def"}, {"label" : ">=", "tail" : "(other: B)(op: BinOp[GteOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>=", "link" : "org\/saddle\/Vec.html#>=[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.GteOp,This,B,That]):That", "kind" : "def"}, {"label" : ">", "tail" : "(other: B)(op: BinOp[GtOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>", "link" : "org\/saddle\/Vec.html#>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.GtOp,This,B,That]):That", "kind" : "def"}, {"label" : "<=", "tail" : "(other: B)(op: BinOp[LteOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<=", "link" : "org\/saddle\/Vec.html#<=[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.LteOp,This,B,That]):That", "kind" : "def"}, {"label" : "<", "tail" : "(other: B)(op: BinOp[LtOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<", "link" : "org\/saddle\/Vec.html#<[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.LtOp,This,B,That]):That", "kind" : "def"}, {"label" : ">>>", "tail" : "(other: B)(op: BinOp[BitUShr, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>>>", "link" : "org\/saddle\/Vec.html#>>>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitUShr,This,B,That]):That", "kind" : "def"}, {"label" : ">>", "tail" : "(other: B)(op: BinOp[BitShr, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>>", "link" : "org\/saddle\/Vec.html#>>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitShr,This,B,That]):That", "kind" : "def"}, {"label" : "<<", "tail" : "(other: B)(op: BinOp[BitShl, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<<", "link" : "org\/saddle\/Vec.html#<<[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitShl,This,B,That]):That", "kind" : "def"}, {"label" : "^", "tail" : "(other: B)(op: BinOp[BitXor, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.^", "link" : "org\/saddle\/Vec.html#^[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitXor,This,B,That]):That", "kind" : "def"}, {"label" : "|", "tail" : "(other: B)(op: BinOp[BitOr, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.|", "link" : "org\/saddle\/Vec.html#|[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitOr,This,B,That]):That", "kind" : "def"}, {"label" : "&", "tail" : "(other: B)(op: BinOp[BitAnd, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.&", "link" : "org\/saddle\/Vec.html#&[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitAnd,This,B,That]):That", "kind" : "def"}, {"label" : "**", "tail" : "(other: B)(op: BinOp[Power, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.**", "link" : "org\/saddle\/Vec.html#**[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Power,This,B,That]):That", "kind" : "def"}, {"label" : "%", "tail" : "(other: B)(op: BinOp[Mod, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.%", "link" : "org\/saddle\/Vec.html#%[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Mod,This,B,That]):That", "kind" : "def"}, {"label" : "*", "tail" : "(other: B)(op: BinOp[Multiply, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.*", "link" : "org\/saddle\/Vec.html#*[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Multiply,This,B,That]):That", "kind" : "def"}, {"label" : "\/", "tail" : "(other: B)(op: BinOp[Divide, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.\/", "link" : "org\/saddle\/Vec.html#\/[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Divide,This,B,That]):That", "kind" : "def"}, {"label" : "-", "tail" : "(other: B)(op: BinOp[Subtract, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.-", "link" : "org\/saddle\/Vec.html#-[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Subtract,This,B,That]):That", "kind" : "def"}, {"label" : "+", "tail" : "(other: B)(op: BinOp[Add, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.+", "link" : "org\/saddle\/Vec.html#+[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Add,This,B,That]):That", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/Vec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/Vec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/Vec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/Vec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/Vec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/Vec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/Vec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Vec.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Vec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Vec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/Vec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/Vec.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/Vec.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/Vec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/Vec.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/Vec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/Vec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/Vec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/Vec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reshape", "tail" : "(rows: Int, cols: Int): Mat[T]", "member" : "org.saddle.Vec.reshape", "link" : "org\/saddle\/Vec.html#reshape(rows:Int,cols:Int):org.saddle.Mat[T]", "kind" : "abstract def"}, {"label" : "updated", "tail" : "(offsets: Array[Int], value: T): Vec[T]", "member" : "org.saddle.Vec.updated", "link" : "org\/saddle\/Vec.html#updated(offsets:Array[Int],value:T):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "update", "tail" : "(slice: Slice[Int], value: Vec[T]): Unit", "member" : "org.saddle.Vec.update", "link" : "org\/saddle\/Vec.html#update(slice:org.saddle.index.Slice[Int],value:org.saddle.Vec[T]):Unit", "kind" : "abstract def"}, {"label" : "update", "tail" : "(slice: Slice[Int], value: T): Unit", "member" : "org.saddle.Vec.update", "link" : "org\/saddle\/Vec.html#update(slice:org.saddle.index.Slice[Int],value:T):Unit", "kind" : "abstract def"}, {"label" : "update", "tail" : "(offset: Int, value: T): Unit", "member" : "org.saddle.Vec.update", "link" : "org\/saddle\/Vec.html#update(offset:Int,value:T):Unit", "kind" : "abstract def"}, {"label" : "updated", "tail" : "(offset: Int, value: T): Vec[T]", "member" : "org.saddle.Vec.updated", "link" : "org\/saddle\/Vec.html#updated(offset:Int,value:T):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "roundTo", "tail" : "(sig: Int)(ev: NUM[T]): Vec[Double]", "member" : "org.saddle.Vec.roundTo", "link" : "org\/saddle\/Vec.html#roundTo(sig:Int)(implicitev:org.saddle.NUM[T]):org.saddle.Vec[Double]", "kind" : "abstract def"}, {"label" : "print", "tail" : "(len: Int, stream: OutputStream): Unit", "member" : "org.saddle.Vec.print", "link" : "org\/saddle\/Vec.html#print(len:Int,stream:java.io.OutputStream):Unit", "kind" : "abstract def"}, {"label" : "stringify", "tail" : "(len: Int): String", "member" : "org.saddle.Vec.stringify", "link" : "org\/saddle\/Vec.html#stringify(len:Int):String", "kind" : "abstract def"}, {"label" : "toArray", "tail" : "(): Array[T]", "member" : "org.saddle.Vec.toArray", "link" : "org\/saddle\/Vec.html#toArray:Array[T]", "kind" : "abstract def"}, {"label" : "copy", "tail" : "(): Vec[T]", "member" : "org.saddle.Vec.copy", "link" : "org\/saddle\/Vec.html#copy:org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "rank", "tail" : "(tie: RankTie, ascending: Boolean)(na: NUM[T]): Vec[Double]", "member" : "org.saddle.Vec.rank", "link" : "org\/saddle\/Vec.html#rank(tie:org.saddle.RankTie,ascending:Boolean)(implicitna:org.saddle.NUM[T]):org.saddle.Vec[Double]", "kind" : "abstract def"}, {"label" : "percentile", "tail" : "(tile: Double, method: PctMethod)(na: NUM[T]): Double", "member" : "org.saddle.Vec.percentile", "link" : "org\/saddle\/Vec.html#percentile(tile:Double,method:org.saddle.PctMethod)(implicitna:org.saddle.NUM[T]):Double", "kind" : "abstract def"}, {"label" : "mean", "tail" : "(na: NUM[T]): Double", "member" : "org.saddle.Vec.mean", "link" : "org\/saddle\/Vec.html#mean(implicitna:org.saddle.NUM[T]):Double", "kind" : "abstract def"}, {"label" : "median", "tail" : "(na: NUM[T]): Double", "member" : "org.saddle.Vec.median", "link" : "org\/saddle\/Vec.html#median(implicitna:org.saddle.NUM[T]):Double", "kind" : "abstract def"}, {"label" : "argmax", "tail" : "(na: NUM[T], st: ST[T], ord: ORD[T]): Int", "member" : "org.saddle.Vec.argmax", "link" : "org\/saddle\/Vec.html#argmax(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T],implicitord:org.saddle.ORD[T]):Int", "kind" : "abstract def"}, {"label" : "argmin", "tail" : "(na: NUM[T], st: ST[T], ord: ORD[T]): Int", "member" : "org.saddle.Vec.argmin", "link" : "org\/saddle\/Vec.html#argmin(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T],implicitord:org.saddle.ORD[T]):Int", "kind" : "abstract def"}, {"label" : "prod", "tail" : "(na: NUM[T], st: ST[T]): T", "member" : "org.saddle.Vec.prod", "link" : "org\/saddle\/Vec.html#prod(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T]):T", "kind" : "abstract def"}, {"label" : "countif", "tail" : "(test: (T) ⇒ Boolean): Int", "member" : "org.saddle.Vec.countif", "link" : "org\/saddle\/Vec.html#countif(test:T=>Boolean):Int", "kind" : "abstract def"}, {"label" : "count", "tail" : "(): Int", "member" : "org.saddle.Vec.count", "link" : "org\/saddle\/Vec.html#count:Int", "kind" : "abstract def"}, {"label" : "max", "tail" : "(na: NUM[T], st: ST[T]): Scalar[T]", "member" : "org.saddle.Vec.max", "link" : "org\/saddle\/Vec.html#max(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T]):org.saddle.scalar.Scalar[T]", "kind" : "abstract def"}, {"label" : "min", "tail" : "(na: NUM[T], st: ST[T]): Scalar[T]", "member" : "org.saddle.Vec.min", "link" : "org\/saddle\/Vec.html#min(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T]):org.saddle.scalar.Scalar[T]", "kind" : "abstract def"}, {"label" : "sum", "tail" : "(na: NUM[T], st: ST[T]): T", "member" : "org.saddle.Vec.sum", "link" : "org\/saddle\/Vec.html#sum(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T]):T", "kind" : "abstract def"}, {"label" : "toSeq", "tail" : "(): IndexedSeq[T]", "member" : "org.saddle.Vec.toSeq", "link" : "org\/saddle\/Vec.html#toSeq:IndexedSeq[T]", "kind" : "abstract def"}, {"label" : "fillNA", "tail" : "(f: (Int) ⇒ T): Vec[T]", "member" : "org.saddle.Vec.fillNA", "link" : "org\/saddle\/Vec.html#fillNA(f:Int=>T):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "shift", "tail" : "(n: Int): Vec[T]", "member" : "org.saddle.Vec.shift", "link" : "org\/saddle\/Vec.html#shift(n:Int):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "splitAt", "tail" : "(i: Int): (Vec[T], Vec[T])", "member" : "org.saddle.Vec.splitAt", "link" : "org\/saddle\/Vec.html#splitAt(i:Int):(org.saddle.Vec[T],org.saddle.Vec[T])", "kind" : "abstract def"}, {"label" : "sliceBy", "tail" : "(from: Int, to: Int, stride: Int): Vec[T]", "member" : "org.saddle.Vec.sliceBy", "link" : "org\/saddle\/Vec.html#sliceBy(from:Int,to:Int,stride:Int):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "slice", "tail" : "(from: Int, until: Int, stride: Int): Vec[T]", "member" : "org.saddle.Vec.slice", "link" : "org\/saddle\/Vec.html#slice(from:Int,until:Int,stride:Int):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "reversed", "tail" : "(): Vec[T]", "member" : "org.saddle.Vec.reversed", "link" : "org\/saddle\/Vec.html#reversed:org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "sorted", "tail" : "(ev: ORD[T], st: ST[T]): Vec[T]", "member" : "org.saddle.Vec.sorted", "link" : "org\/saddle\/Vec.html#sorted(implicitev:org.saddle.ORD[T],implicitst:org.saddle.ST[T]):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "rolling", "tail" : "(winSz: Int, f: (Vec[T]) ⇒ B)(arg0: ST[B]): Vec[B]", "member" : "org.saddle.Vec.rolling", "link" : "org\/saddle\/Vec.html#rolling[B](winSz:Int,f:org.saddle.Vec[T]=>B)(implicitevidence$12:org.saddle.ST[B]):org.saddle.Vec[B]", "kind" : "abstract def"}, {"label" : "where", "tail" : "(pred: Vec[Boolean]): Vec[T]", "member" : "org.saddle.Vec.where", "link" : "org\/saddle\/Vec.html#where(pred:org.saddle.Vec[Boolean]):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "filterAt", "tail" : "(pred: (Int) ⇒ Boolean): Vec[T]", "member" : "org.saddle.Vec.filterAt", "link" : "org\/saddle\/Vec.html#filterAt(pred:Int=>Boolean):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "filter", "tail" : "(pred: (T) ⇒ Boolean): Vec[T]", "member" : "org.saddle.Vec.filter", "link" : "org\/saddle\/Vec.html#filter(pred:T=>Boolean):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "exists", "tail" : "(pred: (T) ⇒ Boolean): Boolean", "member" : "org.saddle.Vec.exists", "link" : "org\/saddle\/Vec.html#exists(pred:T=>Boolean):Boolean", "kind" : "abstract def"}, {"label" : "findOne", "tail" : "(pred: (T) ⇒ Boolean): Int", "member" : "org.saddle.Vec.findOne", "link" : "org\/saddle\/Vec.html#findOne(pred:T=>Boolean):Int", "kind" : "abstract def"}, {"label" : "find", "tail" : "(pred: (T) ⇒ Boolean): Vec[Int]", "member" : "org.saddle.Vec.find", "link" : "org\/saddle\/Vec.html#find(pred:T=>Boolean):org.saddle.Vec[Int]", "kind" : "abstract def"}, {"label" : "forall", "tail" : "(pred: (T) ⇒ Boolean)(op: (T) ⇒ Unit): Unit", "member" : "org.saddle.Vec.forall", "link" : "org\/saddle\/Vec.html#forall(pred:T=>Boolean)(op:T=>Unit):Unit", "kind" : "abstract def"}, {"label" : "foreach", "tail" : "(op: (T) ⇒ Unit): Unit", "member" : "org.saddle.Vec.foreach", "link" : "org\/saddle\/Vec.html#foreach(op:T=>Unit):Unit", "kind" : "abstract def"}, {"label" : "hasNA", "tail" : "(): Boolean", "member" : "org.saddle.Vec.hasNA", "link" : "org\/saddle\/Vec.html#hasNA:Boolean", "kind" : "abstract def"}, {"label" : "dropNA", "tail" : "(): Vec[T]", "member" : "org.saddle.Vec.dropNA", "link" : "org\/saddle\/Vec.html#dropNA:org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "zipMap", "tail" : "(other: Vec[B])(f: (T, B) ⇒ C)(arg0: ST[B], arg1: ST[C]): Vec[C]", "member" : "org.saddle.Vec.zipMap", "link" : "org\/saddle\/Vec.html#zipMap[B,C](other:org.saddle.Vec[B])(f:(T,B)=>C)(implicitevidence$10:org.saddle.ST[B],implicitevidence$11:org.saddle.ST[C]):org.saddle.Vec[C]", "kind" : "abstract def"}, {"label" : "foldLeftWhile", "tail" : "(init: B)(f: (B, T) ⇒ B)(cond: (B, T) ⇒ Boolean)(arg0: ST[B]): B", "member" : "org.saddle.Vec.foldLeftWhile", "link" : "org\/saddle\/Vec.html#foldLeftWhile[B](init:B)(f:(B,T)=>B)(cond:(B,T)=>Boolean)(implicitevidence$9:org.saddle.ST[B]):B", "kind" : "abstract def"}, {"label" : "filterScanLeft", "tail" : "(pred: (T) ⇒ Boolean)(init: B)(f: (B, T) ⇒ B)(arg0: ST[B]): Vec[B]", "member" : "org.saddle.Vec.filterScanLeft", "link" : "org\/saddle\/Vec.html#filterScanLeft[B](pred:T=>Boolean)(init:B)(f:(B,T)=>B)(implicitevidence$8:org.saddle.ST[B]):org.saddle.Vec[B]", "kind" : "abstract def"}, {"label" : "filterFoldLeft", "tail" : "(pred: (T) ⇒ Boolean)(init: B)(f: (B, T) ⇒ B)(arg0: ST[B]): B", "member" : "org.saddle.Vec.filterFoldLeft", "link" : "org\/saddle\/Vec.html#filterFoldLeft[B](pred:T=>Boolean)(init:B)(f:(B,T)=>B)(implicitevidence$7:org.saddle.ST[B]):B", "kind" : "abstract def"}, {"label" : "scanLeft", "tail" : "(init: B)(f: (B, T) ⇒ B)(arg0: ST[B]): Vec[B]", "member" : "org.saddle.Vec.scanLeft", "link" : "org\/saddle\/Vec.html#scanLeft[B](init:B)(f:(B,T)=>B)(implicitevidence$6:org.saddle.ST[B]):org.saddle.Vec[B]", "kind" : "abstract def"}, {"label" : "foldLeft", "tail" : "(init: B)(f: (B, T) ⇒ B)(arg0: ST[B]): B", "member" : "org.saddle.Vec.foldLeft", "link" : "org\/saddle\/Vec.html#foldLeft[B](init:B)(f:(B,T)=>B)(implicitevidence$5:org.saddle.ST[B]):B", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ Vec[B])(arg0: ST[B]): Vec[B]", "member" : "org.saddle.Vec.flatMap", "link" : "org\/saddle\/Vec.html#flatMap[B](f:T=>org.saddle.Vec[B])(implicitevidence$4:org.saddle.ST[B]):org.saddle.Vec[B]", "kind" : "abstract def"}, {"label" : "map", "tail" : "(f: (T) ⇒ B)(arg0: ST[B]): Vec[B]", "member" : "org.saddle.Vec.map", "link" : "org\/saddle\/Vec.html#map[B](f:T=>B)(implicitevidence$3:org.saddle.ST[B]):org.saddle.Vec[B]", "kind" : "abstract def"}, {"label" : "unary_-", "tail" : "()(num: NUM[T]): Vec[T]", "member" : "org.saddle.Vec.unary_-", "link" : "org\/saddle\/Vec.html#unary_-()(implicitnum:org.saddle.NUM[T]):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "concat", "tail" : "(v: Vec[T]): Vec[T]", "member" : "org.saddle.Vec.concat", "link" : "org\/saddle\/Vec.html#concat(v:org.saddle.Vec[T]):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "mask", "tail" : "(f: (T) ⇒ Boolean): Vec[T]", "member" : "org.saddle.Vec.mask", "link" : "org\/saddle\/Vec.html#mask(f:T=>Boolean):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "mask", "tail" : "(m: Vec[Boolean]): Vec[T]", "member" : "org.saddle.Vec.mask", "link" : "org\/saddle\/Vec.html#mask(m:org.saddle.Vec[Boolean]):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "without", "tail" : "(locs: Array[Int]): Vec[T]", "member" : "org.saddle.Vec.without", "link" : "org\/saddle\/Vec.html#without(locs:Array[Int]):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "dropRight", "tail" : "(i: Int): Vec[T]", "member" : "org.saddle.Vec.dropRight", "link" : "org\/saddle\/Vec.html#dropRight(i:Int):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "dropLeft", "tail" : "(i: Int): Vec[T]", "member" : "org.saddle.Vec.dropLeft", "link" : "org\/saddle\/Vec.html#dropLeft(i:Int):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "takeRight", "tail" : "(i: Int): Vec[T]", "member" : "org.saddle.Vec.takeRight", "link" : "org\/saddle\/Vec.html#takeRight(i:Int):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "takeLeft", "tail" : "(i: Int): Vec[T]", "member" : "org.saddle.Vec.takeLeft", "link" : "org\/saddle\/Vec.html#takeLeft(i:Int):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "take", "tail" : "(locs: Array[Int]): Vec[T]", "member" : "org.saddle.Vec.take", "link" : "org\/saddle\/Vec.html#take(locs:Array[Int]):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.Vec.isEmpty", "link" : "org\/saddle\/Vec.html#isEmpty:Boolean", "kind" : "abstract def"}, {"label" : "tail", "tail" : "(n: Int): Vec[T]", "member" : "org.saddle.Vec.tail", "link" : "org\/saddle\/Vec.html#tail(n:Int):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "head", "tail" : "(n: Int): Vec[T]", "member" : "org.saddle.Vec.head", "link" : "org\/saddle\/Vec.html#head(n:Int):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "contents", "tail" : "(): Array[T]", "member" : "org.saddle.Vec.contents", "link" : "org\/saddle\/Vec.html#contents:Array[T]", "kind" : "abstract def"}, {"label" : "last", "tail" : "(): Scalar[T]", "member" : "org.saddle.Vec.last", "link" : "org\/saddle\/Vec.html#last:org.saddle.scalar.Scalar[T]", "kind" : "abstract def"}, {"label" : "first", "tail" : "(): Scalar[T]", "member" : "org.saddle.Vec.first", "link" : "org\/saddle\/Vec.html#first:org.saddle.scalar.Scalar[T]", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(rng: Slice[Int]): Vec[T]", "member" : "org.saddle.Vec.apply", "link" : "org\/saddle\/Vec.html#apply(rng:org.saddle.index.Slice[Int]):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(locs: Vec[Int]): Vec[T]", "member" : "org.saddle.Vec.apply", "link" : "org\/saddle\/Vec.html#apply(locs:org.saddle.Vec[Int]):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(locs: Array[Int]): Vec[T]", "member" : "org.saddle.Vec.apply", "link" : "org\/saddle\/Vec.html#apply(locs:Array[Int]):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(locs: Int*): Vec[T]", "member" : "org.saddle.Vec.apply", "link" : "org\/saddle\/Vec.html#apply(locs:Int*):org.saddle.Vec[T]", "kind" : "abstract def"}, {"label" : "raw", "tail" : "(loc: Int): T", "member" : "org.saddle.Vec.raw", "link" : "org\/saddle\/Vec.html#raw(loc:Int):T", "kind" : "abstract def"}, {"label" : "at", "tail" : "(loc: Int): Scalar[T]", "member" : "org.saddle.Vec.at", "link" : "org\/saddle\/Vec.html#at(loc:Int):org.saddle.scalar.Scalar[T]", "kind" : "abstract def"}, {"label" : "needsCopy", "tail" : "(): Boolean", "member" : "org.saddle.Vec.needsCopy", "link" : "org\/saddle\/Vec.html#needsCopy:Boolean", "kind" : "abstract def"}, {"label" : "scalarTag", "tail" : "(): ScalarTag[T]", "member" : "org.saddle.Vec.scalarTag", "link" : "org\/saddle\/Vec.html#scalarTag:org.saddle.scalar.ScalarTag[T]", "kind" : "abstract def"}, {"label" : "length", "tail" : "(): Int", "member" : "org.saddle.Vec.length", "link" : "org\/saddle\/Vec.html#length:Int", "kind" : "abstract def"}], "shortDescription" : "Vec is an immutable container for 1D homogeneous data (a \"vector\").", "object" : "org\/saddle\/Vec$.html", "members_object" : [{"label" : "VecVecOuter", "tail" : "", "member" : "org.saddle.ops.BinOpVec.VecVecOuter", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecOuter[A,B,C]extendsBinOp[org.saddle.ops.OuterProd,org.saddle.Vec[A],org.saddle.Vec[B],org.saddle.Mat[C]]", "kind" : "final class"}, {"label" : "VecVecDot", "tail" : "", "member" : "org.saddle.ops.BinOpVec.VecVecDot", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecDot[A,B,C]extendsBinOp[org.saddle.ops.InnerProd,org.saddle.Vec[A],org.saddle.Vec[B],C]", "kind" : "final class"}, {"label" : "VecVecElemOp", "tail" : "", "member" : "org.saddle.ops.BinOpVec.VecVecElemOp", "link" : "org\/saddle\/ops\/BinOpVec.html#VecVecElemOp[OP<:org.saddle.ops.ScalarOp,A,B,C]extendsBinOp[OP,org.saddle.Vec[A],org.saddle.Vec[B],org.saddle.Vec[C]]", "kind" : "final class"}, {"label" : "VecSclrElemOp", "tail" : "", "member" : "org.saddle.ops.BinOpVec.VecSclrElemOp", "link" : "org\/saddle\/ops\/BinOpVec.html#VecSclrElemOp[OP<:org.saddle.ops.ScalarOp,A,B,C]extendsBinOp[OP,org.saddle.Vec[A],B,org.saddle.Vec[C]]", "kind" : "final class"}, {"label" : "VecToBoolLogic", "tail" : "", "member" : "org.saddle.Vec.VecToBoolLogic", "link" : "org\/saddle\/Vec$.html#VecToBoolLogicextendsAnyRef", "kind" : "implicit class"}, {"label" : "empty", "tail" : "(arg0: ST[T]): Vec[T]", "member" : "org.saddle.Vec.empty", "link" : "org\/saddle\/Vec$.html#empty[T](implicitevidence$2:org.saddle.ST[T]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(values: T*)(arg0: ST[T]): Vec[T]", "member" : "org.saddle.Vec.apply", "link" : "org\/saddle\/Vec$.html#apply[T](values:T*)(implicitevidence$1:org.saddle.ST[T]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(arr: Array[T])(st: ST[T]): Vec[T]", "member" : "org.saddle.Vec.apply", "link" : "org\/saddle\/Vec$.html#apply[T](arr:Array[T])(implicitst:org.saddle.ST[T]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "VecVecOuterOpIII", "tail" : "(opM: BinOp[Multiply, Int, Int, Int]): VecVecOuter[Int, Int, Int]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpIII", "link" : "org\/saddle\/Vec$.html#VecVecOuterOpIII(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Int,Int,Int]):BinOpVec.this.VecVecOuter[Int,Int,Int]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpILL", "tail" : "(opM: BinOp[Multiply, Int, Long, Long]): VecVecOuter[Int, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpILL", "link" : "org\/saddle\/Vec$.html#VecVecOuterOpILL(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Int,Long,Long]):BinOpVec.this.VecVecOuter[Int,Long,Long]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpIDD", "tail" : "(opM: BinOp[Multiply, Int, Double, Double]): VecVecOuter[Int, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpIDD", "link" : "org\/saddle\/Vec$.html#VecVecOuterOpIDD(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Int,Double,Double]):BinOpVec.this.VecVecOuter[Int,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpLIL", "tail" : "(opM: BinOp[Multiply, Long, Int, Long]): VecVecOuter[Long, Int, Long]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpLIL", "link" : "org\/saddle\/Vec$.html#VecVecOuterOpLIL(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Long,Int,Long]):BinOpVec.this.VecVecOuter[Long,Int,Long]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpLLL", "tail" : "(opM: BinOp[Multiply, Long, Long, Long]): VecVecOuter[Long, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpLLL", "link" : "org\/saddle\/Vec$.html#VecVecOuterOpLLL(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Long,Long,Long]):BinOpVec.this.VecVecOuter[Long,Long,Long]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpLDD", "tail" : "(opM: BinOp[Multiply, Long, Double, Double]): VecVecOuter[Long, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpLDD", "link" : "org\/saddle\/Vec$.html#VecVecOuterOpLDD(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Long,Double,Double]):BinOpVec.this.VecVecOuter[Long,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpDID", "tail" : "(opM: BinOp[Multiply, Double, Int, Double]): VecVecOuter[Double, Int, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpDID", "link" : "org\/saddle\/Vec$.html#VecVecOuterOpDID(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Double,Int,Double]):BinOpVec.this.VecVecOuter[Double,Int,Double]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpDLD", "tail" : "(opM: BinOp[Multiply, Double, Long, Double]): VecVecOuter[Double, Long, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpDLD", "link" : "org\/saddle\/Vec$.html#VecVecOuterOpDLD(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Double,Long,Double]):BinOpVec.this.VecVecOuter[Double,Long,Double]", "kind" : "implicit def"}, {"label" : "VecVecOuterOpDDD", "tail" : "(opM: BinOp[Multiply, Double, Double, Double]): VecVecOuter[Double, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecOuterOpDDD", "link" : "org\/saddle\/Vec$.html#VecVecOuterOpDDD(implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Double,Double,Double]):BinOpVec.this.VecVecOuter[Double,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVecDotOpIII", "tail" : "(opA: BinOp[Add, Int, Int, Int], opM: BinOp[Multiply, Int, Int, Int]): VecVecDot[Int, Int, Int]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpIII", "link" : "org\/saddle\/Vec$.html#VecVecDotOpIII(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Int,Int,Int],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Int,Int,Int]):BinOpVec.this.VecVecDot[Int,Int,Int]", "kind" : "implicit def"}, {"label" : "VecVecDotOpILL", "tail" : "(opA: BinOp[Add, Long, Long, Long], opM: BinOp[Multiply, Int, Long, Long]): VecVecDot[Int, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpILL", "link" : "org\/saddle\/Vec$.html#VecVecDotOpILL(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Long,Long,Long],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Int,Long,Long]):BinOpVec.this.VecVecDot[Int,Long,Long]", "kind" : "implicit def"}, {"label" : "VecVecDotOpIDD", "tail" : "(opA: BinOp[Add, Double, Double, Double], opM: BinOp[Multiply, Int, Double, Double]): VecVecDot[Int, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpIDD", "link" : "org\/saddle\/Vec$.html#VecVecDotOpIDD(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Double,Double,Double],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Int,Double,Double]):BinOpVec.this.VecVecDot[Int,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVecDotOpLIL", "tail" : "(opA: BinOp[Add, Long, Long, Long], opM: BinOp[Multiply, Long, Int, Long]): VecVecDot[Long, Int, Long]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpLIL", "link" : "org\/saddle\/Vec$.html#VecVecDotOpLIL(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Long,Long,Long],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Long,Int,Long]):BinOpVec.this.VecVecDot[Long,Int,Long]", "kind" : "implicit def"}, {"label" : "VecVecDotOpLLL", "tail" : "(opA: BinOp[Add, Long, Long, Long], opM: BinOp[Multiply, Long, Long, Long]): VecVecDot[Long, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpLLL", "link" : "org\/saddle\/Vec$.html#VecVecDotOpLLL(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Long,Long,Long],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Long,Long,Long]):BinOpVec.this.VecVecDot[Long,Long,Long]", "kind" : "implicit def"}, {"label" : "VecVecDotOpLDD", "tail" : "(opA: BinOp[Add, Double, Double, Double], opM: BinOp[Multiply, Long, Double, Double]): VecVecDot[Long, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpLDD", "link" : "org\/saddle\/Vec$.html#VecVecDotOpLDD(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Double,Double,Double],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Long,Double,Double]):BinOpVec.this.VecVecDot[Long,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVecDotOpDID", "tail" : "(opA: BinOp[Add, Double, Double, Double], opM: BinOp[Multiply, Double, Int, Double]): VecVecDot[Double, Int, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpDID", "link" : "org\/saddle\/Vec$.html#VecVecDotOpDID(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Double,Double,Double],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Double,Int,Double]):BinOpVec.this.VecVecDot[Double,Int,Double]", "kind" : "implicit def"}, {"label" : "VecVecDotOpDLD", "tail" : "(opA: BinOp[Add, Double, Double, Double], opM: BinOp[Multiply, Double, Long, Double]): VecVecDot[Double, Long, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpDLD", "link" : "org\/saddle\/Vec$.html#VecVecDotOpDLD(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Double,Double,Double],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Double,Long,Double]):BinOpVec.this.VecVecDot[Double,Long,Double]", "kind" : "implicit def"}, {"label" : "VecVecDotOpDDD", "tail" : "(opA: BinOp[Add, Double, Double, Double], opM: BinOp[Multiply, Double, Double, Double]): VecVecDot[Double, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVecDotOpDDD", "link" : "org\/saddle\/Vec$.html#VecVecDotOpDDD(implicitopA:org.saddle.ops.BinOp[org.saddle.ops.Add,Double,Double,Double],implicitopM:org.saddle.ops.BinOp[org.saddle.ops.Multiply,Double,Double,Double]):BinOpVec.this.VecVecDot[Double,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVecElemOpBBB", "tail" : "(op: BinOp[Op, Boolean, Boolean, Boolean]): VecVecElemOp[Op, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpBBB", "link" : "org\/saddle\/Vec$.html#VecVecElemOpBBB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Boolean,Boolean,Boolean]):BinOpVec.this.VecVecElemOp[Op,Boolean,Boolean,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpIIB", "tail" : "(op: BinOp[Op, Int, Int, Boolean]): VecVecElemOp[Op, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpIIB", "link" : "org\/saddle\/Vec$.html#VecVecElemOpIIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Boolean]):BinOpVec.this.VecVecElemOp[Op,Int,Int,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpILB", "tail" : "(op: BinOp[Op, Int, Long, Boolean]): VecVecElemOp[Op, Int, Long, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpILB", "link" : "org\/saddle\/Vec$.html#VecVecElemOpILB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Long,Boolean]):BinOpVec.this.VecVecElemOp[Op,Int,Long,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpIDB", "tail" : "(op: BinOp[Op, Int, Double, Boolean]): VecVecElemOp[Op, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpIDB", "link" : "org\/saddle\/Vec$.html#VecVecElemOpIDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Double,Boolean]):BinOpVec.this.VecVecElemOp[Op,Int,Double,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpLIB", "tail" : "(op: BinOp[Op, Long, Int, Boolean]): VecVecElemOp[Op, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpLIB", "link" : "org\/saddle\/Vec$.html#VecVecElemOpLIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Boolean]):BinOpVec.this.VecVecElemOp[Op,Long,Int,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpLLB", "tail" : "(op: BinOp[Op, Long, Long, Boolean]): VecVecElemOp[Op, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpLLB", "link" : "org\/saddle\/Vec$.html#VecVecElemOpLLB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Boolean]):BinOpVec.this.VecVecElemOp[Op,Long,Long,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpLDB", "tail" : "(op: BinOp[Op, Long, Double, Boolean]): VecVecElemOp[Op, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpLDB", "link" : "org\/saddle\/Vec$.html#VecVecElemOpLDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Double,Boolean]):BinOpVec.this.VecVecElemOp[Op,Long,Double,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpDIB", "tail" : "(op: BinOp[Op, Double, Int, Boolean]): VecVecElemOp[Op, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpDIB", "link" : "org\/saddle\/Vec$.html#VecVecElemOpDIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Boolean]):BinOpVec.this.VecVecElemOp[Op,Double,Int,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpDLB", "tail" : "(op: BinOp[Op, Double, Long, Boolean]): VecVecElemOp[Op, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpDLB", "link" : "org\/saddle\/Vec$.html#VecVecElemOpDLB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Boolean]):BinOpVec.this.VecVecElemOp[Op,Double,Long,Boolean]", "kind" : "implicit def"}, {"label" : "VecVecElemOpDDB", "tail" : "(op: BinOp[Op, Double, Double, Boolean]): VecVecElemOp[Op, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecVecElemOpDDB", "link" : "org\/saddle\/Vec$.html#VecVecElemOpDDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Boolean]):BinOpVec.this.VecVecElemOp[Op,Double,Double,Boolean]", "kind" : "implicit def"}, {"label" : "VecVelElemOpIII", "tail" : "(op: BinOp[Op, Int, Int, Int]): VecVecElemOp[Op, Int, Int, Int]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpIII", "link" : "org\/saddle\/Vec$.html#VecVelElemOpIII[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Int]):BinOpVec.this.VecVecElemOp[Op,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "VecVelElemOpILL", "tail" : "(op: BinOp[Op, Int, Long, Long]): VecVecElemOp[Op, Int, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpILL", "link" : "org\/saddle\/Vec$.html#VecVelElemOpILL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Long,Long]):BinOpVec.this.VecVecElemOp[Op,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "VecVelElemOpIDD", "tail" : "(op: BinOp[Op, Int, Double, Double]): VecVecElemOp[Op, Int, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpIDD", "link" : "org\/saddle\/Vec$.html#VecVelElemOpIDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Double,Double]):BinOpVec.this.VecVecElemOp[Op,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVelElemOpLIL", "tail" : "(op: BinOp[Op, Long, Int, Long]): VecVecElemOp[Op, Long, Int, Long]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpLIL", "link" : "org\/saddle\/Vec$.html#VecVelElemOpLIL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Long]):BinOpVec.this.VecVecElemOp[Op,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "VecVelElemOpLLL", "tail" : "(op: BinOp[Op, Long, Long, Long]): VecVecElemOp[Op, Long, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpLLL", "link" : "org\/saddle\/Vec$.html#VecVelElemOpLLL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Long]):BinOpVec.this.VecVecElemOp[Op,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "VecVelElemOpLDD", "tail" : "(op: BinOp[Op, Long, Double, Double]): VecVecElemOp[Op, Long, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpLDD", "link" : "org\/saddle\/Vec$.html#VecVelElemOpLDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Double,Double]):BinOpVec.this.VecVecElemOp[Op,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "VecVelElemOpDID", "tail" : "(op: BinOp[Op, Double, Int, Double]): VecVecElemOp[Op, Double, Int, Double]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpDID", "link" : "org\/saddle\/Vec$.html#VecVelElemOpDID[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Double]):BinOpVec.this.VecVecElemOp[Op,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "VecVelElemOpDLD", "tail" : "(op: BinOp[Op, Double, Long, Double]): VecVecElemOp[Op, Double, Long, Double]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpDLD", "link" : "org\/saddle\/Vec$.html#VecVelElemOpDLD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Double]):BinOpVec.this.VecVecElemOp[Op,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "VecVelElemOpDDD", "tail" : "(op: BinOp[Op, Double, Double, Double]): VecVecElemOp[Op, Double, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecVelElemOpDDD", "link" : "org\/saddle\/Vec$.html#VecVelElemOpDDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Double]):BinOpVec.this.VecVecElemOp[Op,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpBBB", "tail" : "(op: BinOp[Op, Boolean, Boolean, Boolean]): VecSclrElemOp[Op, Boolean, Boolean, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpBBB", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpBBB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Boolean,Boolean,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Boolean,Boolean,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpIIB", "tail" : "(op: BinOp[Op, Int, Int, Boolean]): VecSclrElemOp[Op, Int, Int, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpIIB", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpIIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Int,Int,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpILB", "tail" : "(op: BinOp[Op, Int, Long, Boolean]): VecSclrElemOp[Op, Int, Long, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpILB", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpILB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Long,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Int,Long,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpIDB", "tail" : "(op: BinOp[Op, Int, Double, Boolean]): VecSclrElemOp[Op, Int, Double, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpIDB", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpIDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Double,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Int,Double,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpLIB", "tail" : "(op: BinOp[Op, Long, Int, Boolean]): VecSclrElemOp[Op, Long, Int, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpLIB", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpLIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Long,Int,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpLLB", "tail" : "(op: BinOp[Op, Long, Long, Boolean]): VecSclrElemOp[Op, Long, Long, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpLLB", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpLLB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Long,Long,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpLDB", "tail" : "(op: BinOp[Op, Long, Double, Boolean]): VecSclrElemOp[Op, Long, Double, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpLDB", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpLDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Double,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Long,Double,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpDIB", "tail" : "(op: BinOp[Op, Double, Int, Boolean]): VecSclrElemOp[Op, Double, Int, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpDIB", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpDIB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Double,Int,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpDLB", "tail" : "(op: BinOp[Op, Double, Long, Boolean]): VecSclrElemOp[Op, Double, Long, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpDLB", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpDLB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Double,Long,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpDDB", "tail" : "(op: BinOp[Op, Double, Double, Boolean]): VecSclrElemOp[Op, Double, Double, Boolean]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpDDB", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpDDB[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Boolean]):BinOpVec.this.VecSclrElemOp[Op,Double,Double,Boolean]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpIII", "tail" : "(op: BinOp[Op, Int, Int, Int]): VecSclrElemOp[Op, Int, Int, Int]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpIII", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpIII[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Int,Int]):BinOpVec.this.VecSclrElemOp[Op,Int,Int,Int]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpILL", "tail" : "(op: BinOp[Op, Int, Long, Long]): VecSclrElemOp[Op, Int, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpILL", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpILL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Long,Long]):BinOpVec.this.VecSclrElemOp[Op,Int,Long,Long]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpIDD", "tail" : "(op: BinOp[Op, Int, Double, Double]): VecSclrElemOp[Op, Int, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpIDD", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpIDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Int,Double,Double]):BinOpVec.this.VecSclrElemOp[Op,Int,Double,Double]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpLIL", "tail" : "(op: BinOp[Op, Long, Int, Long]): VecSclrElemOp[Op, Long, Int, Long]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpLIL", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpLIL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Int,Long]):BinOpVec.this.VecSclrElemOp[Op,Long,Int,Long]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpLLL", "tail" : "(op: BinOp[Op, Long, Long, Long]): VecSclrElemOp[Op, Long, Long, Long]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpLLL", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpLLL[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Long,Long]):BinOpVec.this.VecSclrElemOp[Op,Long,Long,Long]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpLDD", "tail" : "(op: BinOp[Op, Long, Double, Double]): VecSclrElemOp[Op, Long, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpLDD", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpLDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Long,Double,Double]):BinOpVec.this.VecSclrElemOp[Op,Long,Double,Double]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpDID", "tail" : "(op: BinOp[Op, Double, Int, Double]): VecSclrElemOp[Op, Double, Int, Double]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpDID", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpDID[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Int,Double]):BinOpVec.this.VecSclrElemOp[Op,Double,Int,Double]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpDLD", "tail" : "(op: BinOp[Op, Double, Long, Double]): VecSclrElemOp[Op, Double, Long, Double]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpDLD", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpDLD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Long,Double]):BinOpVec.this.VecSclrElemOp[Op,Double,Long,Double]", "kind" : "implicit def"}, {"label" : "VecSclrElmOpDDD", "tail" : "(op: BinOp[Op, Double, Double, Double]): VecSclrElemOp[Op, Double, Double, Double]", "member" : "org.saddle.ops.BinOpVec.VecSclrElmOpDDD", "link" : "org\/saddle\/Vec$.html#VecSclrElmOpDDD[Op<:org.saddle.ops.ScalarOp](implicitop:org.saddle.ops.BinOp[Op,Double,Double,Double]):BinOpVec.this.VecSclrElemOp[Op,Double,Double,Double]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/Vec$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/Vec$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/Vec$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/Vec$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/Vec$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/Vec$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/Vec$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Vec$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Vec$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/Vec$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/Vec$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/Vec$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/Vec$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/Vec$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/Vec$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/Vec$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/Vec$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/Vec$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/Vec$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/saddle\/Vec.html", "kind" : "trait"}], "org.saddle.stats" : [{"name" : "org.saddle.stats.DoubleExpandingStats", "shortDescription" : "", "members_class" : [{"label" : "cumProd", "tail" : "(): Vec[Double]", "member" : "org.saddle.stats.DoubleExpandingStats.cumProd", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#cumProd:org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "cumMax", "tail" : "(): Vec[Double]", "member" : "org.saddle.stats.DoubleExpandingStats.cumMax", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#cumMax:org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "cumMin", "tail" : "(): Vec[Double]", "member" : "org.saddle.stats.DoubleExpandingStats.cumMin", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#cumMin:org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "cumCount", "tail" : "(): Vec[Int]", "member" : "org.saddle.stats.DoubleExpandingStats.cumCount", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#cumCount:org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "cumSum", "tail" : "(): Vec[Double]", "member" : "org.saddle.stats.DoubleExpandingStats.cumSum", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#cumSum:org.saddle.Vec[Double]", "kind" : "def"}, {"member" : "org.saddle.stats.DoubleExpandingStats#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/DoubleExpandingStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/stats\/DoubleExpandingStats.html", "kind" : "class"}, {"name" : "org.saddle.stats.DoubleStats", "shortDescription" : "", "members_class" : [{"label" : "argmax", "tail" : "(): Int", "member" : "org.saddle.stats.DoubleStats.argmax", "link" : "org\/saddle\/stats\/DoubleStats.html#argmax:Int", "kind" : "def"}, {"label" : "argmin", "tail" : "(): Int", "member" : "org.saddle.stats.DoubleStats.argmin", "link" : "org\/saddle\/stats\/DoubleStats.html#argmin:Int", "kind" : "def"}, {"label" : "rank", "tail" : "(tie: RankTie, ascending: Boolean): Vec[Double]", "member" : "org.saddle.stats.DoubleStats.rank", "link" : "org\/saddle\/stats\/DoubleStats.html#rank(tie:org.saddle.RankTie,ascending:Boolean):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "demeaned", "tail" : "(): Vec[Double]", "member" : "org.saddle.stats.DoubleStats.demeaned", "link" : "org\/saddle\/stats\/DoubleStats.html#demeaned:org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "percentile", "tail" : "(tile: Double, method: PctMethod): Double", "member" : "org.saddle.stats.DoubleStats.percentile", "link" : "org\/saddle\/stats\/DoubleStats.html#percentile(tile:Double,method:org.saddle.PctMethod):Double", "kind" : "def"}, {"label" : "kurt", "tail" : "(): Double", "member" : "org.saddle.stats.DoubleStats.kurt", "link" : "org\/saddle\/stats\/DoubleStats.html#kurt:Double", "kind" : "def"}, {"label" : "skew", "tail" : "(): Double", "member" : "org.saddle.stats.DoubleStats.skew", "link" : "org\/saddle\/stats\/DoubleStats.html#skew:Double", "kind" : "def"}, {"label" : "variance", "tail" : "(): Double", "member" : "org.saddle.stats.DoubleStats.variance", "link" : "org\/saddle\/stats\/DoubleStats.html#variance:Double", "kind" : "def"}, {"label" : "geomean", "tail" : "(): Double", "member" : "org.saddle.stats.DoubleStats.geomean", "link" : "org\/saddle\/stats\/DoubleStats.html#geomean:Double", "kind" : "def"}, {"label" : "median", "tail" : "(): Double", "member" : "org.saddle.stats.DoubleStats.median", "link" : "org\/saddle\/stats\/DoubleStats.html#median:Double", "kind" : "def"}, {"label" : "mean", "tail" : "(): Double", "member" : "org.saddle.stats.DoubleStats.mean", "link" : "org\/saddle\/stats\/DoubleStats.html#mean:Double", "kind" : "def"}, {"label" : "logsum", "tail" : "(): Double", "member" : "org.saddle.stats.DoubleStats.logsum", "link" : "org\/saddle\/stats\/DoubleStats.html#logsum:Double", "kind" : "def"}, {"label" : "countif", "tail" : "(test: (Double) ⇒ Boolean): Int", "member" : "org.saddle.stats.DoubleStats.countif", "link" : "org\/saddle\/stats\/DoubleStats.html#countif(test:Double=>Boolean):Int", "kind" : "def"}, {"label" : "prod", "tail" : "(): Double", "member" : "org.saddle.stats.DoubleStats.prod", "link" : "org\/saddle\/stats\/DoubleStats.html#prod:Double", "kind" : "def"}, {"label" : "max", "tail" : "(): Option[Double]", "member" : "org.saddle.stats.DoubleStats.max", "link" : "org\/saddle\/stats\/DoubleStats.html#max:Option[Double]", "kind" : "def"}, {"label" : "min", "tail" : "(): Option[Double]", "member" : "org.saddle.stats.DoubleStats.min", "link" : "org\/saddle\/stats\/DoubleStats.html#min:Option[Double]", "kind" : "def"}, {"label" : "count", "tail" : "(): Int", "member" : "org.saddle.stats.DoubleStats.count", "link" : "org\/saddle\/stats\/DoubleStats.html#count:Int", "kind" : "def"}, {"label" : "sum", "tail" : "(): Double", "member" : "org.saddle.stats.DoubleStats.sum", "link" : "org\/saddle\/stats\/DoubleStats.html#sum:Double", "kind" : "def"}, {"label" : "sd", "tail" : ": ScalarTagDouble.type", "member" : "org.saddle.stats.DoubleStats.sd", "link" : "org\/saddle\/stats\/DoubleStats.html#sd:org.saddle.scalar.ScalarTagDouble.type", "kind" : "val"}, {"member" : "org.saddle.stats.DoubleStats#<init>", "error" : "unsupported entity"}, {"label" : "_percentile", "tail" : "(v: Vec[Double], tile: Double, method: PctMethod): Double", "member" : "org.saddle.stats.VecStats._percentile", "link" : "org\/saddle\/stats\/DoubleStats.html#_percentile(v:org.saddle.Vec[Double],tile:Double,method:org.saddle.PctMethod):Double", "kind" : "def"}, {"label" : "_rank", "tail" : "(v: Array[Double], tie: RankTie, ascending: Boolean): Vec[Double]", "member" : "org.saddle.stats.VecStats._rank", "link" : "org\/saddle\/stats\/DoubleStats.html#_rank(v:Array[Double],tie:org.saddle.RankTie,ascending:Boolean):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "_median", "tail" : "(r: Vec[Double])(n: NUM[Double]): Double", "member" : "org.saddle.stats.VecStats._median", "link" : "org\/saddle\/stats\/DoubleStats.html#_median(r:org.saddle.Vec[A])(implicitn:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "_demeaned", "tail" : "(r: Vec[Double], subOp: (Double, Double) ⇒ Double)(num: NUM[Double]): Vec[Double]", "member" : "org.saddle.stats.VecStats._demeaned", "link" : "org\/saddle\/stats\/DoubleStats.html#_demeaned(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "_kurt", "tail" : "(r: Vec[Double], subOp: (Double, Double) ⇒ Double)(num: NUM[Double]): Double", "member" : "org.saddle.stats.VecStats._kurt", "link" : "org\/saddle\/stats\/DoubleStats.html#_kurt(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "_skew", "tail" : "(r: Vec[Double], subOp: (Double, Double) ⇒ Double)(num: NUM[Double]): Double", "member" : "org.saddle.stats.VecStats._skew", "link" : "org\/saddle\/stats\/DoubleStats.html#_skew(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "_variance", "tail" : "(r: Vec[Double], subOp: (Double, Double) ⇒ Double)(num: NUM[Double]): Double", "member" : "org.saddle.stats.VecStats._variance", "link" : "org\/saddle\/stats\/DoubleStats.html#_variance(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "stdev", "tail" : "(): Double", "member" : "org.saddle.stats.VecStats.stdev", "link" : "org\/saddle\/stats\/DoubleStats.html#stdev:Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/DoubleStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/DoubleStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/DoubleStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/DoubleStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/DoubleStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/DoubleStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/DoubleStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/DoubleStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/DoubleStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/DoubleStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/DoubleStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/DoubleStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/DoubleStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/DoubleStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/DoubleStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/DoubleStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/DoubleStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/DoubleStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/DoubleStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/stats\/DoubleStats.html", "kind" : "class"}, {"name" : "org.saddle.stats.FrameStats", "shortDescription" : "Statistical methods made available to operate on columns of a Frame via enrichment.", "members_class" : [{"label" : "cumMax", "tail" : "(ev: V2ExpandingStats): Frame[RX, CX, T]", "member" : "org.saddle.stats.FrameStats.cumMax", "link" : "org\/saddle\/stats\/FrameStats.html#cumMax(implicitev:FrameStats.this.V2ExpandingStats):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "cumMin", "tail" : "(ev: V2ExpandingStats): Frame[RX, CX, T]", "member" : "org.saddle.stats.FrameStats.cumMin", "link" : "org\/saddle\/stats\/FrameStats.html#cumMin(implicitev:FrameStats.this.V2ExpandingStats):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "cumProd", "tail" : "(ev: V2ExpandingStats): Frame[RX, CX, T]", "member" : "org.saddle.stats.FrameStats.cumProd", "link" : "org\/saddle\/stats\/FrameStats.html#cumProd(implicitev:FrameStats.this.V2ExpandingStats):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "cumSum", "tail" : "(ev: V2ExpandingStats): Frame[RX, CX, T]", "member" : "org.saddle.stats.FrameStats.cumSum", "link" : "org\/saddle\/stats\/FrameStats.html#cumSum(implicitev:FrameStats.this.V2ExpandingStats):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "cumCount", "tail" : "(ev: V2ExpandingStats): Frame[RX, CX, Int]", "member" : "org.saddle.stats.FrameStats.cumCount", "link" : "org\/saddle\/stats\/FrameStats.html#cumCount(implicitev:FrameStats.this.V2ExpandingStats):org.saddle.Frame[RX,CX,Int]", "kind" : "def"}, {"label" : "rollingMedian", "tail" : "(winSz: Int)(ev: V2RollingStats): Frame[RX, CX, Double]", "member" : "org.saddle.stats.FrameStats.rollingMedian", "link" : "org\/saddle\/stats\/FrameStats.html#rollingMedian(winSz:Int)(implicitev:FrameStats.this.V2RollingStats):org.saddle.Frame[RX,CX,Double]", "kind" : "def"}, {"label" : "rollingMean", "tail" : "(winSz: Int)(ev: V2RollingStats): Frame[RX, CX, Double]", "member" : "org.saddle.stats.FrameStats.rollingMean", "link" : "org\/saddle\/stats\/FrameStats.html#rollingMean(winSz:Int)(implicitev:FrameStats.this.V2RollingStats):org.saddle.Frame[RX,CX,Double]", "kind" : "def"}, {"label" : "rollingSum", "tail" : "(winSz: Int)(ev: V2RollingStats): Frame[RX, CX, T]", "member" : "org.saddle.stats.FrameStats.rollingSum", "link" : "org\/saddle\/stats\/FrameStats.html#rollingSum(winSz:Int)(implicitev:FrameStats.this.V2RollingStats):org.saddle.Frame[RX,CX,T]", "kind" : "def"}, {"label" : "rollingCount", "tail" : "(winSz: Int)(ev: V2RollingStats): Frame[RX, CX, Int]", "member" : "org.saddle.stats.FrameStats.rollingCount", "link" : "org\/saddle\/stats\/FrameStats.html#rollingCount(winSz:Int)(implicitev:FrameStats.this.V2RollingStats):org.saddle.Frame[RX,CX,Int]", "kind" : "def"}, {"label" : "demeaned", "tail" : "(ev: V2Stats): Frame[RX, CX, Double]", "member" : "org.saddle.stats.FrameStats.demeaned", "link" : "org\/saddle\/stats\/FrameStats.html#demeaned(implicitev:FrameStats.this.V2Stats):org.saddle.Frame[RX,CX,Double]", "kind" : "def"}, {"label" : "kurt", "tail" : "(ev: S2Stats): Series[CX, Double]", "member" : "org.saddle.stats.FrameStats.kurt", "link" : "org\/saddle\/stats\/FrameStats.html#kurt(implicitev:FrameStats.this.S2Stats):org.saddle.Series[CX,Double]", "kind" : "def"}, {"label" : "skew", "tail" : "(ev: S2Stats): Series[CX, Double]", "member" : "org.saddle.stats.FrameStats.skew", "link" : "org\/saddle\/stats\/FrameStats.html#skew(implicitev:FrameStats.this.S2Stats):org.saddle.Series[CX,Double]", "kind" : "def"}, {"label" : "stdev", "tail" : "(ev: S2Stats): Series[CX, Double]", "member" : "org.saddle.stats.FrameStats.stdev", "link" : "org\/saddle\/stats\/FrameStats.html#stdev(implicitev:FrameStats.this.S2Stats):org.saddle.Series[CX,Double]", "kind" : "def"}, {"label" : "variance", "tail" : "(ev: S2Stats): Series[CX, Double]", "member" : "org.saddle.stats.FrameStats.variance", "link" : "org\/saddle\/stats\/FrameStats.html#variance(implicitev:FrameStats.this.S2Stats):org.saddle.Series[CX,Double]", "kind" : "def"}, {"label" : "geomean", "tail" : "(ev: S2Stats): Series[CX, Double]", "member" : "org.saddle.stats.FrameStats.geomean", "link" : "org\/saddle\/stats\/FrameStats.html#geomean(implicitev:FrameStats.this.S2Stats):org.saddle.Series[CX,Double]", "kind" : "def"}, {"label" : "logsum", "tail" : "(ev: S2Stats): Series[CX, Double]", "member" : "org.saddle.stats.FrameStats.logsum", "link" : "org\/saddle\/stats\/FrameStats.html#logsum(implicitev:FrameStats.this.S2Stats):org.saddle.Series[CX,Double]", "kind" : "def"}, {"label" : "countif", "tail" : "(test: (T) ⇒ Boolean): Series[CX, Int]", "member" : "org.saddle.stats.FrameStats.countif", "link" : "org\/saddle\/stats\/FrameStats.html#countif(test:T=>Boolean):org.saddle.Series[CX,Int]", "kind" : "def"}, {"label" : "S2Stats", "tail" : "", "member" : "org.saddle.stats.FrameStats.S2Stats", "link" : "org\/saddle\/stats\/FrameStats.html#S2Stats=org.saddle.stats.Series2Stats[T]", "kind" : "type"}, {"member" : "org.saddle.stats.FrameStats#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/FrameStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/FrameStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/FrameStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/FrameStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/FrameStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/FrameStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/FrameStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/FrameStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/FrameStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/FrameStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/FrameStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/FrameStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/FrameStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/FrameStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/FrameStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/FrameStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/FrameStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/FrameStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/FrameStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/stats\/FrameStats.html", "kind" : "class"}, {"name" : "org.saddle.stats.IntExpandingStats", "shortDescription" : "", "members_class" : [{"label" : "cumProd", "tail" : "(): Vec[Int]", "member" : "org.saddle.stats.IntExpandingStats.cumProd", "link" : "org\/saddle\/stats\/IntExpandingStats.html#cumProd:org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "cumMax", "tail" : "(): Vec[Int]", "member" : "org.saddle.stats.IntExpandingStats.cumMax", "link" : "org\/saddle\/stats\/IntExpandingStats.html#cumMax:org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "cumMin", "tail" : "(): Vec[Int]", "member" : "org.saddle.stats.IntExpandingStats.cumMin", "link" : "org\/saddle\/stats\/IntExpandingStats.html#cumMin:org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "cumCount", "tail" : "(): Vec[Int]", "member" : "org.saddle.stats.IntExpandingStats.cumCount", "link" : "org\/saddle\/stats\/IntExpandingStats.html#cumCount:org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "cumSum", "tail" : "(): Vec[Int]", "member" : "org.saddle.stats.IntExpandingStats.cumSum", "link" : "org\/saddle\/stats\/IntExpandingStats.html#cumSum:org.saddle.Vec[Int]", "kind" : "def"}, {"member" : "org.saddle.stats.IntExpandingStats#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/IntExpandingStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/IntExpandingStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/IntExpandingStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/IntExpandingStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/IntExpandingStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/IntExpandingStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/IntExpandingStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/IntExpandingStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/IntExpandingStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/IntExpandingStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/IntExpandingStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/IntExpandingStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/IntExpandingStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/IntExpandingStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/IntExpandingStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/IntExpandingStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/IntExpandingStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/IntExpandingStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/IntExpandingStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/stats\/IntExpandingStats.html", "kind" : "class"}, {"name" : "org.saddle.stats.IntStats", "shortDescription" : "", "members_class" : [{"label" : "argmax", "tail" : "(): Int", "member" : "org.saddle.stats.IntStats.argmax", "link" : "org\/saddle\/stats\/IntStats.html#argmax:Int", "kind" : "def"}, {"label" : "argmin", "tail" : "(): Int", "member" : "org.saddle.stats.IntStats.argmin", "link" : "org\/saddle\/stats\/IntStats.html#argmin:Int", "kind" : "def"}, {"label" : "rank", "tail" : "(tie: RankTie, ascending: Boolean): Vec[Double]", "member" : "org.saddle.stats.IntStats.rank", "link" : "org\/saddle\/stats\/IntStats.html#rank(tie:org.saddle.RankTie,ascending:Boolean):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "demeaned", "tail" : "(): Vec[Double]", "member" : "org.saddle.stats.IntStats.demeaned", "link" : "org\/saddle\/stats\/IntStats.html#demeaned:org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "percentile", "tail" : "(tile: Double, method: PctMethod): Double", "member" : "org.saddle.stats.IntStats.percentile", "link" : "org\/saddle\/stats\/IntStats.html#percentile(tile:Double,method:org.saddle.PctMethod):Double", "kind" : "def"}, {"label" : "kurt", "tail" : "(): Double", "member" : "org.saddle.stats.IntStats.kurt", "link" : "org\/saddle\/stats\/IntStats.html#kurt:Double", "kind" : "def"}, {"label" : "skew", "tail" : "(): Double", "member" : "org.saddle.stats.IntStats.skew", "link" : "org\/saddle\/stats\/IntStats.html#skew:Double", "kind" : "def"}, {"label" : "variance", "tail" : "(): Double", "member" : "org.saddle.stats.IntStats.variance", "link" : "org\/saddle\/stats\/IntStats.html#variance:Double", "kind" : "def"}, {"label" : "geomean", "tail" : "(): Double", "member" : "org.saddle.stats.IntStats.geomean", "link" : "org\/saddle\/stats\/IntStats.html#geomean:Double", "kind" : "def"}, {"label" : "median", "tail" : "(): Double", "member" : "org.saddle.stats.IntStats.median", "link" : "org\/saddle\/stats\/IntStats.html#median:Double", "kind" : "def"}, {"label" : "mean", "tail" : "(): Double", "member" : "org.saddle.stats.IntStats.mean", "link" : "org\/saddle\/stats\/IntStats.html#mean:Double", "kind" : "def"}, {"label" : "logsum", "tail" : "(): Double", "member" : "org.saddle.stats.IntStats.logsum", "link" : "org\/saddle\/stats\/IntStats.html#logsum:Double", "kind" : "def"}, {"label" : "countif", "tail" : "(test: (Int) ⇒ Boolean): Int", "member" : "org.saddle.stats.IntStats.countif", "link" : "org\/saddle\/stats\/IntStats.html#countif(test:Int=>Boolean):Int", "kind" : "def"}, {"label" : "prod", "tail" : "(): Int", "member" : "org.saddle.stats.IntStats.prod", "link" : "org\/saddle\/stats\/IntStats.html#prod:Int", "kind" : "def"}, {"label" : "count", "tail" : "(): Int", "member" : "org.saddle.stats.IntStats.count", "link" : "org\/saddle\/stats\/IntStats.html#count:Int", "kind" : "def"}, {"label" : "sum", "tail" : "(): Int", "member" : "org.saddle.stats.IntStats.sum", "link" : "org\/saddle\/stats\/IntStats.html#sum:Int", "kind" : "def"}, {"label" : "max", "tail" : "(): Option[Int]", "member" : "org.saddle.stats.IntStats.max", "link" : "org\/saddle\/stats\/IntStats.html#max:Option[Int]", "kind" : "def"}, {"label" : "min", "tail" : "(): Option[Int]", "member" : "org.saddle.stats.IntStats.min", "link" : "org\/saddle\/stats\/IntStats.html#min:Option[Int]", "kind" : "def"}, {"label" : "si", "tail" : ": ScalarTagInt.type", "member" : "org.saddle.stats.IntStats.si", "link" : "org\/saddle\/stats\/IntStats.html#si:org.saddle.scalar.ScalarTagInt.type", "kind" : "val"}, {"member" : "org.saddle.stats.IntStats#<init>", "error" : "unsupported entity"}, {"label" : "_percentile", "tail" : "(v: Vec[Double], tile: Double, method: PctMethod): Double", "member" : "org.saddle.stats.VecStats._percentile", "link" : "org\/saddle\/stats\/IntStats.html#_percentile(v:org.saddle.Vec[Double],tile:Double,method:org.saddle.PctMethod):Double", "kind" : "def"}, {"label" : "_rank", "tail" : "(v: Array[Double], tie: RankTie, ascending: Boolean): Vec[Double]", "member" : "org.saddle.stats.VecStats._rank", "link" : "org\/saddle\/stats\/IntStats.html#_rank(v:Array[Double],tie:org.saddle.RankTie,ascending:Boolean):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "_median", "tail" : "(r: Vec[Int])(n: NUM[Int]): Double", "member" : "org.saddle.stats.VecStats._median", "link" : "org\/saddle\/stats\/IntStats.html#_median(r:org.saddle.Vec[A])(implicitn:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "_demeaned", "tail" : "(r: Vec[Int], subOp: (Int, Double) ⇒ Double)(num: NUM[Int]): Vec[Double]", "member" : "org.saddle.stats.VecStats._demeaned", "link" : "org\/saddle\/stats\/IntStats.html#_demeaned(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "_kurt", "tail" : "(r: Vec[Int], subOp: (Int, Double) ⇒ Double)(num: NUM[Int]): Double", "member" : "org.saddle.stats.VecStats._kurt", "link" : "org\/saddle\/stats\/IntStats.html#_kurt(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "_skew", "tail" : "(r: Vec[Int], subOp: (Int, Double) ⇒ Double)(num: NUM[Int]): Double", "member" : "org.saddle.stats.VecStats._skew", "link" : "org\/saddle\/stats\/IntStats.html#_skew(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "_variance", "tail" : "(r: Vec[Int], subOp: (Int, Double) ⇒ Double)(num: NUM[Int]): Double", "member" : "org.saddle.stats.VecStats._variance", "link" : "org\/saddle\/stats\/IntStats.html#_variance(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "stdev", "tail" : "(): Double", "member" : "org.saddle.stats.VecStats.stdev", "link" : "org\/saddle\/stats\/IntStats.html#stdev:Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/IntStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/IntStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/IntStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/IntStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/IntStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/IntStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/IntStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/IntStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/IntStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/IntStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/IntStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/IntStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/IntStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/IntStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/IntStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/IntStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/IntStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/IntStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/IntStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/stats\/IntStats.html", "kind" : "class"}, {"name" : "org.saddle.stats.LongExpandingStats", "shortDescription" : "", "members_class" : [{"label" : "cumProd", "tail" : "(): Vec[Long]", "member" : "org.saddle.stats.LongExpandingStats.cumProd", "link" : "org\/saddle\/stats\/LongExpandingStats.html#cumProd:org.saddle.Vec[Long]", "kind" : "def"}, {"label" : "cumMax", "tail" : "(): Vec[Long]", "member" : "org.saddle.stats.LongExpandingStats.cumMax", "link" : "org\/saddle\/stats\/LongExpandingStats.html#cumMax:org.saddle.Vec[Long]", "kind" : "def"}, {"label" : "cumMin", "tail" : "(): Vec[Long]", "member" : "org.saddle.stats.LongExpandingStats.cumMin", "link" : "org\/saddle\/stats\/LongExpandingStats.html#cumMin:org.saddle.Vec[Long]", "kind" : "def"}, {"label" : "cumCount", "tail" : "(): Vec[Int]", "member" : "org.saddle.stats.LongExpandingStats.cumCount", "link" : "org\/saddle\/stats\/LongExpandingStats.html#cumCount:org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "cumSum", "tail" : "(): Vec[Long]", "member" : "org.saddle.stats.LongExpandingStats.cumSum", "link" : "org\/saddle\/stats\/LongExpandingStats.html#cumSum:org.saddle.Vec[Long]", "kind" : "def"}, {"member" : "org.saddle.stats.LongExpandingStats#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/LongExpandingStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/LongExpandingStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/LongExpandingStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/LongExpandingStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/LongExpandingStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/LongExpandingStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/LongExpandingStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/LongExpandingStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/LongExpandingStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/LongExpandingStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/LongExpandingStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/LongExpandingStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/LongExpandingStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/LongExpandingStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/LongExpandingStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/LongExpandingStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/LongExpandingStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/LongExpandingStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/LongExpandingStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/stats\/LongExpandingStats.html", "kind" : "class"}, {"name" : "org.saddle.stats.LongStats", "shortDescription" : "", "members_class" : [{"label" : "argmax", "tail" : "(): Int", "member" : "org.saddle.stats.LongStats.argmax", "link" : "org\/saddle\/stats\/LongStats.html#argmax:Int", "kind" : "def"}, {"label" : "argmin", "tail" : "(): Int", "member" : "org.saddle.stats.LongStats.argmin", "link" : "org\/saddle\/stats\/LongStats.html#argmin:Int", "kind" : "def"}, {"label" : "rank", "tail" : "(tie: RankTie, ascending: Boolean): Vec[Double]", "member" : "org.saddle.stats.LongStats.rank", "link" : "org\/saddle\/stats\/LongStats.html#rank(tie:org.saddle.RankTie,ascending:Boolean):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "demeaned", "tail" : "(): Vec[Double]", "member" : "org.saddle.stats.LongStats.demeaned", "link" : "org\/saddle\/stats\/LongStats.html#demeaned:org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "percentile", "tail" : "(tile: Double, method: PctMethod): Double", "member" : "org.saddle.stats.LongStats.percentile", "link" : "org\/saddle\/stats\/LongStats.html#percentile(tile:Double,method:org.saddle.PctMethod):Double", "kind" : "def"}, {"label" : "kurt", "tail" : "(): Double", "member" : "org.saddle.stats.LongStats.kurt", "link" : "org\/saddle\/stats\/LongStats.html#kurt:Double", "kind" : "def"}, {"label" : "skew", "tail" : "(): Double", "member" : "org.saddle.stats.LongStats.skew", "link" : "org\/saddle\/stats\/LongStats.html#skew:Double", "kind" : "def"}, {"label" : "variance", "tail" : "(): Double", "member" : "org.saddle.stats.LongStats.variance", "link" : "org\/saddle\/stats\/LongStats.html#variance:Double", "kind" : "def"}, {"label" : "geomean", "tail" : "(): Double", "member" : "org.saddle.stats.LongStats.geomean", "link" : "org\/saddle\/stats\/LongStats.html#geomean:Double", "kind" : "def"}, {"label" : "median", "tail" : "(): Double", "member" : "org.saddle.stats.LongStats.median", "link" : "org\/saddle\/stats\/LongStats.html#median:Double", "kind" : "def"}, {"label" : "mean", "tail" : "(): Double", "member" : "org.saddle.stats.LongStats.mean", "link" : "org\/saddle\/stats\/LongStats.html#mean:Double", "kind" : "def"}, {"label" : "logsum", "tail" : "(): Double", "member" : "org.saddle.stats.LongStats.logsum", "link" : "org\/saddle\/stats\/LongStats.html#logsum:Double", "kind" : "def"}, {"label" : "countif", "tail" : "(test: (Long) ⇒ Boolean): Int", "member" : "org.saddle.stats.LongStats.countif", "link" : "org\/saddle\/stats\/LongStats.html#countif(test:Long=>Boolean):Int", "kind" : "def"}, {"label" : "prod", "tail" : "(): Long", "member" : "org.saddle.stats.LongStats.prod", "link" : "org\/saddle\/stats\/LongStats.html#prod:Long", "kind" : "def"}, {"label" : "count", "tail" : "(): Int", "member" : "org.saddle.stats.LongStats.count", "link" : "org\/saddle\/stats\/LongStats.html#count:Int", "kind" : "def"}, {"label" : "sum", "tail" : "(): Long", "member" : "org.saddle.stats.LongStats.sum", "link" : "org\/saddle\/stats\/LongStats.html#sum:Long", "kind" : "def"}, {"label" : "max", "tail" : "(): Option[Long]", "member" : "org.saddle.stats.LongStats.max", "link" : "org\/saddle\/stats\/LongStats.html#max:Option[Long]", "kind" : "def"}, {"label" : "min", "tail" : "(): Option[Long]", "member" : "org.saddle.stats.LongStats.min", "link" : "org\/saddle\/stats\/LongStats.html#min:Option[Long]", "kind" : "def"}, {"label" : "sl", "tail" : ": ScalarTagLong.type", "member" : "org.saddle.stats.LongStats.sl", "link" : "org\/saddle\/stats\/LongStats.html#sl:org.saddle.scalar.ScalarTagLong.type", "kind" : "val"}, {"member" : "org.saddle.stats.LongStats#<init>", "error" : "unsupported entity"}, {"label" : "_percentile", "tail" : "(v: Vec[Double], tile: Double, method: PctMethod): Double", "member" : "org.saddle.stats.VecStats._percentile", "link" : "org\/saddle\/stats\/LongStats.html#_percentile(v:org.saddle.Vec[Double],tile:Double,method:org.saddle.PctMethod):Double", "kind" : "def"}, {"label" : "_rank", "tail" : "(v: Array[Double], tie: RankTie, ascending: Boolean): Vec[Double]", "member" : "org.saddle.stats.VecStats._rank", "link" : "org\/saddle\/stats\/LongStats.html#_rank(v:Array[Double],tie:org.saddle.RankTie,ascending:Boolean):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "_median", "tail" : "(r: Vec[Long])(n: NUM[Long]): Double", "member" : "org.saddle.stats.VecStats._median", "link" : "org\/saddle\/stats\/LongStats.html#_median(r:org.saddle.Vec[A])(implicitn:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "_demeaned", "tail" : "(r: Vec[Long], subOp: (Long, Double) ⇒ Double)(num: NUM[Long]): Vec[Double]", "member" : "org.saddle.stats.VecStats._demeaned", "link" : "org\/saddle\/stats\/LongStats.html#_demeaned(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "_kurt", "tail" : "(r: Vec[Long], subOp: (Long, Double) ⇒ Double)(num: NUM[Long]): Double", "member" : "org.saddle.stats.VecStats._kurt", "link" : "org\/saddle\/stats\/LongStats.html#_kurt(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "_skew", "tail" : "(r: Vec[Long], subOp: (Long, Double) ⇒ Double)(num: NUM[Long]): Double", "member" : "org.saddle.stats.VecStats._skew", "link" : "org\/saddle\/stats\/LongStats.html#_skew(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "_variance", "tail" : "(r: Vec[Long], subOp: (Long, Double) ⇒ Double)(num: NUM[Long]): Double", "member" : "org.saddle.stats.VecStats._variance", "link" : "org\/saddle\/stats\/LongStats.html#_variance(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "stdev", "tail" : "(): Double", "member" : "org.saddle.stats.VecStats.stdev", "link" : "org\/saddle\/stats\/LongStats.html#stdev:Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/LongStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/LongStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/LongStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/LongStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/LongStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/LongStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/LongStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/LongStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/LongStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/LongStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/LongStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/LongStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/LongStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/LongStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/LongStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/LongStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/LongStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/LongStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/LongStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/stats\/LongStats.html", "kind" : "class"}, {"name" : "org.saddle.stats.Mediator", "shortDescription" : "Mediator is an auxiliary class for O(N log k) rolling median.", "members_class" : [{"label" : "debug", "tail" : "(): Unit", "member" : "org.saddle.stats.Mediator.debug", "link" : "org\/saddle\/stats\/Mediator.html#debug():Unit", "kind" : "def"}, {"label" : "pop", "tail" : "(): Unit", "member" : "org.saddle.stats.Mediator.pop", "link" : "org\/saddle\/stats\/Mediator.html#pop():Unit", "kind" : "def"}, {"label" : "push", "tail" : "(v: Double): Unit", "member" : "org.saddle.stats.Mediator.push", "link" : "org\/saddle\/stats\/Mediator.html#push(v:Double):Unit", "kind" : "def"}, {"label" : "median", "tail" : "(): Double", "member" : "org.saddle.stats.Mediator.median", "link" : "org\/saddle\/stats\/Mediator.html#median:Double", "kind" : "def"}, {"member" : "org.saddle.stats.Mediator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/Mediator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/Mediator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/Mediator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/Mediator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/Mediator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/Mediator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/Mediator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/Mediator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/Mediator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/Mediator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/Mediator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/Mediator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/Mediator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/Mediator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/Mediator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/Mediator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/Mediator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/Mediator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/Mediator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/stats\/Mediator.html", "kind" : "class"}, {"name" : "org.saddle.stats.RollingCount", "shortDescription" : "", "members_class" : [{"label" : "apply", "tail" : "(v: Vec[A]): Int", "member" : "org.saddle.stats.RollingCount.apply", "link" : "org\/saddle\/stats\/RollingCount.html#apply(v:org.saddle.Vec[A]):Int", "kind" : "def"}, {"label" : "p", "tail" : ": Scalar[A]", "member" : "org.saddle.stats.RollingCount.p", "link" : "org\/saddle\/stats\/RollingCount.html#p:org.saddle.scalar.Scalar[A]", "kind" : "var"}, {"label" : "sa", "tail" : ": ST[A]", "member" : "org.saddle.stats.RollingCount.sa", "link" : "org\/saddle\/stats\/RollingCount.html#sa:org.saddle.ST[A]", "kind" : "val"}, {"label" : "s", "tail" : ": Int", "member" : "org.saddle.stats.RollingCount.s", "link" : "org\/saddle\/stats\/RollingCount.html#s:Int", "kind" : "var"}, {"label" : "i", "tail" : ": Int", "member" : "org.saddle.stats.RollingCount.i", "link" : "org\/saddle\/stats\/RollingCount.html#i:Int", "kind" : "var"}, {"member" : "org.saddle.stats.RollingCount#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "org\/saddle\/stats\/RollingCount.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Int) ⇒ A): (Vec[A]) ⇒ A", "member" : "scala.Function1.andThen", "link" : "org\/saddle\/stats\/RollingCount.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Vec[A]): (A) ⇒ Int", "member" : "scala.Function1.compose", "link" : "org\/saddle\/stats\/RollingCount.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/RollingCount.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/RollingCount.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/RollingCount.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/RollingCount.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/RollingCount.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/RollingCount.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/RollingCount.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/RollingCount.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/RollingCount.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/RollingCount.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/RollingCount.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/RollingCount.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/RollingCount.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/RollingCount.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/RollingCount.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/RollingCount.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/RollingCount.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/RollingCount.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/stats\/RollingCount.html", "kind" : "class"}, {"name" : "org.saddle.stats.RollingMean", "shortDescription" : "", "members_class" : [{"label" : "apply", "tail" : "(v: Vec[A]): Double", "member" : "org.saddle.stats.RollingMean.apply", "link" : "org\/saddle\/stats\/RollingMean.html#apply(v:org.saddle.Vec[A]):Double", "kind" : "def"}, {"label" : "p", "tail" : ": Scalar[A]", "member" : "org.saddle.stats.RollingMean.p", "link" : "org\/saddle\/stats\/RollingMean.html#p:org.saddle.scalar.Scalar[A]", "kind" : "var"}, {"label" : "sa", "tail" : ": ST[A]", "member" : "org.saddle.stats.RollingMean.sa", "link" : "org\/saddle\/stats\/RollingMean.html#sa:org.saddle.ST[A]", "kind" : "val"}, {"label" : "c", "tail" : ": Int", "member" : "org.saddle.stats.RollingMean.c", "link" : "org\/saddle\/stats\/RollingMean.html#c:Int", "kind" : "var"}, {"label" : "s", "tail" : ": Double", "member" : "org.saddle.stats.RollingMean.s", "link" : "org\/saddle\/stats\/RollingMean.html#s:Double", "kind" : "var"}, {"label" : "i", "tail" : ": Int", "member" : "org.saddle.stats.RollingMean.i", "link" : "org\/saddle\/stats\/RollingMean.html#i:Int", "kind" : "var"}, {"member" : "org.saddle.stats.RollingMean#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "org\/saddle\/stats\/RollingMean.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Double) ⇒ A): (Vec[A]) ⇒ A", "member" : "scala.Function1.andThen", "link" : "org\/saddle\/stats\/RollingMean.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Vec[A]): (A) ⇒ Double", "member" : "scala.Function1.compose", "link" : "org\/saddle\/stats\/RollingMean.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/RollingMean.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/RollingMean.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/RollingMean.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/RollingMean.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/RollingMean.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/RollingMean.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/RollingMean.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/RollingMean.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/RollingMean.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/RollingMean.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/RollingMean.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/RollingMean.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/RollingMean.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/RollingMean.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/RollingMean.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/RollingMean.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/RollingMean.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/RollingMean.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/stats\/RollingMean.html", "kind" : "class"}, {"name" : "org.saddle.stats.RollingMedian", "shortDescription" : "", "members_class" : [{"label" : "evaluate", "tail" : "(): Vec[Double]", "member" : "org.saddle.stats.RollingMedian.evaluate", "link" : "org\/saddle\/stats\/RollingMedian.html#evaluate:org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "win", "tail" : ": Int", "member" : "org.saddle.stats.RollingMedian.win", "link" : "org\/saddle\/stats\/RollingMedian.html#win:Int", "kind" : "val"}, {"label" : "len", "tail" : ": Int", "member" : "org.saddle.stats.RollingMedian.len", "link" : "org\/saddle\/stats\/RollingMedian.html#len:Int", "kind" : "val"}, {"label" : "sa", "tail" : ": ST[A]", "member" : "org.saddle.stats.RollingMedian.sa", "link" : "org\/saddle\/stats\/RollingMedian.html#sa:org.saddle.ST[A]", "kind" : "val"}, {"member" : "org.saddle.stats.RollingMedian#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/RollingMedian.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/RollingMedian.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/RollingMedian.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/RollingMedian.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/RollingMedian.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/RollingMedian.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/RollingMedian.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/RollingMedian.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/RollingMedian.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/RollingMedian.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/RollingMedian.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/RollingMedian.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/RollingMedian.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/RollingMedian.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/RollingMedian.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/RollingMedian.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/RollingMedian.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/RollingMedian.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/RollingMedian.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/stats\/RollingMedian.html", "kind" : "class"}, {"name" : "org.saddle.stats.RollingSum", "shortDescription" : "", "members_class" : [{"label" : "apply", "tail" : "(v: Vec[A]): A", "member" : "org.saddle.stats.RollingSum.apply", "link" : "org\/saddle\/stats\/RollingSum.html#apply(v:org.saddle.Vec[A]):A", "kind" : "def"}, {"label" : "p", "tail" : ": Scalar[A]", "member" : "org.saddle.stats.RollingSum.p", "link" : "org\/saddle\/stats\/RollingSum.html#p:org.saddle.scalar.Scalar[A]", "kind" : "var"}, {"label" : "s", "tail" : ": A", "member" : "org.saddle.stats.RollingSum.s", "link" : "org\/saddle\/stats\/RollingSum.html#s:A", "kind" : "var"}, {"label" : "sub", "tail" : ": SubOp[A]", "member" : "org.saddle.stats.RollingSum.sub", "link" : "org\/saddle\/stats\/RollingSum.html#sub:org.saddle.ops.SubOp[A]", "kind" : "val"}, {"label" : "add", "tail" : ": AddOp[A]", "member" : "org.saddle.stats.RollingSum.add", "link" : "org\/saddle\/stats\/RollingSum.html#add:org.saddle.ops.AddOp[A]", "kind" : "val"}, {"label" : "sa", "tail" : ": ST[A]", "member" : "org.saddle.stats.RollingSum.sa", "link" : "org\/saddle\/stats\/RollingSum.html#sa:org.saddle.ST[A]", "kind" : "val"}, {"label" : "i", "tail" : ": Int", "member" : "org.saddle.stats.RollingSum.i", "link" : "org\/saddle\/stats\/RollingSum.html#i:Int", "kind" : "var"}, {"member" : "org.saddle.stats.RollingSum#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "org\/saddle\/stats\/RollingSum.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (A) ⇒ A): (Vec[A]) ⇒ A", "member" : "scala.Function1.andThen", "link" : "org\/saddle\/stats\/RollingSum.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Vec[A]): (A) ⇒ A", "member" : "scala.Function1.compose", "link" : "org\/saddle\/stats\/RollingSum.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/RollingSum.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/RollingSum.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/RollingSum.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/RollingSum.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/RollingSum.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/RollingSum.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/RollingSum.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/RollingSum.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/RollingSum.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/RollingSum.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/RollingSum.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/RollingSum.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/RollingSum.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/RollingSum.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/RollingSum.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/RollingSum.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/RollingSum.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/RollingSum.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/stats\/RollingSum.html", "kind" : "class"}, {"name" : "org.saddle.stats.SeriesExpandingStats", "shortDescription" : "Expanding statistical methods made available on numeric Series objects via enrichment.", "object" : "org\/saddle\/stats\/SeriesExpandingStats$.html", "members_class" : [{"label" : "cumProd", "tail" : "(): Series[X, T]", "member" : "org.saddle.stats.SeriesExpandingStats.cumProd", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#cumProd:org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "cumMax", "tail" : "(): Series[X, T]", "member" : "org.saddle.stats.SeriesExpandingStats.cumMax", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#cumMax:org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "cumMin", "tail" : "(): Series[X, T]", "member" : "org.saddle.stats.SeriesExpandingStats.cumMin", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#cumMin:org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "cumCount", "tail" : "(): Series[X, Int]", "member" : "org.saddle.stats.SeriesExpandingStats.cumCount", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#cumCount:org.saddle.Series[X,Int]", "kind" : "def"}, {"label" : "cumSum", "tail" : "(): Series[X, T]", "member" : "org.saddle.stats.SeriesExpandingStats.cumSum", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#cumSum:org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "ev", "tail" : ": Vec2ExpandingStats[T]", "member" : "org.saddle.stats.SeriesExpandingStats.ev", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#ev:org.saddle.stats.Vec2ExpandingStats[T]", "kind" : "val"}, {"member" : "org.saddle.stats.SeriesExpandingStats#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/SeriesExpandingStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(s: Series[X, T])(arg0: ST[X], arg1: ORD[X], arg2: Vec2ExpandingStats[T], arg3: ST[T]): SeriesExpandingStats[X, T]", "member" : "org.saddle.stats.SeriesExpandingStats.apply", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#apply[X,T](s:org.saddle.Series[X,T])(implicitevidence$5:org.saddle.ST[X],implicitevidence$6:org.saddle.ORD[X],implicitevidence$7:org.saddle.stats.Vec2ExpandingStats[T],implicitevidence$8:org.saddle.ST[T]):org.saddle.stats.SeriesExpandingStats[X,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/SeriesExpandingStats$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/stats\/SeriesExpandingStats.html", "kind" : "class"}, {"name" : "org.saddle.stats.SeriesRollingStats", "shortDescription" : "Rolling statistical methods made available on numeric Series objects via enrichment.", "object" : "org\/saddle\/stats\/SeriesRollingStats$.html", "members_class" : [{"label" : "rollingMedian", "tail" : "(winSz: Int): Series[X, Double]", "member" : "org.saddle.stats.SeriesRollingStats.rollingMedian", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#rollingMedian(winSz:Int):org.saddle.Series[X,Double]", "kind" : "def"}, {"label" : "rollingMean", "tail" : "(winSz: Int): Series[X, Double]", "member" : "org.saddle.stats.SeriesRollingStats.rollingMean", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#rollingMean(winSz:Int):org.saddle.Series[X,Double]", "kind" : "def"}, {"label" : "rollingSum", "tail" : "(winSz: Int): Series[X, T]", "member" : "org.saddle.stats.SeriesRollingStats.rollingSum", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#rollingSum(winSz:Int):org.saddle.Series[X,T]", "kind" : "def"}, {"label" : "rollingCount", "tail" : "(winSz: Int): Series[X, Int]", "member" : "org.saddle.stats.SeriesRollingStats.rollingCount", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#rollingCount(winSz:Int):org.saddle.Series[X,Int]", "kind" : "def"}, {"label" : "ev", "tail" : ": Vec2RollingStats[T]", "member" : "org.saddle.stats.SeriesRollingStats.ev", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#ev:org.saddle.stats.Vec2RollingStats[T]", "kind" : "val"}, {"member" : "org.saddle.stats.SeriesRollingStats#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/SeriesRollingStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/SeriesRollingStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(s: Series[X, T])(arg0: ST[X], arg1: ORD[X], arg2: Vec2RollingStats[T], arg3: ST[T]): SeriesRollingStats[X, T]", "member" : "org.saddle.stats.SeriesRollingStats.apply", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#apply[X,T](s:org.saddle.Series[X,T])(implicitevidence$5:org.saddle.ST[X],implicitevidence$6:org.saddle.ORD[X],implicitevidence$7:org.saddle.stats.Vec2RollingStats[T],implicitevidence$8:org.saddle.ST[T]):org.saddle.stats.SeriesRollingStats[X,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/SeriesRollingStats$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/stats\/SeriesRollingStats.html", "kind" : "class"}, {"name" : "org.saddle.stats.VecExpandingStats", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/VecExpandingStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/VecExpandingStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/VecExpandingStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/VecExpandingStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/VecExpandingStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/VecExpandingStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/VecExpandingStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/VecExpandingStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/VecExpandingStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/VecExpandingStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/VecExpandingStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/VecExpandingStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/VecExpandingStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/VecExpandingStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/VecExpandingStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/VecExpandingStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/VecExpandingStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/VecExpandingStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/VecExpandingStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cumProd", "tail" : "(): Vec[A]", "member" : "org.saddle.stats.VecExpandingStats.cumProd", "link" : "org\/saddle\/stats\/VecExpandingStats.html#cumProd:org.saddle.Vec[A]", "kind" : "abstract def"}, {"label" : "cumMax", "tail" : "(): Vec[A]", "member" : "org.saddle.stats.VecExpandingStats.cumMax", "link" : "org\/saddle\/stats\/VecExpandingStats.html#cumMax:org.saddle.Vec[A]", "kind" : "abstract def"}, {"label" : "cumMin", "tail" : "(): Vec[A]", "member" : "org.saddle.stats.VecExpandingStats.cumMin", "link" : "org\/saddle\/stats\/VecExpandingStats.html#cumMin:org.saddle.Vec[A]", "kind" : "abstract def"}, {"label" : "cumCount", "tail" : "(): Vec[Int]", "member" : "org.saddle.stats.VecExpandingStats.cumCount", "link" : "org\/saddle\/stats\/VecExpandingStats.html#cumCount:org.saddle.Vec[Int]", "kind" : "abstract def"}, {"label" : "cumSum", "tail" : "(): Vec[A]", "member" : "org.saddle.stats.VecExpandingStats.cumSum", "link" : "org\/saddle\/stats\/VecExpandingStats.html#cumSum:org.saddle.Vec[A]", "kind" : "abstract def"}], "shortDescription" : "Expanding statistical methods made available on numeric Vec objects via enrichment.", "trait" : "org\/saddle\/stats\/VecExpandingStats.html", "kind" : "trait"}, {"name" : "org.saddle.stats.VecRollingStats", "shortDescription" : "Rolling statistical methods made available on numeric Vec objects via enrichment.", "members_class" : [{"label" : "rollingMedian", "tail" : "(winSz: Int): Vec[Double]", "member" : "org.saddle.stats.VecRollingStats.rollingMedian", "link" : "org\/saddle\/stats\/VecRollingStats.html#rollingMedian(winSz:Int):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "rollingMean", "tail" : "(winSz: Int): Vec[Double]", "member" : "org.saddle.stats.VecRollingStats.rollingMean", "link" : "org\/saddle\/stats\/VecRollingStats.html#rollingMean(winSz:Int):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "rollingSum", "tail" : "(winSz: Int): Vec[A]", "member" : "org.saddle.stats.VecRollingStats.rollingSum", "link" : "org\/saddle\/stats\/VecRollingStats.html#rollingSum(winSz:Int):org.saddle.Vec[A]", "kind" : "def"}, {"label" : "rollingCount", "tail" : "(winSz: Int): Vec[Int]", "member" : "org.saddle.stats.VecRollingStats.rollingCount", "link" : "org\/saddle\/stats\/VecRollingStats.html#rollingCount(winSz:Int):org.saddle.Vec[Int]", "kind" : "def"}, {"member" : "org.saddle.stats.VecRollingStats#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/VecRollingStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/VecRollingStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/VecRollingStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/VecRollingStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/VecRollingStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/VecRollingStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/VecRollingStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/VecRollingStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/VecRollingStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/VecRollingStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/VecRollingStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/VecRollingStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/VecRollingStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/VecRollingStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/VecRollingStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/VecRollingStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/VecRollingStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/VecRollingStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/VecRollingStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/stats\/VecRollingStats.html", "kind" : "class"}, {"name" : "org.saddle.stats.VecStats", "members_trait" : [{"label" : "_percentile", "tail" : "(v: Vec[Double], tile: Double, method: PctMethod): Double", "member" : "org.saddle.stats.VecStats._percentile", "link" : "org\/saddle\/stats\/VecStats.html#_percentile(v:org.saddle.Vec[Double],tile:Double,method:org.saddle.PctMethod):Double", "kind" : "def"}, {"label" : "_rank", "tail" : "(v: Array[Double], tie: RankTie, ascending: Boolean): Vec[Double]", "member" : "org.saddle.stats.VecStats._rank", "link" : "org\/saddle\/stats\/VecStats.html#_rank(v:Array[Double],tie:org.saddle.RankTie,ascending:Boolean):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "_median", "tail" : "(r: Vec[A])(n: NUM[A]): Double", "member" : "org.saddle.stats.VecStats._median", "link" : "org\/saddle\/stats\/VecStats.html#_median(r:org.saddle.Vec[A])(implicitn:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "_demeaned", "tail" : "(r: Vec[A], subOp: (A, Double) ⇒ Double)(num: NUM[A]): Vec[Double]", "member" : "org.saddle.stats.VecStats._demeaned", "link" : "org\/saddle\/stats\/VecStats.html#_demeaned(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "_kurt", "tail" : "(r: Vec[A], subOp: (A, Double) ⇒ Double)(num: NUM[A]): Double", "member" : "org.saddle.stats.VecStats._kurt", "link" : "org\/saddle\/stats\/VecStats.html#_kurt(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "_skew", "tail" : "(r: Vec[A], subOp: (A, Double) ⇒ Double)(num: NUM[A]): Double", "member" : "org.saddle.stats.VecStats._skew", "link" : "org\/saddle\/stats\/VecStats.html#_skew(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "_variance", "tail" : "(r: Vec[A], subOp: (A, Double) ⇒ Double)(num: NUM[A]): Double", "member" : "org.saddle.stats.VecStats._variance", "link" : "org\/saddle\/stats\/VecStats.html#_variance(r:org.saddle.Vec[A],subOp:(A,Double)=>Double)(implicitnum:org.saddle.NUM[A]):Double", "kind" : "def"}, {"label" : "stdev", "tail" : "(): Double", "member" : "org.saddle.stats.VecStats.stdev", "link" : "org\/saddle\/stats\/VecStats.html#stdev:Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/stats\/VecStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/stats\/VecStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/stats\/VecStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/stats\/VecStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/stats\/VecStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/stats\/VecStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/stats\/VecStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/VecStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/VecStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/stats\/VecStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/stats\/VecStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/stats\/VecStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/stats\/VecStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/stats\/VecStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/stats\/VecStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/stats\/VecStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/stats\/VecStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/stats\/VecStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/stats\/VecStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "demeaned", "tail" : "(): Vec[Double]", "member" : "org.saddle.stats.VecStats.demeaned", "link" : "org\/saddle\/stats\/VecStats.html#demeaned:org.saddle.Vec[Double]", "kind" : "abstract def"}, {"label" : "kurt", "tail" : "(): Double", "member" : "org.saddle.stats.VecStats.kurt", "link" : "org\/saddle\/stats\/VecStats.html#kurt:Double", "kind" : "abstract def"}, {"label" : "skew", "tail" : "(): Double", "member" : "org.saddle.stats.VecStats.skew", "link" : "org\/saddle\/stats\/VecStats.html#skew:Double", "kind" : "abstract def"}, {"label" : "variance", "tail" : "(): Double", "member" : "org.saddle.stats.VecStats.variance", "link" : "org\/saddle\/stats\/VecStats.html#variance:Double", "kind" : "abstract def"}, {"label" : "geomean", "tail" : "(): Double", "member" : "org.saddle.stats.VecStats.geomean", "link" : "org\/saddle\/stats\/VecStats.html#geomean:Double", "kind" : "abstract def"}, {"label" : "logsum", "tail" : "(): Double", "member" : "org.saddle.stats.VecStats.logsum", "link" : "org\/saddle\/stats\/VecStats.html#logsum:Double", "kind" : "abstract def"}], "shortDescription" : "Statistical methods made available on numeric Vec objects via enrichment.", "trait" : "org\/saddle\/stats\/VecStats.html", "kind" : "trait"}], "org.saddle.vec" : [{"name" : "org.saddle.vec.VecDefault", "shortDescription" : "", "members_class" : [{"label" : "reshape", "tail" : "(rows: Int, columns: Int): Mat[T]", "member" : "org.saddle.vec.VecDefault.reshape", "link" : "org\/saddle\/vec\/VecDefault.html#reshape(rows:Int,columns:Int):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "update", "tail" : "(slice: Slice[Int], value: Vec[T]): Unit", "member" : "org.saddle.vec.VecDefault.update", "link" : "org\/saddle\/vec\/VecDefault.html#update(slice:org.saddle.index.Slice[Int],value:org.saddle.Vec[T]):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(slice: Slice[Int], value: T): Unit", "member" : "org.saddle.vec.VecDefault.update", "link" : "org\/saddle\/vec\/VecDefault.html#update(slice:org.saddle.index.Slice[Int],value:T):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(offset: Int, value: T): Unit", "member" : "org.saddle.vec.VecDefault.update", "link" : "org\/saddle\/vec\/VecDefault.html#update(offset:Int,value:T):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(i: Int): Vec[T]", "member" : "org.saddle.vec.VecDefault.dropRight", "link" : "org\/saddle\/vec\/VecDefault.html#dropRight(i:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "dropLeft", "tail" : "(i: Int): Vec[T]", "member" : "org.saddle.vec.VecDefault.dropLeft", "link" : "org\/saddle\/vec\/VecDefault.html#dropLeft(i:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "takeRight", "tail" : "(i: Int): Vec[T]", "member" : "org.saddle.vec.VecDefault.takeRight", "link" : "org\/saddle\/vec\/VecDefault.html#takeRight(i:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "takeLeft", "tail" : "(i: Int): Vec[T]", "member" : "org.saddle.vec.VecDefault.takeLeft", "link" : "org\/saddle\/vec\/VecDefault.html#takeLeft(i:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "updated", "tail" : "(offset: Array[Int], value: T): Vec[T]", "member" : "org.saddle.vec.VecDefault.updated", "link" : "org\/saddle\/vec\/VecDefault.html#updated(offset:Array[Int],value:T):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "updated", "tail" : "(offset: Int, value: T): Vec[T]", "member" : "org.saddle.vec.VecDefault.updated", "link" : "org\/saddle\/vec\/VecDefault.html#updated(offset:Int,value:T):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "roundTo", "tail" : "(sig: Int)(ev: NUM[T]): Vec[Double]", "member" : "org.saddle.vec.VecDefault.roundTo", "link" : "org\/saddle\/vec\/VecDefault.html#roundTo(sig:Int)(implicitev:org.saddle.NUM[T]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.vec.VecDefault.toString", "link" : "org\/saddle\/vec\/VecDefault.html#toString():String", "kind" : "def"}, {"label" : "print", "tail" : "(len: Int, stream: OutputStream): Unit", "member" : "org.saddle.vec.VecDefault.print", "link" : "org\/saddle\/vec\/VecDefault.html#print(len:Int,stream:java.io.OutputStream):Unit", "kind" : "def"}, {"label" : "stringify", "tail" : "(len: Int): String", "member" : "org.saddle.vec.VecDefault.stringify", "link" : "org\/saddle\/vec\/VecDefault.html#stringify(len:Int):String", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.vec.VecDefault.equals", "link" : "org\/saddle\/vec\/VecDefault.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.vec.VecDefault.hashCode", "link" : "org\/saddle\/vec\/VecDefault.html#hashCode():Int", "kind" : "def"}, {"label" : "median", "tail" : "(n: NUM[T]): Double", "member" : "org.saddle.vec.VecDefault.median", "link" : "org\/saddle\/vec\/VecDefault.html#median(implicitn:org.saddle.NUM[T]):Double", "kind" : "def"}, {"label" : "mean", "tail" : "(n: NUM[T]): Double", "member" : "org.saddle.vec.VecDefault.mean", "link" : "org\/saddle\/vec\/VecDefault.html#mean(implicitn:org.saddle.NUM[T]):Double", "kind" : "def"}, {"label" : "rank", "tail" : "(tie: RankTie, ascending: Boolean)(na: NUM[T]): Vec[Double]", "member" : "org.saddle.vec.VecDefault.rank", "link" : "org\/saddle\/vec\/VecDefault.html#rank(tie:org.saddle.RankTie,ascending:Boolean)(implicitna:org.saddle.NUM[T]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "percentile", "tail" : "(tile: Double, method: PctMethod)(na: NUM[T]): Double", "member" : "org.saddle.vec.VecDefault.percentile", "link" : "org\/saddle\/vec\/VecDefault.html#percentile(tile:Double,method:org.saddle.PctMethod)(implicitna:org.saddle.NUM[T]):Double", "kind" : "def"}, {"label" : "countif", "tail" : "(a: T): Int", "member" : "org.saddle.vec.VecDefault.countif", "link" : "org\/saddle\/vec\/VecDefault.html#countif(a:T):Int", "kind" : "def"}, {"label" : "countif", "tail" : "(test: (T) ⇒ Boolean): Int", "member" : "org.saddle.vec.VecDefault.countif", "link" : "org\/saddle\/vec\/VecDefault.html#countif(test:T=>Boolean):Int", "kind" : "def"}, {"label" : "count", "tail" : "(): Int", "member" : "org.saddle.vec.VecDefault.count", "link" : "org\/saddle\/vec\/VecDefault.html#count:Int", "kind" : "def"}, {"label" : "argmax", "tail" : "(na: NUM[T], st: ST[T], ord: ORD[T]): Int", "member" : "org.saddle.vec.VecDefault.argmax", "link" : "org\/saddle\/vec\/VecDefault.html#argmax(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T],implicitord:org.saddle.ORD[T]):Int", "kind" : "def"}, {"label" : "argmin", "tail" : "(na: NUM[T], st: ST[T], ord: ORD[T]): Int", "member" : "org.saddle.vec.VecDefault.argmin", "link" : "org\/saddle\/vec\/VecDefault.html#argmin(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T],implicitord:org.saddle.ORD[T]):Int", "kind" : "def"}, {"label" : "prod", "tail" : "(na: NUM[T], st: ST[T]): T", "member" : "org.saddle.vec.VecDefault.prod", "link" : "org\/saddle\/vec\/VecDefault.html#prod(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T]):T", "kind" : "def"}, {"label" : "sum", "tail" : "(na: NUM[T], st: ST[T]): T", "member" : "org.saddle.vec.VecDefault.sum", "link" : "org\/saddle\/vec\/VecDefault.html#sum(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T]):T", "kind" : "def"}, {"label" : "max", "tail" : "(na: NUM[T], st: ST[T]): Scalar[T]", "member" : "org.saddle.vec.VecDefault.max", "link" : "org\/saddle\/vec\/VecDefault.html#max(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "min", "tail" : "(na: NUM[T], st: ST[T]): Scalar[T]", "member" : "org.saddle.vec.VecDefault.min", "link" : "org\/saddle\/vec\/VecDefault.html#min(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): IndexedSeq[T]", "member" : "org.saddle.vec.VecDefault.toSeq", "link" : "org\/saddle\/vec\/VecDefault.html#toSeq:IndexedSeq[T]", "kind" : "def"}, {"label" : "fillNA", "tail" : "(f: (Int) ⇒ T): Vec[T]", "member" : "org.saddle.vec.VecDefault.fillNA", "link" : "org\/saddle\/vec\/VecDefault.html#fillNA(f:Int=>T):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(i: Int): (Vec[T], Vec[T])", "member" : "org.saddle.vec.VecDefault.splitAt", "link" : "org\/saddle\/vec\/VecDefault.html#splitAt(i:Int):(org.saddle.Vec[T],org.saddle.Vec[T])", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(from: Int, to: Int, stride: Int): Vec[T]", "member" : "org.saddle.vec.VecDefault.sliceBy", "link" : "org\/saddle\/vec\/VecDefault.html#sliceBy(from:Int,to:Int,stride:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Vec[T]", "member" : "org.saddle.vec.VecDefault.reversed", "link" : "org\/saddle\/vec\/VecDefault.html#reversed:org.saddle.Vec[T]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ev: ORD[T], st: ST[T]): Vec[T]", "member" : "org.saddle.vec.VecDefault.sorted", "link" : "org\/saddle\/vec\/VecDefault.html#sorted(implicitev:org.saddle.ORD[T],implicitst:org.saddle.ST[T]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "where", "tail" : "(pred: Vec[Boolean]): Vec[T]", "member" : "org.saddle.vec.VecDefault.where", "link" : "org\/saddle\/vec\/VecDefault.html#where(pred:org.saddle.Vec[Boolean]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "filterAt", "tail" : "(pred: (Int) ⇒ Boolean): Vec[T]", "member" : "org.saddle.vec.VecDefault.filterAt", "link" : "org\/saddle\/vec\/VecDefault.html#filterAt(pred:Int=>Boolean):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (T) ⇒ Boolean): Vec[T]", "member" : "org.saddle.vec.VecDefault.filter", "link" : "org\/saddle\/vec\/VecDefault.html#filter(pred:T=>Boolean):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "exists", "tail" : "(pred: (T) ⇒ Boolean): Boolean", "member" : "org.saddle.vec.VecDefault.exists", "link" : "org\/saddle\/vec\/VecDefault.html#exists(pred:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "findOne", "tail" : "(pred: (T) ⇒ Boolean): Int", "member" : "org.saddle.vec.VecDefault.findOne", "link" : "org\/saddle\/vec\/VecDefault.html#findOne(pred:T=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(pred: (T) ⇒ Boolean): Vec[Int]", "member" : "org.saddle.vec.VecDefault.find", "link" : "org\/saddle\/vec\/VecDefault.html#find(pred:T=>Boolean):org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "forall", "tail" : "(pred: (T) ⇒ Boolean)(op: (T) ⇒ Unit): Unit", "member" : "org.saddle.vec.VecDefault.forall", "link" : "org\/saddle\/vec\/VecDefault.html#forall(pred:T=>Boolean)(op:T=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(op: (T) ⇒ Unit): Unit", "member" : "org.saddle.vec.VecDefault.foreach", "link" : "org\/saddle\/vec\/VecDefault.html#foreach(op:T=>Unit):Unit", "kind" : "def"}, {"label" : "mask", "tail" : "(f: (T) ⇒ Boolean): Vec[T]", "member" : "org.saddle.vec.VecDefault.mask", "link" : "org\/saddle\/vec\/VecDefault.html#mask(f:T=>Boolean):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "mask", "tail" : "(m: Vec[Boolean]): Vec[T]", "member" : "org.saddle.vec.VecDefault.mask", "link" : "org\/saddle\/vec\/VecDefault.html#mask(m:org.saddle.Vec[Boolean]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.vec.VecDefault.isEmpty", "link" : "org\/saddle\/vec\/VecDefault.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "tail", "tail" : "(n: Int): Vec[T]", "member" : "org.saddle.vec.VecDefault.tail", "link" : "org\/saddle\/vec\/VecDefault.html#tail(n:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "head", "tail" : "(n: Int): Vec[T]", "member" : "org.saddle.vec.VecDefault.head", "link" : "org\/saddle\/vec\/VecDefault.html#head(n:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "last", "tail" : "(): Scalar[T]", "member" : "org.saddle.vec.VecDefault.last", "link" : "org\/saddle\/vec\/VecDefault.html#last:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "first", "tail" : "(): Scalar[T]", "member" : "org.saddle.vec.VecDefault.first", "link" : "org\/saddle\/vec\/VecDefault.html#first:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(rng: Slice[Int]): Vec[T]", "member" : "org.saddle.vec.VecDefault.apply", "link" : "org\/saddle\/vec\/VecDefault.html#apply(rng:org.saddle.index.Slice[Int]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(locs: Array[Int]): Vec[T]", "member" : "org.saddle.vec.VecDefault.apply", "link" : "org\/saddle\/vec\/VecDefault.html#apply(locs:Array[Int]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(locs: Vec[Int]): Vec[T]", "member" : "org.saddle.vec.VecDefault.apply", "link" : "org\/saddle\/vec\/VecDefault.html#apply(locs:org.saddle.Vec[Int]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(locs: Int*): Vec[T]", "member" : "org.saddle.vec.VecDefault.apply", "link" : "org\/saddle\/vec\/VecDefault.html#apply(locs:Int*):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "at", "tail" : "(loc: Int): Scalar[T]", "member" : "org.saddle.vec.VecDefault.at", "link" : "org\/saddle\/vec\/VecDefault.html#at(loc:Int):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "shift", "tail" : "(n: Int): VecDefault[T]", "member" : "org.saddle.vec.VecDefault.shift", "link" : "org\/saddle\/vec\/VecDefault.html#shift(n:Int):org.saddle.vec.VecDefault[T]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int, stride: Int): Vec[T]", "member" : "org.saddle.vec.VecDefault.slice", "link" : "org\/saddle\/vec\/VecDefault.html#slice(from:Int,until:Int,stride:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Vec[B])(f: (T, B) ⇒ C)(arg0: ST[B], arg1: ST[C]): Vec[C]", "member" : "org.saddle.vec.VecDefault.zipMap", "link" : "org\/saddle\/vec\/VecDefault.html#zipMap[B,C](other:org.saddle.Vec[B])(f:(T,B)=>C)(implicitevidence$9:org.saddle.ST[B],implicitevidence$10:org.saddle.ST[C]):org.saddle.Vec[C]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(init: B)(f: (B, T) ⇒ B)(arg0: ST[B]): Vec[B]", "member" : "org.saddle.vec.VecDefault.scanLeft", "link" : "org\/saddle\/vec\/VecDefault.html#scanLeft[B](init:B)(f:(B,T)=>B)(implicitevidence$8:org.saddle.ST[B]):org.saddle.Vec[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ Vec[B])(arg0: ST[B]): Vec[B]", "member" : "org.saddle.vec.VecDefault.flatMap", "link" : "org\/saddle\/vec\/VecDefault.html#flatMap[B](f:T=>org.saddle.Vec[B])(implicitevidence$7:org.saddle.ST[B]):org.saddle.Vec[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ B)(arg0: ST[B]): Vec[B]", "member" : "org.saddle.vec.VecDefault.map", "link" : "org\/saddle\/vec\/VecDefault.html#map[B](f:T=>B)(implicitevidence$6:org.saddle.ST[B]):org.saddle.Vec[B]", "kind" : "def"}, {"label" : "rolling", "tail" : "(winSz: Int, f: (Vec[T]) ⇒ B)(arg0: ST[B]): Vec[B]", "member" : "org.saddle.vec.VecDefault.rolling", "link" : "org\/saddle\/vec\/VecDefault.html#rolling[B](winSz:Int,f:org.saddle.Vec[T]=>B)(implicitevidence$5:org.saddle.ST[B]):org.saddle.Vec[B]", "kind" : "def"}, {"label" : "filterScanLeft", "tail" : "(pred: (T) ⇒ Boolean)(init: B)(f: (B, T) ⇒ B)(arg0: ST[B]): Vec[B]", "member" : "org.saddle.vec.VecDefault.filterScanLeft", "link" : "org\/saddle\/vec\/VecDefault.html#filterScanLeft[B](pred:T=>Boolean)(init:B)(f:(B,T)=>B)(implicitevidence$4:org.saddle.ST[B]):org.saddle.Vec[B]", "kind" : "def"}, {"label" : "filterFoldLeft", "tail" : "(pred: (T) ⇒ Boolean)(init: B)(f: (B, T) ⇒ B)(arg0: ST[B]): B", "member" : "org.saddle.vec.VecDefault.filterFoldLeft", "link" : "org\/saddle\/vec\/VecDefault.html#filterFoldLeft[B](pred:T=>Boolean)(init:B)(f:(B,T)=>B)(implicitevidence$3:org.saddle.ST[B]):B", "kind" : "def"}, {"label" : "foldLeftWhile", "tail" : "(init: B)(f: (B, T) ⇒ B)(cond: (B, T) ⇒ Boolean)(arg0: ST[B]): B", "member" : "org.saddle.vec.VecDefault.foldLeftWhile", "link" : "org\/saddle\/vec\/VecDefault.html#foldLeftWhile[B](init:B)(f:(B,T)=>B)(cond:(B,T)=>Boolean)(implicitevidence$2:org.saddle.ST[B]):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(init: B)(f: (B, T) ⇒ B)(arg0: ST[B]): B", "member" : "org.saddle.vec.VecDefault.foldLeft", "link" : "org\/saddle\/vec\/VecDefault.html#foldLeft[B](init:B)(f:(B,T)=>B)(implicitevidence$1:org.saddle.ST[B]):B", "kind" : "def"}, {"label" : "concat", "tail" : "(v: Vec[T]): Vec[T]", "member" : "org.saddle.vec.VecDefault.concat", "link" : "org\/saddle\/vec\/VecDefault.html#concat(v:org.saddle.Vec[T]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "unary_-", "tail" : "()(num: NUM[T]): Vec[T]", "member" : "org.saddle.vec.VecDefault.unary_-", "link" : "org\/saddle\/vec\/VecDefault.html#unary_-()(implicitnum:org.saddle.NUM[T]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "hasNA", "tail" : "(): Boolean", "member" : "org.saddle.vec.VecDefault.hasNA", "link" : "org\/saddle\/vec\/VecDefault.html#hasNA:Boolean", "kind" : "def"}, {"label" : "dropNA", "tail" : "(): Vec[T]", "member" : "org.saddle.vec.VecDefault.dropNA", "link" : "org\/saddle\/vec\/VecDefault.html#dropNA:org.saddle.Vec[T]", "kind" : "def"}, {"label" : "without", "tail" : "(locs: Array[Int]): Vec[T]", "member" : "org.saddle.vec.VecDefault.without", "link" : "org\/saddle\/vec\/VecDefault.html#without(locs:Array[Int]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "take", "tail" : "(locs: Array[Int]): Vec[T]", "member" : "org.saddle.vec.VecDefault.take", "link" : "org\/saddle\/vec\/VecDefault.html#take(locs:Array[Int]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "contents", "tail" : "(): Array[T]", "member" : "org.saddle.vec.VecDefault.contents", "link" : "org\/saddle\/vec\/VecDefault.html#contents:Array[T]", "kind" : "def"}, {"label" : "copy", "tail" : "(): Vec[T]", "member" : "org.saddle.vec.VecDefault.copy", "link" : "org\/saddle\/vec\/VecDefault.html#copy:org.saddle.Vec[T]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[T]", "member" : "org.saddle.vec.VecDefault.toArray", "link" : "org\/saddle\/vec\/VecDefault.html#toArray:Array[T]", "kind" : "def"}, {"label" : "raw", "tail" : "(loc: Int): T", "member" : "org.saddle.vec.VecDefault.raw", "link" : "org\/saddle\/vec\/VecDefault.html#raw(loc:Int):T", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "org.saddle.vec.VecDefault.length", "link" : "org\/saddle\/vec\/VecDefault.html#length:Int", "kind" : "def"}, {"label" : "needsCopy", "tail" : "(): Boolean", "member" : "org.saddle.vec.VecDefault.needsCopy", "link" : "org\/saddle\/vec\/VecDefault.html#needsCopy:Boolean", "kind" : "def"}, {"member" : "org.saddle.vec.VecDefault#<init>", "error" : "unsupported entity"}, {"label" : "scalarTag", "tail" : ": ST[T]", "member" : "org.saddle.vec.VecDefault.scalarTag", "link" : "org\/saddle\/vec\/VecDefault.html#scalarTag:org.saddle.ST[T]", "kind" : "val"}, {"label" : "**=", "tail" : "(other: B)(op: BinOpInPlace[Power, Vec[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.**=", "link" : "org\/saddle\/vec\/VecDefault.html#**=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Power,This,B]):Unit", "kind" : "def"}, {"label" : "%=", "tail" : "(other: B)(op: BinOpInPlace[Mod, Vec[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.%=", "link" : "org\/saddle\/vec\/VecDefault.html#%=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Mod,This,B]):Unit", "kind" : "def"}, {"label" : "\/=", "tail" : "(other: B)(op: BinOpInPlace[Divide, Vec[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.\/=", "link" : "org\/saddle\/vec\/VecDefault.html#\/=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Divide,This,B]):Unit", "kind" : "def"}, {"label" : "*=", "tail" : "(other: B)(op: BinOpInPlace[Multiply, Vec[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.*=", "link" : "org\/saddle\/vec\/VecDefault.html#*=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Multiply,This,B]):Unit", "kind" : "def"}, {"label" : "-=", "tail" : "(other: B)(op: BinOpInPlace[Subtract, Vec[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.-=", "link" : "org\/saddle\/vec\/VecDefault.html#-=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Subtract,This,B]):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(other: B)(op: BinOpInPlace[Add, Vec[T], B]): Unit", "member" : "org.saddle.ops.NumericOps.+=", "link" : "org\/saddle\/vec\/VecDefault.html#+=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Add,This,B]):Unit", "kind" : "def"}, {"label" : "outer", "tail" : "(other: B)(op: BinOp[OuterProd, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.outer", "link" : "org\/saddle\/vec\/VecDefault.html#outer[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.OuterProd,This,B,That]):That", "kind" : "def"}, {"label" : "dot", "tail" : "(other: B)(op: BinOp[InnerProd, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.dot", "link" : "org\/saddle\/vec\/VecDefault.html#dot[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.InnerProd,This,B,That]):That", "kind" : "def"}, {"label" : "xor", "tail" : "(other: B)(op: BinOp[XorOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.xor", "link" : "org\/saddle\/vec\/VecDefault.html#xor[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.XorOp,This,B,That]):That", "kind" : "def"}, {"label" : "&&", "tail" : "(other: B)(op: BinOp[AndOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.&&", "link" : "org\/saddle\/vec\/VecDefault.html#&&[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.AndOp,This,B,That]):That", "kind" : "def"}, {"label" : "||", "tail" : "(other: B)(op: BinOp[OrOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.||", "link" : "org\/saddle\/vec\/VecDefault.html#||[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.OrOp,This,B,That]):That", "kind" : "def"}, {"label" : "<>", "tail" : "(other: B)(op: BinOp[NeqOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<>", "link" : "org\/saddle\/vec\/VecDefault.html#<>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,This,B,That]):That", "kind" : "def"}, {"label" : "=?", "tail" : "(other: B)(op: BinOp[EqOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.=?", "link" : "org\/saddle\/vec\/VecDefault.html#=?[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.EqOp,This,B,That]):That", "kind" : "def"}, {"label" : ">=", "tail" : "(other: B)(op: BinOp[GteOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>=", "link" : "org\/saddle\/vec\/VecDefault.html#>=[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.GteOp,This,B,That]):That", "kind" : "def"}, {"label" : ">", "tail" : "(other: B)(op: BinOp[GtOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>", "link" : "org\/saddle\/vec\/VecDefault.html#>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.GtOp,This,B,That]):That", "kind" : "def"}, {"label" : "<=", "tail" : "(other: B)(op: BinOp[LteOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<=", "link" : "org\/saddle\/vec\/VecDefault.html#<=[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.LteOp,This,B,That]):That", "kind" : "def"}, {"label" : "<", "tail" : "(other: B)(op: BinOp[LtOp, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<", "link" : "org\/saddle\/vec\/VecDefault.html#<[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.LtOp,This,B,That]):That", "kind" : "def"}, {"label" : ">>>", "tail" : "(other: B)(op: BinOp[BitUShr, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>>>", "link" : "org\/saddle\/vec\/VecDefault.html#>>>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitUShr,This,B,That]):That", "kind" : "def"}, {"label" : ">>", "tail" : "(other: B)(op: BinOp[BitShr, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.>>", "link" : "org\/saddle\/vec\/VecDefault.html#>>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitShr,This,B,That]):That", "kind" : "def"}, {"label" : "<<", "tail" : "(other: B)(op: BinOp[BitShl, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.<<", "link" : "org\/saddle\/vec\/VecDefault.html#<<[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitShl,This,B,That]):That", "kind" : "def"}, {"label" : "^", "tail" : "(other: B)(op: BinOp[BitXor, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.^", "link" : "org\/saddle\/vec\/VecDefault.html#^[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitXor,This,B,That]):That", "kind" : "def"}, {"label" : "|", "tail" : "(other: B)(op: BinOp[BitOr, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.|", "link" : "org\/saddle\/vec\/VecDefault.html#|[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitOr,This,B,That]):That", "kind" : "def"}, {"label" : "&", "tail" : "(other: B)(op: BinOp[BitAnd, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.&", "link" : "org\/saddle\/vec\/VecDefault.html#&[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitAnd,This,B,That]):That", "kind" : "def"}, {"label" : "**", "tail" : "(other: B)(op: BinOp[Power, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.**", "link" : "org\/saddle\/vec\/VecDefault.html#**[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Power,This,B,That]):That", "kind" : "def"}, {"label" : "%", "tail" : "(other: B)(op: BinOp[Mod, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.%", "link" : "org\/saddle\/vec\/VecDefault.html#%[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Mod,This,B,That]):That", "kind" : "def"}, {"label" : "*", "tail" : "(other: B)(op: BinOp[Multiply, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.*", "link" : "org\/saddle\/vec\/VecDefault.html#*[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Multiply,This,B,That]):That", "kind" : "def"}, {"label" : "\/", "tail" : "(other: B)(op: BinOp[Divide, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.\/", "link" : "org\/saddle\/vec\/VecDefault.html#\/[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Divide,This,B,That]):That", "kind" : "def"}, {"label" : "-", "tail" : "(other: B)(op: BinOp[Subtract, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.-", "link" : "org\/saddle\/vec\/VecDefault.html#-[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Subtract,This,B,That]):That", "kind" : "def"}, {"label" : "+", "tail" : "(other: B)(op: BinOp[Add, Vec[T], B, That]): That", "member" : "org.saddle.ops.NumericOps.+", "link" : "org\/saddle\/vec\/VecDefault.html#+[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Add,This,B,That]):That", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/vec\/VecDefault.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/vec\/VecDefault.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/vec\/VecDefault.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/vec\/VecDefault.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/vec\/VecDefault.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/vec\/VecDefault.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/vec\/VecDefault.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/vec\/VecDefault.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/vec\/VecDefault.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/vec\/VecDefault.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/vec\/VecDefault.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/vec\/VecDefault.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/vec\/VecDefault.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/vec\/VecDefault.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/vec\/VecDefault.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/vec\/VecDefault.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/vec\/VecDefault.html", "kind" : "class"}, {"name" : "org.saddle.vec.VecTime", "shortDescription" : "A compact native int representation of posix times at millisecond resolution whichconforms to and extends the interface of Vec[DateTime]", "object" : "org\/saddle\/vec\/VecTime$.html", "members_class" : [{"label" : "toArray", "tail" : "(): Array[DateTime]", "member" : "org.saddle.vec.VecTime.toArray", "link" : "org\/saddle\/vec\/VecTime.html#toArray:Array[org.joda.time.DateTime]", "kind" : "def"}, {"label" : "copy", "tail" : "(): VecTime", "member" : "org.saddle.vec.VecTime.copy", "link" : "org\/saddle\/vec\/VecTime.html#copy:org.saddle.vec.VecTime", "kind" : "def"}, {"label" : "reversed", "tail" : "(): VecTime", "member" : "org.saddle.vec.VecTime.reversed", "link" : "org\/saddle\/vec\/VecTime.html#reversed:org.saddle.vec.VecTime", "kind" : "def"}, {"label" : "fillNA", "tail" : "(f: (Int) ⇒ DateTime): VecTime", "member" : "org.saddle.vec.VecTime.fillNA", "link" : "org\/saddle\/vec\/VecTime.html#fillNA(f:Int=>org.joda.time.DateTime):org.saddle.vec.VecTime", "kind" : "def"}, {"label" : "sorted", "tail" : "(ev: ORD[DateTime], st: ST[DateTime]): VecTime", "member" : "org.saddle.vec.VecTime.sorted", "link" : "org\/saddle\/vec\/VecTime.html#sorted(implicitev:org.saddle.ORD[org.joda.time.DateTime],implicitst:org.saddle.ST[org.joda.time.DateTime]):org.saddle.vec.VecTime", "kind" : "def"}, {"label" : "shift", "tail" : "(n: Int): VecTime", "member" : "org.saddle.vec.VecTime.shift", "link" : "org\/saddle\/vec\/VecTime.html#shift(n:Int):org.saddle.vec.VecTime", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int, stride: Int): VecTime", "member" : "org.saddle.vec.VecTime.slice", "link" : "org\/saddle\/vec\/VecTime.html#slice(from:Int,until:Int,stride:Int):org.saddle.vec.VecTime", "kind" : "def"}, {"label" : "rolling", "tail" : "(winSz: Int, f: (Vec[DateTime]) ⇒ B)(arg0: ST[B]): Vec[B]", "member" : "org.saddle.vec.VecTime.rolling", "link" : "org\/saddle\/vec\/VecTime.html#rolling[B](winSz:Int,f:org.saddle.Vec[org.joda.time.DateTime]=>B)(implicitevidence$10:org.saddle.ST[B]):org.saddle.Vec[B]", "kind" : "def"}, {"label" : "hasNA", "tail" : "(): Boolean", "member" : "org.saddle.vec.VecTime.hasNA", "link" : "org\/saddle\/vec\/VecTime.html#hasNA:Boolean", "kind" : "def"}, {"label" : "dropNA", "tail" : "(): VecTime", "member" : "org.saddle.vec.VecTime.dropNA", "link" : "org\/saddle\/vec\/VecTime.html#dropNA:org.saddle.vec.VecTime", "kind" : "def"}, {"label" : "zipMap", "tail" : "(other: Vec[B])(f: (DateTime, B) ⇒ C)(arg0: ST[B], arg1: ST[C]): Vec[C]", "member" : "org.saddle.vec.VecTime.zipMap", "link" : "org\/saddle\/vec\/VecTime.html#zipMap[B,C](other:org.saddle.Vec[B])(f:(org.joda.time.DateTime,B)=>C)(implicitevidence$8:org.saddle.ST[B],implicitevidence$9:org.saddle.ST[C]):org.saddle.Vec[C]", "kind" : "def"}, {"label" : "foldLeftWhile", "tail" : "(init: B)(f: (B, DateTime) ⇒ B)(cond: (B, DateTime) ⇒ Boolean)(arg0: ST[B]): B", "member" : "org.saddle.vec.VecTime.foldLeftWhile", "link" : "org\/saddle\/vec\/VecTime.html#foldLeftWhile[B](init:B)(f:(B,org.joda.time.DateTime)=>B)(cond:(B,org.joda.time.DateTime)=>Boolean)(implicitevidence$7:org.saddle.ST[B]):B", "kind" : "def"}, {"label" : "filterScanLeft", "tail" : "(pred: (DateTime) ⇒ Boolean)(init: B)(f: (B, DateTime) ⇒ B)(arg0: ST[B]): Vec[B]", "member" : "org.saddle.vec.VecTime.filterScanLeft", "link" : "org\/saddle\/vec\/VecTime.html#filterScanLeft[B](pred:org.joda.time.DateTime=>Boolean)(init:B)(f:(B,org.joda.time.DateTime)=>B)(implicitevidence$6:org.saddle.ST[B]):org.saddle.Vec[B]", "kind" : "def"}, {"label" : "filterFoldLeft", "tail" : "(pred: (DateTime) ⇒ Boolean)(init: B)(f: (B, DateTime) ⇒ B)(arg0: ST[B]): B", "member" : "org.saddle.vec.VecTime.filterFoldLeft", "link" : "org\/saddle\/vec\/VecTime.html#filterFoldLeft[B](pred:org.joda.time.DateTime=>Boolean)(init:B)(f:(B,org.joda.time.DateTime)=>B)(implicitevidence$5:org.saddle.ST[B]):B", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(init: B)(f: (B, DateTime) ⇒ B)(arg0: ST[B]): Vec[B]", "member" : "org.saddle.vec.VecTime.scanLeft", "link" : "org\/saddle\/vec\/VecTime.html#scanLeft[B](init:B)(f:(B,org.joda.time.DateTime)=>B)(implicitevidence$4:org.saddle.ST[B]):org.saddle.Vec[B]", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(init: B)(f: (B, DateTime) ⇒ B)(arg0: ST[B]): B", "member" : "org.saddle.vec.VecTime.foldLeft", "link" : "org\/saddle\/vec\/VecTime.html#foldLeft[B](init:B)(f:(B,org.joda.time.DateTime)=>B)(implicitevidence$3:org.saddle.ST[B]):B", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (DateTime) ⇒ Vec[B])(arg0: ST[B]): Vec[B]", "member" : "org.saddle.vec.VecTime.flatMap", "link" : "org\/saddle\/vec\/VecTime.html#flatMap[B](f:org.joda.time.DateTime=>org.saddle.Vec[B])(implicitevidence$2:org.saddle.ST[B]):org.saddle.Vec[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (DateTime) ⇒ B)(arg0: ST[B]): Vec[B]", "member" : "org.saddle.vec.VecTime.map", "link" : "org\/saddle\/vec\/VecTime.html#map[B](f:org.joda.time.DateTime=>B)(implicitevidence$1:org.saddle.ST[B]):org.saddle.Vec[B]", "kind" : "def"}, {"label" : "unary_-", "tail" : "()(num: NUM[DateTime]): Nothing", "member" : "org.saddle.vec.VecTime.unary_-", "link" : "org\/saddle\/vec\/VecTime.html#unary_-()(implicitnum:org.saddle.NUM[org.joda.time.DateTime]):Nothing", "kind" : "def"}, {"label" : "concat", "tail" : "(x: VecTime): VecTime", "member" : "org.saddle.vec.VecTime.concat", "link" : "org\/saddle\/vec\/VecTime.html#concat(x:org.saddle.vec.VecTime):org.saddle.vec.VecTime", "kind" : "def"}, {"label" : "without", "tail" : "(locs: Array[Int]): VecTime", "member" : "org.saddle.vec.VecTime.without", "link" : "org\/saddle\/vec\/VecTime.html#without(locs:Array[Int]):org.saddle.vec.VecTime", "kind" : "def"}, {"label" : "take", "tail" : "(locs: Array[Int]): VecTime", "member" : "org.saddle.vec.VecTime.take", "link" : "org\/saddle\/vec\/VecTime.html#take(locs:Array[Int]):org.saddle.vec.VecTime", "kind" : "def"}, {"label" : "raw", "tail" : "(loc: Int): DateTime", "member" : "org.saddle.vec.VecTime.raw", "link" : "org\/saddle\/vec\/VecTime.html#raw(loc:Int):org.joda.time.DateTime", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "org.saddle.vec.VecTime.length", "link" : "org\/saddle\/vec\/VecTime.html#length:Int", "kind" : "def"}, {"label" : "chrono", "tail" : ": Chronology", "member" : "org.saddle.vec.VecTime.chrono", "link" : "org\/saddle\/vec\/VecTime.html#chrono:org.joda.time.Chronology", "kind" : "lazy val"}, {"label" : "scalarTag", "tail" : ": ScalarTagTime.type", "member" : "org.saddle.vec.VecTime.scalarTag", "link" : "org\/saddle\/vec\/VecTime.html#scalarTag:org.saddle.scalar.ScalarTagTime.type", "kind" : "val"}, {"member" : "org.saddle.vec.VecTime#<init>", "error" : "unsupported entity"}, {"label" : "tzone", "tail" : ": DateTimeZone", "member" : "org.saddle.vec.VecTime.tzone", "link" : "org\/saddle\/vec\/VecTime.html#tzone:org.joda.time.DateTimeZone", "kind" : "val"}, {"label" : "times", "tail" : ": Vec[Long]", "member" : "org.saddle.vec.VecTime.times", "link" : "org\/saddle\/vec\/VecTime.html#times:org.saddle.Vec[Long]", "kind" : "val"}, {"label" : "reshape", "tail" : "(rows: Int, columns: Int): Mat[DateTime]", "member" : "org.saddle.vec.VecDefault.reshape", "link" : "org\/saddle\/vec\/VecTime.html#reshape(rows:Int,columns:Int):org.saddle.Mat[T]", "kind" : "def"}, {"label" : "update", "tail" : "(slice: Slice[Int], value: Vec[DateTime]): Unit", "member" : "org.saddle.vec.VecDefault.update", "link" : "org\/saddle\/vec\/VecTime.html#update(slice:org.saddle.index.Slice[Int],value:org.saddle.Vec[T]):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(slice: Slice[Int], value: DateTime): Unit", "member" : "org.saddle.vec.VecDefault.update", "link" : "org\/saddle\/vec\/VecTime.html#update(slice:org.saddle.index.Slice[Int],value:T):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(offset: Int, value: DateTime): Unit", "member" : "org.saddle.vec.VecDefault.update", "link" : "org\/saddle\/vec\/VecTime.html#update(offset:Int,value:T):Unit", "kind" : "def"}, {"label" : "dropRight", "tail" : "(i: Int): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.dropRight", "link" : "org\/saddle\/vec\/VecTime.html#dropRight(i:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "dropLeft", "tail" : "(i: Int): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.dropLeft", "link" : "org\/saddle\/vec\/VecTime.html#dropLeft(i:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "takeRight", "tail" : "(i: Int): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.takeRight", "link" : "org\/saddle\/vec\/VecTime.html#takeRight(i:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "takeLeft", "tail" : "(i: Int): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.takeLeft", "link" : "org\/saddle\/vec\/VecTime.html#takeLeft(i:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "updated", "tail" : "(offset: Array[Int], value: DateTime): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.updated", "link" : "org\/saddle\/vec\/VecTime.html#updated(offset:Array[Int],value:T):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "updated", "tail" : "(offset: Int, value: DateTime): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.updated", "link" : "org\/saddle\/vec\/VecTime.html#updated(offset:Int,value:T):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "roundTo", "tail" : "(sig: Int)(ev: NUM[DateTime]): Vec[Double]", "member" : "org.saddle.vec.VecDefault.roundTo", "link" : "org\/saddle\/vec\/VecTime.html#roundTo(sig:Int)(implicitev:org.saddle.NUM[T]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.saddle.vec.VecDefault.toString", "link" : "org\/saddle\/vec\/VecTime.html#toString():String", "kind" : "def"}, {"label" : "print", "tail" : "(len: Int, stream: OutputStream): Unit", "member" : "org.saddle.vec.VecDefault.print", "link" : "org\/saddle\/vec\/VecTime.html#print(len:Int,stream:java.io.OutputStream):Unit", "kind" : "def"}, {"label" : "stringify", "tail" : "(len: Int): String", "member" : "org.saddle.vec.VecDefault.stringify", "link" : "org\/saddle\/vec\/VecTime.html#stringify(len:Int):String", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.saddle.vec.VecDefault.equals", "link" : "org\/saddle\/vec\/VecTime.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.saddle.vec.VecDefault.hashCode", "link" : "org\/saddle\/vec\/VecTime.html#hashCode():Int", "kind" : "def"}, {"label" : "median", "tail" : "(n: NUM[DateTime]): Double", "member" : "org.saddle.vec.VecDefault.median", "link" : "org\/saddle\/vec\/VecTime.html#median(implicitn:org.saddle.NUM[T]):Double", "kind" : "def"}, {"label" : "mean", "tail" : "(n: NUM[DateTime]): Double", "member" : "org.saddle.vec.VecDefault.mean", "link" : "org\/saddle\/vec\/VecTime.html#mean(implicitn:org.saddle.NUM[T]):Double", "kind" : "def"}, {"label" : "rank", "tail" : "(tie: RankTie, ascending: Boolean)(na: NUM[DateTime]): Vec[Double]", "member" : "org.saddle.vec.VecDefault.rank", "link" : "org\/saddle\/vec\/VecTime.html#rank(tie:org.saddle.RankTie,ascending:Boolean)(implicitna:org.saddle.NUM[T]):org.saddle.Vec[Double]", "kind" : "def"}, {"label" : "percentile", "tail" : "(tile: Double, method: PctMethod)(na: NUM[DateTime]): Double", "member" : "org.saddle.vec.VecDefault.percentile", "link" : "org\/saddle\/vec\/VecTime.html#percentile(tile:Double,method:org.saddle.PctMethod)(implicitna:org.saddle.NUM[T]):Double", "kind" : "def"}, {"label" : "countif", "tail" : "(a: DateTime): Int", "member" : "org.saddle.vec.VecDefault.countif", "link" : "org\/saddle\/vec\/VecTime.html#countif(a:T):Int", "kind" : "def"}, {"label" : "countif", "tail" : "(test: (DateTime) ⇒ Boolean): Int", "member" : "org.saddle.vec.VecDefault.countif", "link" : "org\/saddle\/vec\/VecTime.html#countif(test:T=>Boolean):Int", "kind" : "def"}, {"label" : "count", "tail" : "(): Int", "member" : "org.saddle.vec.VecDefault.count", "link" : "org\/saddle\/vec\/VecTime.html#count:Int", "kind" : "def"}, {"label" : "argmax", "tail" : "(na: NUM[DateTime], st: ST[DateTime], ord: ORD[DateTime]): Int", "member" : "org.saddle.vec.VecDefault.argmax", "link" : "org\/saddle\/vec\/VecTime.html#argmax(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T],implicitord:org.saddle.ORD[T]):Int", "kind" : "def"}, {"label" : "argmin", "tail" : "(na: NUM[DateTime], st: ST[DateTime], ord: ORD[DateTime]): Int", "member" : "org.saddle.vec.VecDefault.argmin", "link" : "org\/saddle\/vec\/VecTime.html#argmin(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T],implicitord:org.saddle.ORD[T]):Int", "kind" : "def"}, {"label" : "prod", "tail" : "(na: NUM[DateTime], st: ST[DateTime]): DateTime", "member" : "org.saddle.vec.VecDefault.prod", "link" : "org\/saddle\/vec\/VecTime.html#prod(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T]):T", "kind" : "def"}, {"label" : "sum", "tail" : "(na: NUM[DateTime], st: ST[DateTime]): DateTime", "member" : "org.saddle.vec.VecDefault.sum", "link" : "org\/saddle\/vec\/VecTime.html#sum(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T]):T", "kind" : "def"}, {"label" : "max", "tail" : "(na: NUM[DateTime], st: ST[DateTime]): Scalar[DateTime]", "member" : "org.saddle.vec.VecDefault.max", "link" : "org\/saddle\/vec\/VecTime.html#max(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "min", "tail" : "(na: NUM[DateTime], st: ST[DateTime]): Scalar[DateTime]", "member" : "org.saddle.vec.VecDefault.min", "link" : "org\/saddle\/vec\/VecTime.html#min(implicitna:org.saddle.NUM[T],implicitst:org.saddle.ST[T]):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): IndexedSeq[DateTime]", "member" : "org.saddle.vec.VecDefault.toSeq", "link" : "org\/saddle\/vec\/VecTime.html#toSeq:IndexedSeq[T]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(i: Int): (Vec[DateTime], Vec[DateTime])", "member" : "org.saddle.vec.VecDefault.splitAt", "link" : "org\/saddle\/vec\/VecTime.html#splitAt(i:Int):(org.saddle.Vec[T],org.saddle.Vec[T])", "kind" : "def"}, {"label" : "sliceBy", "tail" : "(from: Int, to: Int, stride: Int): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.sliceBy", "link" : "org\/saddle\/vec\/VecTime.html#sliceBy(from:Int,to:Int,stride:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "where", "tail" : "(pred: Vec[Boolean]): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.where", "link" : "org\/saddle\/vec\/VecTime.html#where(pred:org.saddle.Vec[Boolean]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "filterAt", "tail" : "(pred: (Int) ⇒ Boolean): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.filterAt", "link" : "org\/saddle\/vec\/VecTime.html#filterAt(pred:Int=>Boolean):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (DateTime) ⇒ Boolean): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.filter", "link" : "org\/saddle\/vec\/VecTime.html#filter(pred:T=>Boolean):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "exists", "tail" : "(pred: (DateTime) ⇒ Boolean): Boolean", "member" : "org.saddle.vec.VecDefault.exists", "link" : "org\/saddle\/vec\/VecTime.html#exists(pred:T=>Boolean):Boolean", "kind" : "def"}, {"label" : "findOne", "tail" : "(pred: (DateTime) ⇒ Boolean): Int", "member" : "org.saddle.vec.VecDefault.findOne", "link" : "org\/saddle\/vec\/VecTime.html#findOne(pred:T=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(pred: (DateTime) ⇒ Boolean): Vec[Int]", "member" : "org.saddle.vec.VecDefault.find", "link" : "org\/saddle\/vec\/VecTime.html#find(pred:T=>Boolean):org.saddle.Vec[Int]", "kind" : "def"}, {"label" : "forall", "tail" : "(pred: (DateTime) ⇒ Boolean)(op: (DateTime) ⇒ Unit): Unit", "member" : "org.saddle.vec.VecDefault.forall", "link" : "org\/saddle\/vec\/VecTime.html#forall(pred:T=>Boolean)(op:T=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(op: (DateTime) ⇒ Unit): Unit", "member" : "org.saddle.vec.VecDefault.foreach", "link" : "org\/saddle\/vec\/VecTime.html#foreach(op:T=>Unit):Unit", "kind" : "def"}, {"label" : "mask", "tail" : "(f: (DateTime) ⇒ Boolean): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.mask", "link" : "org\/saddle\/vec\/VecTime.html#mask(f:T=>Boolean):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "mask", "tail" : "(m: Vec[Boolean]): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.mask", "link" : "org\/saddle\/vec\/VecTime.html#mask(m:org.saddle.Vec[Boolean]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "org.saddle.vec.VecDefault.isEmpty", "link" : "org\/saddle\/vec\/VecTime.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "tail", "tail" : "(n: Int): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.tail", "link" : "org\/saddle\/vec\/VecTime.html#tail(n:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "head", "tail" : "(n: Int): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.head", "link" : "org\/saddle\/vec\/VecTime.html#head(n:Int):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "last", "tail" : "(): Scalar[DateTime]", "member" : "org.saddle.vec.VecDefault.last", "link" : "org\/saddle\/vec\/VecTime.html#last:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "first", "tail" : "(): Scalar[DateTime]", "member" : "org.saddle.vec.VecDefault.first", "link" : "org\/saddle\/vec\/VecTime.html#first:org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(rng: Slice[Int]): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.apply", "link" : "org\/saddle\/vec\/VecTime.html#apply(rng:org.saddle.index.Slice[Int]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(locs: Array[Int]): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.apply", "link" : "org\/saddle\/vec\/VecTime.html#apply(locs:Array[Int]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(locs: Vec[Int]): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.apply", "link" : "org\/saddle\/vec\/VecTime.html#apply(locs:org.saddle.Vec[Int]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(locs: Int*): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.apply", "link" : "org\/saddle\/vec\/VecTime.html#apply(locs:Int*):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "at", "tail" : "(loc: Int): Scalar[DateTime]", "member" : "org.saddle.vec.VecDefault.at", "link" : "org\/saddle\/vec\/VecTime.html#at(loc:Int):org.saddle.scalar.Scalar[T]", "kind" : "def"}, {"label" : "concat", "tail" : "(v: Vec[DateTime]): Vec[DateTime]", "member" : "org.saddle.vec.VecDefault.concat", "link" : "org\/saddle\/vec\/VecTime.html#concat(v:org.saddle.Vec[T]):org.saddle.Vec[T]", "kind" : "def"}, {"label" : "contents", "tail" : "(): Array[DateTime]", "member" : "org.saddle.vec.VecDefault.contents", "link" : "org\/saddle\/vec\/VecTime.html#contents:Array[T]", "kind" : "def"}, {"label" : "needsCopy", "tail" : "(): Boolean", "member" : "org.saddle.vec.VecDefault.needsCopy", "link" : "org\/saddle\/vec\/VecTime.html#needsCopy:Boolean", "kind" : "def"}, {"label" : "**=", "tail" : "(other: B)(op: BinOpInPlace[Power, Vec[DateTime], B]): Unit", "member" : "org.saddle.ops.NumericOps.**=", "link" : "org\/saddle\/vec\/VecTime.html#**=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Power,This,B]):Unit", "kind" : "def"}, {"label" : "%=", "tail" : "(other: B)(op: BinOpInPlace[Mod, Vec[DateTime], B]): Unit", "member" : "org.saddle.ops.NumericOps.%=", "link" : "org\/saddle\/vec\/VecTime.html#%=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Mod,This,B]):Unit", "kind" : "def"}, {"label" : "\/=", "tail" : "(other: B)(op: BinOpInPlace[Divide, Vec[DateTime], B]): Unit", "member" : "org.saddle.ops.NumericOps.\/=", "link" : "org\/saddle\/vec\/VecTime.html#\/=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Divide,This,B]):Unit", "kind" : "def"}, {"label" : "*=", "tail" : "(other: B)(op: BinOpInPlace[Multiply, Vec[DateTime], B]): Unit", "member" : "org.saddle.ops.NumericOps.*=", "link" : "org\/saddle\/vec\/VecTime.html#*=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Multiply,This,B]):Unit", "kind" : "def"}, {"label" : "-=", "tail" : "(other: B)(op: BinOpInPlace[Subtract, Vec[DateTime], B]): Unit", "member" : "org.saddle.ops.NumericOps.-=", "link" : "org\/saddle\/vec\/VecTime.html#-=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Subtract,This,B]):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(other: B)(op: BinOpInPlace[Add, Vec[DateTime], B]): Unit", "member" : "org.saddle.ops.NumericOps.+=", "link" : "org\/saddle\/vec\/VecTime.html#+=[B](other:B)(implicitop:org.saddle.ops.BinOpInPlace[org.saddle.ops.Add,This,B]):Unit", "kind" : "def"}, {"label" : "outer", "tail" : "(other: B)(op: BinOp[OuterProd, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.outer", "link" : "org\/saddle\/vec\/VecTime.html#outer[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.OuterProd,This,B,That]):That", "kind" : "def"}, {"label" : "dot", "tail" : "(other: B)(op: BinOp[InnerProd, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.dot", "link" : "org\/saddle\/vec\/VecTime.html#dot[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.InnerProd,This,B,That]):That", "kind" : "def"}, {"label" : "xor", "tail" : "(other: B)(op: BinOp[XorOp, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.xor", "link" : "org\/saddle\/vec\/VecTime.html#xor[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.XorOp,This,B,That]):That", "kind" : "def"}, {"label" : "&&", "tail" : "(other: B)(op: BinOp[AndOp, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.&&", "link" : "org\/saddle\/vec\/VecTime.html#&&[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.AndOp,This,B,That]):That", "kind" : "def"}, {"label" : "||", "tail" : "(other: B)(op: BinOp[OrOp, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.||", "link" : "org\/saddle\/vec\/VecTime.html#||[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.OrOp,This,B,That]):That", "kind" : "def"}, {"label" : "<>", "tail" : "(other: B)(op: BinOp[NeqOp, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.<>", "link" : "org\/saddle\/vec\/VecTime.html#<>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.NeqOp,This,B,That]):That", "kind" : "def"}, {"label" : "=?", "tail" : "(other: B)(op: BinOp[EqOp, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.=?", "link" : "org\/saddle\/vec\/VecTime.html#=?[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.EqOp,This,B,That]):That", "kind" : "def"}, {"label" : ">=", "tail" : "(other: B)(op: BinOp[GteOp, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.>=", "link" : "org\/saddle\/vec\/VecTime.html#>=[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.GteOp,This,B,That]):That", "kind" : "def"}, {"label" : ">", "tail" : "(other: B)(op: BinOp[GtOp, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.>", "link" : "org\/saddle\/vec\/VecTime.html#>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.GtOp,This,B,That]):That", "kind" : "def"}, {"label" : "<=", "tail" : "(other: B)(op: BinOp[LteOp, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.<=", "link" : "org\/saddle\/vec\/VecTime.html#<=[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.LteOp,This,B,That]):That", "kind" : "def"}, {"label" : "<", "tail" : "(other: B)(op: BinOp[LtOp, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.<", "link" : "org\/saddle\/vec\/VecTime.html#<[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.LtOp,This,B,That]):That", "kind" : "def"}, {"label" : ">>>", "tail" : "(other: B)(op: BinOp[BitUShr, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.>>>", "link" : "org\/saddle\/vec\/VecTime.html#>>>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitUShr,This,B,That]):That", "kind" : "def"}, {"label" : ">>", "tail" : "(other: B)(op: BinOp[BitShr, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.>>", "link" : "org\/saddle\/vec\/VecTime.html#>>[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitShr,This,B,That]):That", "kind" : "def"}, {"label" : "<<", "tail" : "(other: B)(op: BinOp[BitShl, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.<<", "link" : "org\/saddle\/vec\/VecTime.html#<<[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitShl,This,B,That]):That", "kind" : "def"}, {"label" : "^", "tail" : "(other: B)(op: BinOp[BitXor, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.^", "link" : "org\/saddle\/vec\/VecTime.html#^[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitXor,This,B,That]):That", "kind" : "def"}, {"label" : "|", "tail" : "(other: B)(op: BinOp[BitOr, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.|", "link" : "org\/saddle\/vec\/VecTime.html#|[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitOr,This,B,That]):That", "kind" : "def"}, {"label" : "&", "tail" : "(other: B)(op: BinOp[BitAnd, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.&", "link" : "org\/saddle\/vec\/VecTime.html#&[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.BitAnd,This,B,That]):That", "kind" : "def"}, {"label" : "**", "tail" : "(other: B)(op: BinOp[Power, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.**", "link" : "org\/saddle\/vec\/VecTime.html#**[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Power,This,B,That]):That", "kind" : "def"}, {"label" : "%", "tail" : "(other: B)(op: BinOp[Mod, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.%", "link" : "org\/saddle\/vec\/VecTime.html#%[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Mod,This,B,That]):That", "kind" : "def"}, {"label" : "*", "tail" : "(other: B)(op: BinOp[Multiply, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.*", "link" : "org\/saddle\/vec\/VecTime.html#*[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Multiply,This,B,That]):That", "kind" : "def"}, {"label" : "\/", "tail" : "(other: B)(op: BinOp[Divide, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.\/", "link" : "org\/saddle\/vec\/VecTime.html#\/[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Divide,This,B,That]):That", "kind" : "def"}, {"label" : "-", "tail" : "(other: B)(op: BinOp[Subtract, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.-", "link" : "org\/saddle\/vec\/VecTime.html#-[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Subtract,This,B,That]):That", "kind" : "def"}, {"label" : "+", "tail" : "(other: B)(op: BinOp[Add, Vec[DateTime], B, That]): That", "member" : "org.saddle.ops.NumericOps.+", "link" : "org\/saddle\/vec\/VecTime.html#+[B,That](other:B)(implicitop:org.saddle.ops.BinOp[org.saddle.ops.Add,This,B,That]):That", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/vec\/VecTime.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/vec\/VecTime.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/vec\/VecTime.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/vec\/VecTime.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/vec\/VecTime.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/vec\/VecTime.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/vec\/VecTime.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/vec\/VecTime.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/vec\/VecTime.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/vec\/VecTime.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/vec\/VecTime.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/vec\/VecTime.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/vec\/VecTime.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/vec\/VecTime.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/vec\/VecTime.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/vec\/VecTime.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "concat", "tail" : "(arr: IndexedSeq[Vec[DateTime]]): VecTime", "member" : "org.saddle.vec.VecTime.concat", "link" : "org\/saddle\/vec\/VecTime$.html#concat(arr:IndexedSeq[org.saddle.Vec[org.joda.time.DateTime]]):org.saddle.vec.VecTime", "kind" : "def"}, {"label" : "apply", "tail" : "(timeSeq: DateTime*): VecTime", "member" : "org.saddle.vec.VecTime.apply", "link" : "org\/saddle\/vec\/VecTime$.html#apply(timeSeq:org.joda.time.DateTime*):org.saddle.vec.VecTime", "kind" : "def"}, {"label" : "apply", "tail" : "(times: Array[DateTime]): VecTime", "member" : "org.saddle.vec.VecTime.apply", "link" : "org\/saddle\/vec\/VecTime$.html#apply(times:Array[org.joda.time.DateTime]):org.saddle.vec.VecTime", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/vec\/VecTime$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/vec\/VecTime$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/vec\/VecTime$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/vec\/VecTime$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/vec\/VecTime$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/vec\/VecTime$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/vec\/VecTime$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/vec\/VecTime$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/vec\/VecTime$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/vec\/VecTime$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/vec\/VecTime$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/vec\/VecTime$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/vec\/VecTime$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/vec\/VecTime$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/vec\/VecTime$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/vec\/VecTime$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/vec\/VecTime$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/vec\/VecTime$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/vec\/VecTime$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/vec\/VecTime.html", "kind" : "class"}], "org.saddle.util" : [{"name" : "org.saddle.util.Concat", "shortDescription" : "Provides a way to append two arrays of possibly different types together byintelligently promoting primitive types where possible.", "object" : "org\/saddle\/util\/Concat$.html", "members_object" : [{"label" : "append", "tail" : "(a1: Array[A], a2: Array[A])(st: ST[A]): Array[A]", "member" : "org.saddle.util.Concat.append", "link" : "org\/saddle\/util\/Concat$.html#append[A](a1:Array[A],a2:Array[A])(implicitst:org.saddle.ST[A]):Array[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/util\/Concat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/util\/Concat$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/util\/Concat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/util\/Concat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/util\/Concat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/util\/Concat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/util\/Concat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/util\/Concat$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/util\/Concat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/util\/Concat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/util\/Concat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/util\/Concat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/util\/Concat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/util\/Concat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/util\/Concat$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/util\/Concat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/util\/Concat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/util\/Concat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/util\/Concat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.util.DoubleMap", "shortDescription" : "", "members_class" : [{"label" : "contains", "tail" : "(k: Double): Boolean", "member" : "org.saddle.util.DoubleMap.contains", "link" : "org\/saddle\/util\/DoubleMap.html#contains(k:Double):Boolean", "kind" : "def"}, {"label" : "foreachKey", "tail" : "(f: (Double) ⇒ A): Unit", "member" : "org.saddle.util.DoubleMap.foreachKey", "link" : "org\/saddle\/util\/DoubleMap.html#foreachKey[A](f:Double=>A):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(k: Double): Option[Int]", "member" : "org.saddle.util.DoubleMap.get", "link" : "org\/saddle\/util\/DoubleMap.html#get(k:Double):Option[Int]", "kind" : "def"}, {"label" : "update", "tail" : "(key: Double, value: Int): Unit", "member" : "org.saddle.util.DoubleMap.update", "link" : "org\/saddle\/util\/DoubleMap.html#update(key:Double,value:Int):Unit", "kind" : "def"}, {"label" : "lmap", "tail" : ": LongMap", "member" : "org.saddle.util.DoubleMap.lmap", "link" : "org\/saddle\/util\/DoubleMap.html#lmap:org.saddle.util.LongMap", "kind" : "val"}, {"member" : "org.saddle.util.DoubleMap#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/util\/DoubleMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/util\/DoubleMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/util\/DoubleMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/util\/DoubleMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/util\/DoubleMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/util\/DoubleMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/util\/DoubleMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/util\/DoubleMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/util\/DoubleMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/util\/DoubleMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/util\/DoubleMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/util\/DoubleMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/util\/DoubleMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/util\/DoubleMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/util\/DoubleMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/util\/DoubleMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/util\/DoubleMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/util\/DoubleMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/util\/DoubleMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/util\/DoubleMap.html", "kind" : "class"}, {"name" : "org.saddle.util.IntMap", "shortDescription" : "", "members_class" : [{"label" : "foreachKey", "tail" : "(f: (Int) ⇒ A): Unit", "member" : "org.saddle.util.IntMap.foreachKey", "link" : "org\/saddle\/util\/IntMap.html#foreachKey[A](f:Int=>A):Unit", "kind" : "def"}, {"label" : "contains", "tail" : "(k: Int): Boolean", "member" : "org.saddle.util.IntMap.contains", "link" : "org\/saddle\/util\/IntMap.html#contains(k:Int):Boolean", "kind" : "def"}, {"label" : "get", "tail" : "(k: Int): Option[Int]", "member" : "org.saddle.util.IntMap.get", "link" : "org\/saddle\/util\/IntMap.html#get(k:Int):Option[Int]", "kind" : "def"}, {"label" : "update", "tail" : "(key: Int, value: Int): Unit", "member" : "org.saddle.util.IntMap.update", "link" : "org\/saddle\/util\/IntMap.html#update(key:Int,value:Int):Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "org.saddle.util.IntMap.size", "link" : "org\/saddle\/util\/IntMap.html#size:Int", "kind" : "def"}, {"label" : "lmap", "tail" : ": LongMap", "member" : "org.saddle.util.IntMap.lmap", "link" : "org\/saddle\/util\/IntMap.html#lmap:org.saddle.util.LongMap", "kind" : "val"}, {"member" : "org.saddle.util.IntMap#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/util\/IntMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/util\/IntMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/util\/IntMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/util\/IntMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/util\/IntMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/util\/IntMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/util\/IntMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/util\/IntMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/util\/IntMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/util\/IntMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/util\/IntMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/util\/IntMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/util\/IntMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/util\/IntMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/util\/IntMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/util\/IntMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/util\/IntMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/util\/IntMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/util\/IntMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/util\/IntMap.html", "kind" : "class"}, {"name" : "org.saddle.util.LongMap", "shortDescription" : "This class implements mutable maps with Long keys based on a hash table with open addressing.", "object" : "org\/saddle\/util\/LongMap$.html", "members_class" : [{"label" : "foreachKey", "tail" : "(f: (Long) ⇒ A): Unit", "member" : "org.saddle.util.LongMap.foreachKey", "link" : "org\/saddle\/util\/LongMap.html#foreachKey[A](f:Long=>A):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(key: Long, value: Int): Unit", "member" : "org.saddle.util.LongMap.update", "link" : "org\/saddle\/util\/LongMap.html#update(key:Long,value:Int):Unit", "kind" : "def"}, {"label" : "repack", "tail" : "(): Unit", "member" : "org.saddle.util.LongMap.repack", "link" : "org\/saddle\/util\/LongMap.html#repack():Unit", "kind" : "def"}, {"label" : "get", "tail" : "(key: Long): Option[Int]", "member" : "org.saddle.util.LongMap.get", "link" : "org\/saddle\/util\/LongMap.html#get(key:Long):Option[Int]", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Long): Boolean", "member" : "org.saddle.util.LongMap.contains", "link" : "org\/saddle\/util\/LongMap.html#contains(key:Long):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "org.saddle.util.LongMap.size", "link" : "org\/saddle\/util\/LongMap.html#size:Int", "kind" : "def"}, {"label" : "initializeTo", "tail" : "(m: Int, ek: Int, zv: Int, mv: Int, sz: Int, vc: Int, kz: Array[Long], vz: Array[Int]): Unit", "member" : "org.saddle.util.LongMap.initializeTo", "link" : "org\/saddle\/util\/LongMap.html#initializeTo(m:Int,ek:Int,zv:Int,mv:Int,sz:Int,vc:Int,kz:Array[Long],vz:Array[Int]):Unit", "kind" : "def"}, {"member" : "org.saddle.util.LongMap#<init>", "error" : "unsupported entity"}, {"member" : "org.saddle.util.LongMap#<init>", "error" : "unsupported entity"}, {"member" : "org.saddle.util.LongMap#<init>", "error" : "unsupported entity"}, {"member" : "org.saddle.util.LongMap#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/util\/LongMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/util\/LongMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/util\/LongMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/util\/LongMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/util\/LongMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/util\/LongMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/util\/LongMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/util\/LongMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/util\/LongMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/util\/LongMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/util\/LongMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/util\/LongMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/util\/LongMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/util\/LongMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/util\/LongMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/util\/LongMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/util\/LongMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/util\/LongMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/util\/LongMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "empty", "tail" : "(): LongMap", "member" : "org.saddle.util.LongMap.empty", "link" : "org\/saddle\/util\/LongMap$.html#empty:org.saddle.util.LongMap", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/util\/LongMap$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/util\/LongMap$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/util\/LongMap$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/util\/LongMap$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/util\/LongMap$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/util\/LongMap$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/util\/LongMap$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/util\/LongMap$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/util\/LongMap$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/util\/LongMap$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/util\/LongMap$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/util\/LongMap$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/util\/LongMap$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/util\/LongMap$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/util\/LongMap$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/util\/LongMap$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/util\/LongMap$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/util\/LongMap$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/util\/LongMap$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/util\/LongMap.html", "kind" : "class"}], "org" : [], "org.saddle.mat" : [{"name" : "org.saddle.mat.MatCols", "shortDescription" : "", "object" : "org\/saddle\/mat\/MatCols$.html", "members_object" : [{"label" : "apply", "tail" : "(mat: Mat[A])(arg0: ST[A]): MatCols[A]", "member" : "org.saddle.mat.MatCols.apply", "link" : "org\/saddle\/mat\/MatCols$.html#apply[A](mat:org.saddle.Mat[A])(implicitevidence$5:org.saddle.ST[A]):org.saddle.mat.MatCols[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(cols: Array[Vec[A]])(arg0: ST[A]): MatCols[A]", "member" : "org.saddle.mat.MatCols.apply", "link" : "org\/saddle\/mat\/MatCols$.html#apply[A](cols:Array[org.saddle.Vec[A]])(implicitevidence$4:org.saddle.ST[A]):org.saddle.mat.MatCols[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(cols: Vec[A]*)(arg0: ST[A]): MatCols[A]", "member" : "org.saddle.mat.MatCols.apply", "link" : "org\/saddle\/mat\/MatCols$.html#apply[A](cols:org.saddle.Vec[A]*)(implicitevidence$3:org.saddle.ST[A]):org.saddle.mat.MatCols[A]", "kind" : "def"}, {"label" : "empty", "tail" : "(arg0: ST[A]): MatCols[A]", "member" : "org.saddle.mat.MatCols.empty", "link" : "org\/saddle\/mat\/MatCols$.html#empty[A](implicitevidence$2:org.saddle.ST[A]):org.saddle.mat.MatCols[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/mat\/MatCols$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/mat\/MatCols$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/mat\/MatCols$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/mat\/MatCols$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/mat\/MatCols$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/mat\/MatCols$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/mat\/MatCols$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/mat\/MatCols$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/mat\/MatCols$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/mat\/MatCols$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/mat\/MatCols$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/mat\/MatCols$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/mat\/MatCols$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/mat\/MatCols$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/mat\/MatCols$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/mat\/MatCols$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/mat\/MatCols$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/mat\/MatCols$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/mat\/MatCols$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.saddle.mat.MatMath", "shortDescription" : "Matrix mathematical helper routines.", "object" : "org\/saddle\/mat\/MatMath$.html", "members_object" : [{"label" : "demeaned", "tail" : "(mat: Mat[Double]): Mat[Double]", "member" : "org.saddle.mat.MatMath.demeaned", "link" : "org\/saddle\/mat\/MatMath$.html#demeaned(mat:org.saddle.Mat[Double]):org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "cov", "tail" : "(mat: Mat[Double], corr: Boolean): Mat[Double]", "member" : "org.saddle.mat.MatMath.cov", "link" : "org\/saddle\/mat\/MatMath$.html#cov(mat:org.saddle.Mat[Double],corr:Boolean):org.saddle.Mat[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/mat\/MatMath$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/mat\/MatMath$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/mat\/MatMath$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/mat\/MatMath$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/mat\/MatMath$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/mat\/MatMath$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/mat\/MatMath$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/mat\/MatMath$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/mat\/MatMath$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/mat\/MatMath$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/mat\/MatMath$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/mat\/MatMath$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/mat\/MatMath$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/mat\/MatMath$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/mat\/MatMath$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/mat\/MatMath$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/mat\/MatMath$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/mat\/MatMath$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/mat\/MatMath$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.saddle.locator" : [{"name" : "org.saddle.locator.Locator", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/locator\/Locator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/locator\/Locator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/locator\/Locator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/locator\/Locator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/locator\/Locator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/locator\/Locator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/locator\/Locator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/Locator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/Locator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/Locator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/locator\/Locator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/locator\/Locator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/locator\/Locator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/locator\/Locator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/locator\/Locator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/locator\/Locator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/locator\/Locator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/locator\/Locator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/locator\/Locator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "org.saddle.locator.Locator.size", "link" : "org\/saddle\/locator\/Locator.html#size:Int", "kind" : "abstract def"}, {"label" : "counts", "tail" : "(): Array[Int]", "member" : "org.saddle.locator.Locator.counts", "link" : "org\/saddle\/locator\/Locator.html#counts():Array[Int]", "kind" : "abstract def"}, {"label" : "keys", "tail" : "(): Array[T]", "member" : "org.saddle.locator.Locator.keys", "link" : "org\/saddle\/locator\/Locator.html#keys():Array[T]", "kind" : "abstract def"}, {"label" : "inc", "tail" : "(key: T): Int", "member" : "org.saddle.locator.Locator.inc", "link" : "org\/saddle\/locator\/Locator.html#inc(key:T):Int", "kind" : "abstract def"}, {"label" : "count", "tail" : "(key: T): Int", "member" : "org.saddle.locator.Locator.count", "link" : "org\/saddle\/locator\/Locator.html#count(key:T):Int", "kind" : "abstract def"}, {"label" : "put", "tail" : "(key: T, value: Int): Unit", "member" : "org.saddle.locator.Locator.put", "link" : "org\/saddle\/locator\/Locator.html#put(key:T,value:Int):Unit", "kind" : "abstract def"}, {"label" : "get", "tail" : "(key: T): Int", "member" : "org.saddle.locator.Locator.get", "link" : "org\/saddle\/locator\/Locator.html#get(key:T):Int", "kind" : "abstract def"}, {"label" : "contains", "tail" : "(key: T): Boolean", "member" : "org.saddle.locator.Locator.contains", "link" : "org\/saddle\/locator\/Locator.html#contains(key:T):Boolean", "kind" : "abstract def"}], "shortDescription" : "The Locator class provides a mapping from a key to the first location of that keywithin a corresponding org.saddle.Index containing at least one of that key.", "object" : "org\/saddle\/locator\/Locator$.html", "members_object" : [{"label" : "apply", "tail" : "(sz: Int)(st: ST[C]): Locator[C]", "member" : "org.saddle.locator.Locator.apply", "link" : "org\/saddle\/locator\/Locator$.html#apply[C](sz:Int)(implicitst:org.saddle.ST[C]):org.saddle.locator.Locator[C]", "kind" : "def"}, {"label" : "INIT_CAPACITY", "tail" : ": Int", "member" : "org.saddle.locator.Locator.INIT_CAPACITY", "link" : "org\/saddle\/locator\/Locator$.html#INIT_CAPACITY:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/locator\/Locator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/locator\/Locator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/locator\/Locator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/locator\/Locator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/locator\/Locator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/locator\/Locator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/locator\/Locator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/Locator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/Locator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/Locator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/locator\/Locator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/locator\/Locator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/locator\/Locator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/locator\/Locator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/locator\/Locator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/locator\/Locator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/locator\/Locator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/locator\/Locator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/locator\/Locator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/saddle\/locator\/Locator.html", "kind" : "trait"}, {"name" : "org.saddle.locator.LocatorAny", "shortDescription" : "", "members_class" : [{"label" : "size", "tail" : "(): Int", "member" : "org.saddle.locator.LocatorAny.size", "link" : "org\/saddle\/locator\/LocatorAny.html#size:Int", "kind" : "def"}, {"label" : "counts", "tail" : "(): Array[Int]", "member" : "org.saddle.locator.LocatorAny.counts", "link" : "org\/saddle\/locator\/LocatorAny.html#counts():Array[Int]", "kind" : "def"}, {"label" : "keys", "tail" : "(): Array[T]", "member" : "org.saddle.locator.LocatorAny.keys", "link" : "org\/saddle\/locator\/LocatorAny.html#keys():Array[T]", "kind" : "def"}, {"label" : "inc", "tail" : "(key: T): Int", "member" : "org.saddle.locator.LocatorAny.inc", "link" : "org\/saddle\/locator\/LocatorAny.html#inc(key:T):Int", "kind" : "def"}, {"label" : "count", "tail" : "(key: T): Int", "member" : "org.saddle.locator.LocatorAny.count", "link" : "org\/saddle\/locator\/LocatorAny.html#count(key:T):Int", "kind" : "def"}, {"label" : "put", "tail" : "(key: T, value: Int): Unit", "member" : "org.saddle.locator.LocatorAny.put", "link" : "org\/saddle\/locator\/LocatorAny.html#put(key:T,value:Int):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(key: T): Int", "member" : "org.saddle.locator.LocatorAny.get", "link" : "org\/saddle\/locator\/LocatorAny.html#get(key:T):Int", "kind" : "def"}, {"label" : "contains", "tail" : "(key: T): Boolean", "member" : "org.saddle.locator.LocatorAny.contains", "link" : "org\/saddle\/locator\/LocatorAny.html#contains(key:T):Boolean", "kind" : "def"}, {"label" : "cts", "tail" : ": HashMap[T, Int]", "member" : "org.saddle.locator.LocatorAny.cts", "link" : "org\/saddle\/locator\/LocatorAny.html#cts:scala.collection.mutable.HashMap[T,Int]", "kind" : "val"}, {"label" : "map", "tail" : ": HashMap[T, Int]", "member" : "org.saddle.locator.LocatorAny.map", "link" : "org\/saddle\/locator\/LocatorAny.html#map:scala.collection.mutable.HashMap[T,Int]", "kind" : "val"}, {"label" : "keyOrder", "tail" : ": Buffer[T]", "member" : "org.saddle.locator.LocatorAny.keyOrder", "link" : "org\/saddle\/locator\/LocatorAny.html#keyOrder:org.saddle.Buffer[T]", "kind" : "val"}, {"member" : "org.saddle.locator.LocatorAny#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/locator\/LocatorAny.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/locator\/LocatorAny.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/locator\/LocatorAny.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/locator\/LocatorAny.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/locator\/LocatorAny.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/locator\/LocatorAny.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/locator\/LocatorAny.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/LocatorAny.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/LocatorAny.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/LocatorAny.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/locator\/LocatorAny.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/locator\/LocatorAny.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/locator\/LocatorAny.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/locator\/LocatorAny.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/locator\/LocatorAny.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/locator\/LocatorAny.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/locator\/LocatorAny.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/locator\/LocatorAny.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/locator\/LocatorAny.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/locator\/LocatorAny.html", "kind" : "class"}, {"name" : "org.saddle.locator.LocatorBool", "shortDescription" : "A bool-to-integer hash map", "members_class" : [{"label" : "count", "tail" : "(key: Boolean): Int", "member" : "org.saddle.locator.LocatorBool.count", "link" : "org\/saddle\/locator\/LocatorBool.html#count(key:Boolean):Int", "kind" : "def"}, {"label" : "inc", "tail" : "(key: Boolean): Int", "member" : "org.saddle.locator.LocatorBool.inc", "link" : "org\/saddle\/locator\/LocatorBool.html#inc(key:Boolean):Int", "kind" : "def"}, {"label" : "counts", "tail" : "(): Array[Int]", "member" : "org.saddle.locator.LocatorBool.counts", "link" : "org\/saddle\/locator\/LocatorBool.html#counts():Array[Int]", "kind" : "def"}, {"label" : "keys", "tail" : "(): Array[Boolean]", "member" : "org.saddle.locator.LocatorBool.keys", "link" : "org\/saddle\/locator\/LocatorBool.html#keys():Array[Boolean]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "org.saddle.locator.LocatorBool.size", "link" : "org\/saddle\/locator\/LocatorBool.html#size:Int", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Boolean): Boolean", "member" : "org.saddle.locator.LocatorBool.contains", "link" : "org\/saddle\/locator\/LocatorBool.html#contains(key:Boolean):Boolean", "kind" : "def"}, {"label" : "put", "tail" : "(key: Boolean, value: Int): Unit", "member" : "org.saddle.locator.LocatorBool.put", "link" : "org\/saddle\/locator\/LocatorBool.html#put(key:Boolean,value:Int):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(key: Boolean): Int", "member" : "org.saddle.locator.LocatorBool.get", "link" : "org\/saddle\/locator\/LocatorBool.html#get(key:Boolean):Int", "kind" : "def"}, {"label" : "cts", "tail" : ": Array[Int]", "member" : "org.saddle.locator.LocatorBool.cts", "link" : "org\/saddle\/locator\/LocatorBool.html#cts:Array[Int]", "kind" : "val"}, {"label" : "map", "tail" : ": Array[Int]", "member" : "org.saddle.locator.LocatorBool.map", "link" : "org\/saddle\/locator\/LocatorBool.html#map:Array[Int]", "kind" : "val"}, {"member" : "org.saddle.locator.LocatorBool#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/locator\/LocatorBool.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/locator\/LocatorBool.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/locator\/LocatorBool.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/locator\/LocatorBool.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/locator\/LocatorBool.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/locator\/LocatorBool.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/locator\/LocatorBool.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/LocatorBool.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/LocatorBool.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/LocatorBool.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/locator\/LocatorBool.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/locator\/LocatorBool.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/locator\/LocatorBool.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/locator\/LocatorBool.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/locator\/LocatorBool.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/locator\/LocatorBool.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/locator\/LocatorBool.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/locator\/LocatorBool.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/locator\/LocatorBool.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/locator\/LocatorBool.html", "kind" : "class"}, {"name" : "org.saddle.locator.LocatorDouble", "shortDescription" : "", "members_class" : [{"label" : "size", "tail" : "(): Int", "member" : "org.saddle.locator.LocatorDouble.size", "link" : "org\/saddle\/locator\/LocatorDouble.html#size:Int", "kind" : "def"}, {"label" : "counts", "tail" : "(): Array[Int]", "member" : "org.saddle.locator.LocatorDouble.counts", "link" : "org\/saddle\/locator\/LocatorDouble.html#counts():Array[Int]", "kind" : "def"}, {"label" : "keys", "tail" : "(): Array[Double]", "member" : "org.saddle.locator.LocatorDouble.keys", "link" : "org\/saddle\/locator\/LocatorDouble.html#keys():Array[Double]", "kind" : "def"}, {"label" : "inc", "tail" : "(key: Double): Int", "member" : "org.saddle.locator.LocatorDouble.inc", "link" : "org\/saddle\/locator\/LocatorDouble.html#inc(key:Double):Int", "kind" : "def"}, {"label" : "count", "tail" : "(key: Double): Int", "member" : "org.saddle.locator.LocatorDouble.count", "link" : "org\/saddle\/locator\/LocatorDouble.html#count(key:Double):Int", "kind" : "def"}, {"label" : "put", "tail" : "(key: Double, value: Int): Unit", "member" : "org.saddle.locator.LocatorDouble.put", "link" : "org\/saddle\/locator\/LocatorDouble.html#put(key:Double,value:Int):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(key: Double): Int", "member" : "org.saddle.locator.LocatorDouble.get", "link" : "org\/saddle\/locator\/LocatorDouble.html#get(key:Double):Int", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Double): Boolean", "member" : "org.saddle.locator.LocatorDouble.contains", "link" : "org\/saddle\/locator\/LocatorDouble.html#contains(key:Double):Boolean", "kind" : "def"}, {"label" : "cts", "tail" : ": DoubleMap", "member" : "org.saddle.locator.LocatorDouble.cts", "link" : "org\/saddle\/locator\/LocatorDouble.html#cts:org.saddle.util.DoubleMap", "kind" : "val"}, {"label" : "map", "tail" : ": DoubleMap", "member" : "org.saddle.locator.LocatorDouble.map", "link" : "org\/saddle\/locator\/LocatorDouble.html#map:org.saddle.util.DoubleMap", "kind" : "val"}, {"label" : "keyOrder", "tail" : ": Buffer[Double]", "member" : "org.saddle.locator.LocatorDouble.keyOrder", "link" : "org\/saddle\/locator\/LocatorDouble.html#keyOrder:org.saddle.Buffer[Double]", "kind" : "val"}, {"member" : "org.saddle.locator.LocatorDouble#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/locator\/LocatorDouble.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/locator\/LocatorDouble.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/locator\/LocatorDouble.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/locator\/LocatorDouble.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/locator\/LocatorDouble.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/locator\/LocatorDouble.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/locator\/LocatorDouble.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/LocatorDouble.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/LocatorDouble.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/LocatorDouble.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/locator\/LocatorDouble.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/locator\/LocatorDouble.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/locator\/LocatorDouble.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/locator\/LocatorDouble.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/locator\/LocatorDouble.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/locator\/LocatorDouble.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/locator\/LocatorDouble.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/locator\/LocatorDouble.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/locator\/LocatorDouble.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/locator\/LocatorDouble.html", "kind" : "class"}, {"name" : "org.saddle.locator.LocatorInt", "shortDescription" : "", "members_class" : [{"label" : "size", "tail" : "(): Int", "member" : "org.saddle.locator.LocatorInt.size", "link" : "org\/saddle\/locator\/LocatorInt.html#size:Int", "kind" : "def"}, {"label" : "counts", "tail" : "(): Array[Int]", "member" : "org.saddle.locator.LocatorInt.counts", "link" : "org\/saddle\/locator\/LocatorInt.html#counts():Array[Int]", "kind" : "def"}, {"label" : "keys", "tail" : "(): Array[Int]", "member" : "org.saddle.locator.LocatorInt.keys", "link" : "org\/saddle\/locator\/LocatorInt.html#keys():Array[Int]", "kind" : "def"}, {"label" : "inc", "tail" : "(key: Int): Int", "member" : "org.saddle.locator.LocatorInt.inc", "link" : "org\/saddle\/locator\/LocatorInt.html#inc(key:Int):Int", "kind" : "def"}, {"label" : "count", "tail" : "(key: Int): Int", "member" : "org.saddle.locator.LocatorInt.count", "link" : "org\/saddle\/locator\/LocatorInt.html#count(key:Int):Int", "kind" : "def"}, {"label" : "put", "tail" : "(key: Int, value: Int): Unit", "member" : "org.saddle.locator.LocatorInt.put", "link" : "org\/saddle\/locator\/LocatorInt.html#put(key:Int,value:Int):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(key: Int): Int", "member" : "org.saddle.locator.LocatorInt.get", "link" : "org\/saddle\/locator\/LocatorInt.html#get(key:Int):Int", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Int): Boolean", "member" : "org.saddle.locator.LocatorInt.contains", "link" : "org\/saddle\/locator\/LocatorInt.html#contains(key:Int):Boolean", "kind" : "def"}, {"label" : "cts", "tail" : ": IntMap", "member" : "org.saddle.locator.LocatorInt.cts", "link" : "org\/saddle\/locator\/LocatorInt.html#cts:org.saddle.util.IntMap", "kind" : "val"}, {"label" : "map", "tail" : ": IntMap", "member" : "org.saddle.locator.LocatorInt.map", "link" : "org\/saddle\/locator\/LocatorInt.html#map:org.saddle.util.IntMap", "kind" : "val"}, {"label" : "keyOrder", "tail" : ": Buffer[Int]", "member" : "org.saddle.locator.LocatorInt.keyOrder", "link" : "org\/saddle\/locator\/LocatorInt.html#keyOrder:org.saddle.Buffer[Int]", "kind" : "val"}, {"member" : "org.saddle.locator.LocatorInt#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/locator\/LocatorInt.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/locator\/LocatorInt.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/locator\/LocatorInt.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/locator\/LocatorInt.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/locator\/LocatorInt.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/locator\/LocatorInt.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/locator\/LocatorInt.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/LocatorInt.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/LocatorInt.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/LocatorInt.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/locator\/LocatorInt.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/locator\/LocatorInt.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/locator\/LocatorInt.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/locator\/LocatorInt.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/locator\/LocatorInt.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/locator\/LocatorInt.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/locator\/LocatorInt.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/locator\/LocatorInt.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/locator\/LocatorInt.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/locator\/LocatorInt.html", "kind" : "class"}, {"name" : "org.saddle.locator.LocatorLong", "shortDescription" : "", "members_class" : [{"label" : "size", "tail" : "(): Int", "member" : "org.saddle.locator.LocatorLong.size", "link" : "org\/saddle\/locator\/LocatorLong.html#size:Int", "kind" : "def"}, {"label" : "counts", "tail" : "(): Array[Int]", "member" : "org.saddle.locator.LocatorLong.counts", "link" : "org\/saddle\/locator\/LocatorLong.html#counts():Array[Int]", "kind" : "def"}, {"label" : "keys", "tail" : "(): Array[Long]", "member" : "org.saddle.locator.LocatorLong.keys", "link" : "org\/saddle\/locator\/LocatorLong.html#keys():Array[Long]", "kind" : "def"}, {"label" : "inc", "tail" : "(key: Long): Int", "member" : "org.saddle.locator.LocatorLong.inc", "link" : "org\/saddle\/locator\/LocatorLong.html#inc(key:Long):Int", "kind" : "def"}, {"label" : "count", "tail" : "(key: Long): Int", "member" : "org.saddle.locator.LocatorLong.count", "link" : "org\/saddle\/locator\/LocatorLong.html#count(key:Long):Int", "kind" : "def"}, {"label" : "put", "tail" : "(key: Long, value: Int): Unit", "member" : "org.saddle.locator.LocatorLong.put", "link" : "org\/saddle\/locator\/LocatorLong.html#put(key:Long,value:Int):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(key: Long): Int", "member" : "org.saddle.locator.LocatorLong.get", "link" : "org\/saddle\/locator\/LocatorLong.html#get(key:Long):Int", "kind" : "def"}, {"label" : "contains", "tail" : "(key: Long): Boolean", "member" : "org.saddle.locator.LocatorLong.contains", "link" : "org\/saddle\/locator\/LocatorLong.html#contains(key:Long):Boolean", "kind" : "def"}, {"label" : "cts", "tail" : ": LongMap", "member" : "org.saddle.locator.LocatorLong.cts", "link" : "org\/saddle\/locator\/LocatorLong.html#cts:org.saddle.util.LongMap", "kind" : "val"}, {"label" : "map", "tail" : ": LongMap", "member" : "org.saddle.locator.LocatorLong.map", "link" : "org\/saddle\/locator\/LocatorLong.html#map:org.saddle.util.LongMap", "kind" : "val"}, {"label" : "keyOrder", "tail" : ": Buffer[Long]", "member" : "org.saddle.locator.LocatorLong.keyOrder", "link" : "org\/saddle\/locator\/LocatorLong.html#keyOrder:org.saddle.Buffer[Long]", "kind" : "val"}, {"member" : "org.saddle.locator.LocatorLong#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/saddle\/locator\/LocatorLong.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/saddle\/locator\/LocatorLong.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/saddle\/locator\/LocatorLong.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/saddle\/locator\/LocatorLong.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/saddle\/locator\/LocatorLong.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/saddle\/locator\/LocatorLong.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/saddle\/locator\/LocatorLong.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/LocatorLong.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/LocatorLong.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/saddle\/locator\/LocatorLong.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/saddle\/locator\/LocatorLong.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/saddle\/locator\/LocatorLong.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/saddle\/locator\/LocatorLong.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/saddle\/locator\/LocatorLong.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/saddle\/locator\/LocatorLong.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/saddle\/locator\/LocatorLong.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/saddle\/locator\/LocatorLong.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/saddle\/locator\/LocatorLong.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/saddle\/locator\/LocatorLong.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/saddle\/locator\/LocatorLong.html", "kind" : "class"}]};